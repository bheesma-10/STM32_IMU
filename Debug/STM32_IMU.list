
STM32_IMU.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00008244  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000538  08008418  08008418  00018418  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08008950  08008950  000201d4  2**0
                  CONTENTS
  4 .ARM          00000008  08008950  08008950  00018950  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08008958  08008958  000201d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08008958  08008958  00018958  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800895c  0800895c  0001895c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d4  20000000  08008960  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000d0  200001d8  08008b34  000201d8  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  200002a8  08008b34  000202a8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201d4  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000357a  00000000  00000000  00020204  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000d28  00000000  00000000  0002377e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000340  00000000  00000000  000244a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000002a8  00000000  00000000  000247e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001cf3e  00000000  00000000  00024a90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000466b  00000000  00000000  000419ce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000a2cd7  00000000  00000000  00046039  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000e8d10  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000222c  00000000  00000000  000e8d60  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200001d8 	.word	0x200001d8
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080083fc 	.word	0x080083fc

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200001dc 	.word	0x200001dc
 800020c:	080083fc 	.word	0x080083fc

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2uiz>:
 8000be8:	004a      	lsls	r2, r1, #1
 8000bea:	d211      	bcs.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bec:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bf0:	d211      	bcs.n	8000c16 <__aeabi_d2uiz+0x2e>
 8000bf2:	d50d      	bpl.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bf4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bf8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bfc:	d40e      	bmi.n	8000c1c <__aeabi_d2uiz+0x34>
 8000bfe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c02:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000c06:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000c0a:	fa23 f002 	lsr.w	r0, r3, r2
 8000c0e:	4770      	bx	lr
 8000c10:	f04f 0000 	mov.w	r0, #0
 8000c14:	4770      	bx	lr
 8000c16:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000c1a:	d102      	bne.n	8000c22 <__aeabi_d2uiz+0x3a>
 8000c1c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000c20:	4770      	bx	lr
 8000c22:	f04f 0000 	mov.w	r0, #0
 8000c26:	4770      	bx	lr

08000c28 <__aeabi_d2f>:
 8000c28:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c2c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000c30:	bf24      	itt	cs
 8000c32:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c36:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c3a:	d90d      	bls.n	8000c58 <__aeabi_d2f+0x30>
 8000c3c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c40:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c44:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c48:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c4c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c50:	bf08      	it	eq
 8000c52:	f020 0001 	biceq.w	r0, r0, #1
 8000c56:	4770      	bx	lr
 8000c58:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c5c:	d121      	bne.n	8000ca2 <__aeabi_d2f+0x7a>
 8000c5e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c62:	bfbc      	itt	lt
 8000c64:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c68:	4770      	bxlt	lr
 8000c6a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c6e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c72:	f1c2 0218 	rsb	r2, r2, #24
 8000c76:	f1c2 0c20 	rsb	ip, r2, #32
 8000c7a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c7e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c82:	bf18      	it	ne
 8000c84:	f040 0001 	orrne.w	r0, r0, #1
 8000c88:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c8c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c90:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c94:	ea40 000c 	orr.w	r0, r0, ip
 8000c98:	fa23 f302 	lsr.w	r3, r3, r2
 8000c9c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000ca0:	e7cc      	b.n	8000c3c <__aeabi_d2f+0x14>
 8000ca2:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000ca6:	d107      	bne.n	8000cb8 <__aeabi_d2f+0x90>
 8000ca8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000cac:	bf1e      	ittt	ne
 8000cae:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000cb2:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000cb6:	4770      	bxne	lr
 8000cb8:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000cbc:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000cc0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000cc4:	4770      	bx	lr
 8000cc6:	bf00      	nop

08000cc8 <__aeabi_uldivmod>:
 8000cc8:	b953      	cbnz	r3, 8000ce0 <__aeabi_uldivmod+0x18>
 8000cca:	b94a      	cbnz	r2, 8000ce0 <__aeabi_uldivmod+0x18>
 8000ccc:	2900      	cmp	r1, #0
 8000cce:	bf08      	it	eq
 8000cd0:	2800      	cmpeq	r0, #0
 8000cd2:	bf1c      	itt	ne
 8000cd4:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8000cd8:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8000cdc:	f000 b9aa 	b.w	8001034 <__aeabi_idiv0>
 8000ce0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ce4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ce8:	f000 f83c 	bl	8000d64 <__udivmoddi4>
 8000cec:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cf0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cf4:	b004      	add	sp, #16
 8000cf6:	4770      	bx	lr

08000cf8 <__aeabi_d2lz>:
 8000cf8:	b538      	push	{r3, r4, r5, lr}
 8000cfa:	2200      	movs	r2, #0
 8000cfc:	2300      	movs	r3, #0
 8000cfe:	4604      	mov	r4, r0
 8000d00:	460d      	mov	r5, r1
 8000d02:	f7ff ff0b 	bl	8000b1c <__aeabi_dcmplt>
 8000d06:	b928      	cbnz	r0, 8000d14 <__aeabi_d2lz+0x1c>
 8000d08:	4620      	mov	r0, r4
 8000d0a:	4629      	mov	r1, r5
 8000d0c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000d10:	f000 b80a 	b.w	8000d28 <__aeabi_d2ulz>
 8000d14:	4620      	mov	r0, r4
 8000d16:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000d1a:	f000 f805 	bl	8000d28 <__aeabi_d2ulz>
 8000d1e:	4240      	negs	r0, r0
 8000d20:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d24:	bd38      	pop	{r3, r4, r5, pc}
 8000d26:	bf00      	nop

08000d28 <__aeabi_d2ulz>:
 8000d28:	b5d0      	push	{r4, r6, r7, lr}
 8000d2a:	4b0c      	ldr	r3, [pc, #48]	; (8000d5c <__aeabi_d2ulz+0x34>)
 8000d2c:	2200      	movs	r2, #0
 8000d2e:	4606      	mov	r6, r0
 8000d30:	460f      	mov	r7, r1
 8000d32:	f7ff fc81 	bl	8000638 <__aeabi_dmul>
 8000d36:	f7ff ff57 	bl	8000be8 <__aeabi_d2uiz>
 8000d3a:	4604      	mov	r4, r0
 8000d3c:	f7ff fc02 	bl	8000544 <__aeabi_ui2d>
 8000d40:	4b07      	ldr	r3, [pc, #28]	; (8000d60 <__aeabi_d2ulz+0x38>)
 8000d42:	2200      	movs	r2, #0
 8000d44:	f7ff fc78 	bl	8000638 <__aeabi_dmul>
 8000d48:	4602      	mov	r2, r0
 8000d4a:	460b      	mov	r3, r1
 8000d4c:	4630      	mov	r0, r6
 8000d4e:	4639      	mov	r1, r7
 8000d50:	f7ff faba 	bl	80002c8 <__aeabi_dsub>
 8000d54:	f7ff ff48 	bl	8000be8 <__aeabi_d2uiz>
 8000d58:	4621      	mov	r1, r4
 8000d5a:	bdd0      	pop	{r4, r6, r7, pc}
 8000d5c:	3df00000 	.word	0x3df00000
 8000d60:	41f00000 	.word	0x41f00000

08000d64 <__udivmoddi4>:
 8000d64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d68:	9d08      	ldr	r5, [sp, #32]
 8000d6a:	4604      	mov	r4, r0
 8000d6c:	468e      	mov	lr, r1
 8000d6e:	2b00      	cmp	r3, #0
 8000d70:	d14d      	bne.n	8000e0e <__udivmoddi4+0xaa>
 8000d72:	428a      	cmp	r2, r1
 8000d74:	4694      	mov	ip, r2
 8000d76:	d969      	bls.n	8000e4c <__udivmoddi4+0xe8>
 8000d78:	fab2 f282 	clz	r2, r2
 8000d7c:	b152      	cbz	r2, 8000d94 <__udivmoddi4+0x30>
 8000d7e:	fa01 f302 	lsl.w	r3, r1, r2
 8000d82:	f1c2 0120 	rsb	r1, r2, #32
 8000d86:	fa20 f101 	lsr.w	r1, r0, r1
 8000d8a:	fa0c fc02 	lsl.w	ip, ip, r2
 8000d8e:	ea41 0e03 	orr.w	lr, r1, r3
 8000d92:	4094      	lsls	r4, r2
 8000d94:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000d98:	0c21      	lsrs	r1, r4, #16
 8000d9a:	fbbe f6f8 	udiv	r6, lr, r8
 8000d9e:	fa1f f78c 	uxth.w	r7, ip
 8000da2:	fb08 e316 	mls	r3, r8, r6, lr
 8000da6:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000daa:	fb06 f107 	mul.w	r1, r6, r7
 8000dae:	4299      	cmp	r1, r3
 8000db0:	d90a      	bls.n	8000dc8 <__udivmoddi4+0x64>
 8000db2:	eb1c 0303 	adds.w	r3, ip, r3
 8000db6:	f106 30ff 	add.w	r0, r6, #4294967295	; 0xffffffff
 8000dba:	f080 811f 	bcs.w	8000ffc <__udivmoddi4+0x298>
 8000dbe:	4299      	cmp	r1, r3
 8000dc0:	f240 811c 	bls.w	8000ffc <__udivmoddi4+0x298>
 8000dc4:	3e02      	subs	r6, #2
 8000dc6:	4463      	add	r3, ip
 8000dc8:	1a5b      	subs	r3, r3, r1
 8000dca:	b2a4      	uxth	r4, r4
 8000dcc:	fbb3 f0f8 	udiv	r0, r3, r8
 8000dd0:	fb08 3310 	mls	r3, r8, r0, r3
 8000dd4:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000dd8:	fb00 f707 	mul.w	r7, r0, r7
 8000ddc:	42a7      	cmp	r7, r4
 8000dde:	d90a      	bls.n	8000df6 <__udivmoddi4+0x92>
 8000de0:	eb1c 0404 	adds.w	r4, ip, r4
 8000de4:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8000de8:	f080 810a 	bcs.w	8001000 <__udivmoddi4+0x29c>
 8000dec:	42a7      	cmp	r7, r4
 8000dee:	f240 8107 	bls.w	8001000 <__udivmoddi4+0x29c>
 8000df2:	4464      	add	r4, ip
 8000df4:	3802      	subs	r0, #2
 8000df6:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000dfa:	1be4      	subs	r4, r4, r7
 8000dfc:	2600      	movs	r6, #0
 8000dfe:	b11d      	cbz	r5, 8000e08 <__udivmoddi4+0xa4>
 8000e00:	40d4      	lsrs	r4, r2
 8000e02:	2300      	movs	r3, #0
 8000e04:	e9c5 4300 	strd	r4, r3, [r5]
 8000e08:	4631      	mov	r1, r6
 8000e0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e0e:	428b      	cmp	r3, r1
 8000e10:	d909      	bls.n	8000e26 <__udivmoddi4+0xc2>
 8000e12:	2d00      	cmp	r5, #0
 8000e14:	f000 80ef 	beq.w	8000ff6 <__udivmoddi4+0x292>
 8000e18:	2600      	movs	r6, #0
 8000e1a:	e9c5 0100 	strd	r0, r1, [r5]
 8000e1e:	4630      	mov	r0, r6
 8000e20:	4631      	mov	r1, r6
 8000e22:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e26:	fab3 f683 	clz	r6, r3
 8000e2a:	2e00      	cmp	r6, #0
 8000e2c:	d14a      	bne.n	8000ec4 <__udivmoddi4+0x160>
 8000e2e:	428b      	cmp	r3, r1
 8000e30:	d302      	bcc.n	8000e38 <__udivmoddi4+0xd4>
 8000e32:	4282      	cmp	r2, r0
 8000e34:	f200 80f9 	bhi.w	800102a <__udivmoddi4+0x2c6>
 8000e38:	1a84      	subs	r4, r0, r2
 8000e3a:	eb61 0303 	sbc.w	r3, r1, r3
 8000e3e:	2001      	movs	r0, #1
 8000e40:	469e      	mov	lr, r3
 8000e42:	2d00      	cmp	r5, #0
 8000e44:	d0e0      	beq.n	8000e08 <__udivmoddi4+0xa4>
 8000e46:	e9c5 4e00 	strd	r4, lr, [r5]
 8000e4a:	e7dd      	b.n	8000e08 <__udivmoddi4+0xa4>
 8000e4c:	b902      	cbnz	r2, 8000e50 <__udivmoddi4+0xec>
 8000e4e:	deff      	udf	#255	; 0xff
 8000e50:	fab2 f282 	clz	r2, r2
 8000e54:	2a00      	cmp	r2, #0
 8000e56:	f040 8092 	bne.w	8000f7e <__udivmoddi4+0x21a>
 8000e5a:	eba1 010c 	sub.w	r1, r1, ip
 8000e5e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000e62:	fa1f fe8c 	uxth.w	lr, ip
 8000e66:	2601      	movs	r6, #1
 8000e68:	0c20      	lsrs	r0, r4, #16
 8000e6a:	fbb1 f3f7 	udiv	r3, r1, r7
 8000e6e:	fb07 1113 	mls	r1, r7, r3, r1
 8000e72:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000e76:	fb0e f003 	mul.w	r0, lr, r3
 8000e7a:	4288      	cmp	r0, r1
 8000e7c:	d908      	bls.n	8000e90 <__udivmoddi4+0x12c>
 8000e7e:	eb1c 0101 	adds.w	r1, ip, r1
 8000e82:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8000e86:	d202      	bcs.n	8000e8e <__udivmoddi4+0x12a>
 8000e88:	4288      	cmp	r0, r1
 8000e8a:	f200 80cb 	bhi.w	8001024 <__udivmoddi4+0x2c0>
 8000e8e:	4643      	mov	r3, r8
 8000e90:	1a09      	subs	r1, r1, r0
 8000e92:	b2a4      	uxth	r4, r4
 8000e94:	fbb1 f0f7 	udiv	r0, r1, r7
 8000e98:	fb07 1110 	mls	r1, r7, r0, r1
 8000e9c:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000ea0:	fb0e fe00 	mul.w	lr, lr, r0
 8000ea4:	45a6      	cmp	lr, r4
 8000ea6:	d908      	bls.n	8000eba <__udivmoddi4+0x156>
 8000ea8:	eb1c 0404 	adds.w	r4, ip, r4
 8000eac:	f100 31ff 	add.w	r1, r0, #4294967295	; 0xffffffff
 8000eb0:	d202      	bcs.n	8000eb8 <__udivmoddi4+0x154>
 8000eb2:	45a6      	cmp	lr, r4
 8000eb4:	f200 80bb 	bhi.w	800102e <__udivmoddi4+0x2ca>
 8000eb8:	4608      	mov	r0, r1
 8000eba:	eba4 040e 	sub.w	r4, r4, lr
 8000ebe:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000ec2:	e79c      	b.n	8000dfe <__udivmoddi4+0x9a>
 8000ec4:	f1c6 0720 	rsb	r7, r6, #32
 8000ec8:	40b3      	lsls	r3, r6
 8000eca:	fa22 fc07 	lsr.w	ip, r2, r7
 8000ece:	ea4c 0c03 	orr.w	ip, ip, r3
 8000ed2:	fa20 f407 	lsr.w	r4, r0, r7
 8000ed6:	fa01 f306 	lsl.w	r3, r1, r6
 8000eda:	431c      	orrs	r4, r3
 8000edc:	40f9      	lsrs	r1, r7
 8000ede:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000ee2:	fa00 f306 	lsl.w	r3, r0, r6
 8000ee6:	fbb1 f8f9 	udiv	r8, r1, r9
 8000eea:	0c20      	lsrs	r0, r4, #16
 8000eec:	fa1f fe8c 	uxth.w	lr, ip
 8000ef0:	fb09 1118 	mls	r1, r9, r8, r1
 8000ef4:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000ef8:	fb08 f00e 	mul.w	r0, r8, lr
 8000efc:	4288      	cmp	r0, r1
 8000efe:	fa02 f206 	lsl.w	r2, r2, r6
 8000f02:	d90b      	bls.n	8000f1c <__udivmoddi4+0x1b8>
 8000f04:	eb1c 0101 	adds.w	r1, ip, r1
 8000f08:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8000f0c:	f080 8088 	bcs.w	8001020 <__udivmoddi4+0x2bc>
 8000f10:	4288      	cmp	r0, r1
 8000f12:	f240 8085 	bls.w	8001020 <__udivmoddi4+0x2bc>
 8000f16:	f1a8 0802 	sub.w	r8, r8, #2
 8000f1a:	4461      	add	r1, ip
 8000f1c:	1a09      	subs	r1, r1, r0
 8000f1e:	b2a4      	uxth	r4, r4
 8000f20:	fbb1 f0f9 	udiv	r0, r1, r9
 8000f24:	fb09 1110 	mls	r1, r9, r0, r1
 8000f28:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000f2c:	fb00 fe0e 	mul.w	lr, r0, lr
 8000f30:	458e      	cmp	lr, r1
 8000f32:	d908      	bls.n	8000f46 <__udivmoddi4+0x1e2>
 8000f34:	eb1c 0101 	adds.w	r1, ip, r1
 8000f38:	f100 34ff 	add.w	r4, r0, #4294967295	; 0xffffffff
 8000f3c:	d26c      	bcs.n	8001018 <__udivmoddi4+0x2b4>
 8000f3e:	458e      	cmp	lr, r1
 8000f40:	d96a      	bls.n	8001018 <__udivmoddi4+0x2b4>
 8000f42:	3802      	subs	r0, #2
 8000f44:	4461      	add	r1, ip
 8000f46:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000f4a:	fba0 9402 	umull	r9, r4, r0, r2
 8000f4e:	eba1 010e 	sub.w	r1, r1, lr
 8000f52:	42a1      	cmp	r1, r4
 8000f54:	46c8      	mov	r8, r9
 8000f56:	46a6      	mov	lr, r4
 8000f58:	d356      	bcc.n	8001008 <__udivmoddi4+0x2a4>
 8000f5a:	d053      	beq.n	8001004 <__udivmoddi4+0x2a0>
 8000f5c:	b15d      	cbz	r5, 8000f76 <__udivmoddi4+0x212>
 8000f5e:	ebb3 0208 	subs.w	r2, r3, r8
 8000f62:	eb61 010e 	sbc.w	r1, r1, lr
 8000f66:	fa01 f707 	lsl.w	r7, r1, r7
 8000f6a:	fa22 f306 	lsr.w	r3, r2, r6
 8000f6e:	40f1      	lsrs	r1, r6
 8000f70:	431f      	orrs	r7, r3
 8000f72:	e9c5 7100 	strd	r7, r1, [r5]
 8000f76:	2600      	movs	r6, #0
 8000f78:	4631      	mov	r1, r6
 8000f7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f7e:	f1c2 0320 	rsb	r3, r2, #32
 8000f82:	40d8      	lsrs	r0, r3
 8000f84:	fa0c fc02 	lsl.w	ip, ip, r2
 8000f88:	fa21 f303 	lsr.w	r3, r1, r3
 8000f8c:	4091      	lsls	r1, r2
 8000f8e:	4301      	orrs	r1, r0
 8000f90:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000f94:	fa1f fe8c 	uxth.w	lr, ip
 8000f98:	fbb3 f0f7 	udiv	r0, r3, r7
 8000f9c:	fb07 3610 	mls	r6, r7, r0, r3
 8000fa0:	0c0b      	lsrs	r3, r1, #16
 8000fa2:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000fa6:	fb00 f60e 	mul.w	r6, r0, lr
 8000faa:	429e      	cmp	r6, r3
 8000fac:	fa04 f402 	lsl.w	r4, r4, r2
 8000fb0:	d908      	bls.n	8000fc4 <__udivmoddi4+0x260>
 8000fb2:	eb1c 0303 	adds.w	r3, ip, r3
 8000fb6:	f100 38ff 	add.w	r8, r0, #4294967295	; 0xffffffff
 8000fba:	d22f      	bcs.n	800101c <__udivmoddi4+0x2b8>
 8000fbc:	429e      	cmp	r6, r3
 8000fbe:	d92d      	bls.n	800101c <__udivmoddi4+0x2b8>
 8000fc0:	3802      	subs	r0, #2
 8000fc2:	4463      	add	r3, ip
 8000fc4:	1b9b      	subs	r3, r3, r6
 8000fc6:	b289      	uxth	r1, r1
 8000fc8:	fbb3 f6f7 	udiv	r6, r3, r7
 8000fcc:	fb07 3316 	mls	r3, r7, r6, r3
 8000fd0:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000fd4:	fb06 f30e 	mul.w	r3, r6, lr
 8000fd8:	428b      	cmp	r3, r1
 8000fda:	d908      	bls.n	8000fee <__udivmoddi4+0x28a>
 8000fdc:	eb1c 0101 	adds.w	r1, ip, r1
 8000fe0:	f106 38ff 	add.w	r8, r6, #4294967295	; 0xffffffff
 8000fe4:	d216      	bcs.n	8001014 <__udivmoddi4+0x2b0>
 8000fe6:	428b      	cmp	r3, r1
 8000fe8:	d914      	bls.n	8001014 <__udivmoddi4+0x2b0>
 8000fea:	3e02      	subs	r6, #2
 8000fec:	4461      	add	r1, ip
 8000fee:	1ac9      	subs	r1, r1, r3
 8000ff0:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000ff4:	e738      	b.n	8000e68 <__udivmoddi4+0x104>
 8000ff6:	462e      	mov	r6, r5
 8000ff8:	4628      	mov	r0, r5
 8000ffa:	e705      	b.n	8000e08 <__udivmoddi4+0xa4>
 8000ffc:	4606      	mov	r6, r0
 8000ffe:	e6e3      	b.n	8000dc8 <__udivmoddi4+0x64>
 8001000:	4618      	mov	r0, r3
 8001002:	e6f8      	b.n	8000df6 <__udivmoddi4+0x92>
 8001004:	454b      	cmp	r3, r9
 8001006:	d2a9      	bcs.n	8000f5c <__udivmoddi4+0x1f8>
 8001008:	ebb9 0802 	subs.w	r8, r9, r2
 800100c:	eb64 0e0c 	sbc.w	lr, r4, ip
 8001010:	3801      	subs	r0, #1
 8001012:	e7a3      	b.n	8000f5c <__udivmoddi4+0x1f8>
 8001014:	4646      	mov	r6, r8
 8001016:	e7ea      	b.n	8000fee <__udivmoddi4+0x28a>
 8001018:	4620      	mov	r0, r4
 800101a:	e794      	b.n	8000f46 <__udivmoddi4+0x1e2>
 800101c:	4640      	mov	r0, r8
 800101e:	e7d1      	b.n	8000fc4 <__udivmoddi4+0x260>
 8001020:	46d0      	mov	r8, sl
 8001022:	e77b      	b.n	8000f1c <__udivmoddi4+0x1b8>
 8001024:	3b02      	subs	r3, #2
 8001026:	4461      	add	r1, ip
 8001028:	e732      	b.n	8000e90 <__udivmoddi4+0x12c>
 800102a:	4630      	mov	r0, r6
 800102c:	e709      	b.n	8000e42 <__udivmoddi4+0xde>
 800102e:	4464      	add	r4, ip
 8001030:	3802      	subs	r0, #2
 8001032:	e742      	b.n	8000eba <__udivmoddi4+0x156>

08001034 <__aeabi_idiv0>:
 8001034:	4770      	bx	lr
 8001036:	bf00      	nop

08001038 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8001038:	b480      	push	{r7}
 800103a:	b083      	sub	sp, #12
 800103c:	af00      	add	r7, sp, #0
 800103e:	4603      	mov	r3, r0
 8001040:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001042:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001046:	2b00      	cmp	r3, #0
 8001048:	db0b      	blt.n	8001062 <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800104a:	79fb      	ldrb	r3, [r7, #7]
 800104c:	f003 021f 	and.w	r2, r3, #31
 8001050:	4907      	ldr	r1, [pc, #28]	; (8001070 <__NVIC_EnableIRQ+0x38>)
 8001052:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001056:	095b      	lsrs	r3, r3, #5
 8001058:	2001      	movs	r0, #1
 800105a:	fa00 f202 	lsl.w	r2, r0, r2
 800105e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8001062:	bf00      	nop
 8001064:	370c      	adds	r7, #12
 8001066:	46bd      	mov	sp, r7
 8001068:	f85d 7b04 	ldr.w	r7, [sp], #4
 800106c:	4770      	bx	lr
 800106e:	bf00      	nop
 8001070:	e000e100 	.word	0xe000e100

08001074 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001074:	b480      	push	{r7}
 8001076:	b083      	sub	sp, #12
 8001078:	af00      	add	r7, sp, #0
 800107a:	4603      	mov	r3, r0
 800107c:	6039      	str	r1, [r7, #0]
 800107e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001080:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001084:	2b00      	cmp	r3, #0
 8001086:	db0a      	blt.n	800109e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001088:	683b      	ldr	r3, [r7, #0]
 800108a:	b2da      	uxtb	r2, r3
 800108c:	490c      	ldr	r1, [pc, #48]	; (80010c0 <__NVIC_SetPriority+0x4c>)
 800108e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001092:	0112      	lsls	r2, r2, #4
 8001094:	b2d2      	uxtb	r2, r2
 8001096:	440b      	add	r3, r1
 8001098:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 800109c:	e00a      	b.n	80010b4 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800109e:	683b      	ldr	r3, [r7, #0]
 80010a0:	b2da      	uxtb	r2, r3
 80010a2:	4908      	ldr	r1, [pc, #32]	; (80010c4 <__NVIC_SetPriority+0x50>)
 80010a4:	79fb      	ldrb	r3, [r7, #7]
 80010a6:	f003 030f 	and.w	r3, r3, #15
 80010aa:	3b04      	subs	r3, #4
 80010ac:	0112      	lsls	r2, r2, #4
 80010ae:	b2d2      	uxtb	r2, r2
 80010b0:	440b      	add	r3, r1
 80010b2:	761a      	strb	r2, [r3, #24]
}
 80010b4:	bf00      	nop
 80010b6:	370c      	adds	r7, #12
 80010b8:	46bd      	mov	sp, r7
 80010ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010be:	4770      	bx	lr
 80010c0:	e000e100 	.word	0xe000e100
 80010c4:	e000ed00 	.word	0xe000ed00

080010c8 <LL_RCC_GetAHBPrescaler>:
  *         @arg @ref LL_RCC_SYSCLK_DIV_128
  *         @arg @ref LL_RCC_SYSCLK_DIV_256
  *         @arg @ref LL_RCC_SYSCLK_DIV_512
  */
__STATIC_INLINE uint32_t LL_RCC_GetAHBPrescaler(void)
{
 80010c8:	b480      	push	{r7}
 80010ca:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_HPRE));
 80010cc:	4b04      	ldr	r3, [pc, #16]	; (80010e0 <LL_RCC_GetAHBPrescaler+0x18>)
 80010ce:	689b      	ldr	r3, [r3, #8]
 80010d0:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
}
 80010d4:	4618      	mov	r0, r3
 80010d6:	46bd      	mov	sp, r7
 80010d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010dc:	4770      	bx	lr
 80010de:	bf00      	nop
 80010e0:	40023800 	.word	0x40023800

080010e4 <LL_RCC_GetAPB1Prescaler>:
  *         @arg @ref LL_RCC_APB1_DIV_4
  *         @arg @ref LL_RCC_APB1_DIV_8
  *         @arg @ref LL_RCC_APB1_DIV_16
  */
__STATIC_INLINE uint32_t LL_RCC_GetAPB1Prescaler(void)
{
 80010e4:	b480      	push	{r7}
 80010e6:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1));
 80010e8:	4b04      	ldr	r3, [pc, #16]	; (80010fc <LL_RCC_GetAPB1Prescaler+0x18>)
 80010ea:	689b      	ldr	r3, [r3, #8]
 80010ec:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
}
 80010f0:	4618      	mov	r0, r3
 80010f2:	46bd      	mov	sp, r7
 80010f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010f8:	4770      	bx	lr
 80010fa:	bf00      	nop
 80010fc:	40023800 	.word	0x40023800

08001100 <LL_RCC_GetAPB2Prescaler>:
  *         @arg @ref LL_RCC_APB2_DIV_4
  *         @arg @ref LL_RCC_APB2_DIV_8
  *         @arg @ref LL_RCC_APB2_DIV_16
  */
__STATIC_INLINE uint32_t LL_RCC_GetAPB2Prescaler(void)
{
 8001100:	b480      	push	{r7}
 8001102:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2));
 8001104:	4b04      	ldr	r3, [pc, #16]	; (8001118 <LL_RCC_GetAPB2Prescaler+0x18>)
 8001106:	689b      	ldr	r3, [r3, #8]
 8001108:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
}
 800110c:	4618      	mov	r0, r3
 800110e:	46bd      	mov	sp, r7
 8001110:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001114:	4770      	bx	lr
 8001116:	bf00      	nop
 8001118:	40023800 	.word	0x40023800

0800111c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800111c:	b580      	push	{r7, lr}
 800111e:	b084      	sub	sp, #16
 8001120:	af02      	add	r7, sp, #8
  /* USER CODE BEGIN 1 */
	/*Setup system clock*/
	SystemClockInit();
 8001122:	f000 f891 	bl	8001248 <SystemClockInit>

  /* USER CODE END Init */

  /* USER CODE BEGIN SysInit */
	/*Initialize peripherals*/
    Gpio_Init();
 8001126:	f000 f9dd 	bl	80014e4 <Gpio_Init>
    Timer_Init();
 800112a:	f000 fa11 	bl	8001550 <Timer_Init>
    I2C_Init();
 800112e:	f000 fa61 	bl	80015f4 <I2C_Init>
    Usart_Init();
 8001132:	f000 fb75 	bl	8001820 <Usart_Init>

  /* USER CODE BEGIN 2 */


    //Initialize usart & i2c instance
    IMU_Uart_Init(&huart);
 8001136:	4839      	ldr	r0, [pc, #228]	; (800121c <main+0x100>)
 8001138:	f001 ff78 	bl	800302c <IMU_Uart_Init>
    IMU_I2C_Init(&hi2c);
 800113c:	4838      	ldr	r0, [pc, #224]	; (8001220 <main+0x104>)
 800113e:	f001 fb81 	bl	8002844 <IMU_I2C_Init>

    //check if device found
#if 1
    uint8_t dev_find = MPU_begin(&hi2c, &imu, IMU_I2CADDR, 1, 1);
 8001142:	2301      	movs	r3, #1
 8001144:	9300      	str	r3, [sp, #0]
 8001146:	2301      	movs	r3, #1
 8001148:	2268      	movs	r2, #104	; 0x68
 800114a:	4936      	ldr	r1, [pc, #216]	; (8001224 <main+0x108>)
 800114c:	4834      	ldr	r0, [pc, #208]	; (8001220 <main+0x104>)
 800114e:	f001 ffbd 	bl	80030cc <MPU_begin>
 8001152:	4603      	mov	r3, r0
 8001154:	71fb      	strb	r3, [r7, #7]
    if(dev_find){
 8001156:	79fb      	ldrb	r3, [r7, #7]
 8001158:	2b00      	cmp	r3, #0
 800115a:	d005      	beq.n	8001168 <main+0x4c>
    	SET_BIT(GPIOB->BSRR,GPIO_BSRR_BS14);  //LD3
 800115c:	4b32      	ldr	r3, [pc, #200]	; (8001228 <main+0x10c>)
 800115e:	699b      	ldr	r3, [r3, #24]
 8001160:	4a31      	ldr	r2, [pc, #196]	; (8001228 <main+0x10c>)
 8001162:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001166:	6193      	str	r3, [r2, #24]
    }

    //calibrate gyro
    MPU_calibrateGyro(&hi2c, &imu, 2000);
 8001168:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
 800116c:	492d      	ldr	r1, [pc, #180]	; (8001224 <main+0x108>)
 800116e:	482c      	ldr	r0, [pc, #176]	; (8001220 <main+0x104>)
 8001170:	f002 f937 	bl	80033e2 <MPU_calibrateGyro>
    SET_BIT(GPIOB->BSRR,GPIO_BSRR_BS7);     //LD2
 8001174:	4b2c      	ldr	r3, [pc, #176]	; (8001228 <main+0x10c>)
 8001176:	699b      	ldr	r3, [r3, #24]
 8001178:	4a2b      	ldr	r2, [pc, #172]	; (8001228 <main+0x10c>)
 800117a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800117e:	6193      	str	r3, [r2, #24]

    //Initialize filter
    Filter_Init(&filter, 0.005, 0.98);  //deltaT - 5ms, alpha - 0.98
 8001180:	eddf 0a2a 	vldr	s1, [pc, #168]	; 800122c <main+0x110>
 8001184:	ed9f 0a2a 	vldr	s0, [pc, #168]	; 8001230 <main+0x114>
 8001188:	482a      	ldr	r0, [pc, #168]	; (8001234 <main+0x118>)
 800118a:	f001 f9f0 	bl	800256e <Filter_Init>

    start = 1;
 800118e:	4b2a      	ldr	r3, [pc, #168]	; (8001238 <main+0x11c>)
 8001190:	2201      	movs	r2, #1
 8001192:	701a      	strb	r2, [r3, #0]
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
#if 1
	  if(send_data){
 8001194:	4b29      	ldr	r3, [pc, #164]	; (800123c <main+0x120>)
 8001196:	781b      	ldrb	r3, [r3, #0]
 8001198:	b2db      	uxtb	r3, r3
 800119a:	2b00      	cmp	r3, #0
 800119c:	d0fa      	beq.n	8001194 <main+0x78>
		  memset(buffer,0,sizeof(buffer));
 800119e:	220a      	movs	r2, #10
 80011a0:	2100      	movs	r1, #0
 80011a2:	4827      	ldr	r0, [pc, #156]	; (8001240 <main+0x124>)
 80011a4:	f002 fa38 	bl	8003618 <memset>
		  sprintf(buffer,"%.2f\n",filter.compAngleX);
 80011a8:	4b22      	ldr	r3, [pc, #136]	; (8001234 <main+0x118>)
 80011aa:	699b      	ldr	r3, [r3, #24]
 80011ac:	4618      	mov	r0, r3
 80011ae:	f7ff f9eb 	bl	8000588 <__aeabi_f2d>
 80011b2:	4602      	mov	r2, r0
 80011b4:	460b      	mov	r3, r1
 80011b6:	4923      	ldr	r1, [pc, #140]	; (8001244 <main+0x128>)
 80011b8:	4821      	ldr	r0, [pc, #132]	; (8001240 <main+0x124>)
 80011ba:	f003 f8b5 	bl	8004328 <siprintf>
		  Uart_TransmitData(&huart, (uint8_t*)buffer, strlen(buffer));
 80011be:	4820      	ldr	r0, [pc, #128]	; (8001240 <main+0x124>)
 80011c0:	f7ff f826 	bl	8000210 <strlen>
 80011c4:	4603      	mov	r3, r0
 80011c6:	b29b      	uxth	r3, r3
 80011c8:	461a      	mov	r2, r3
 80011ca:	491d      	ldr	r1, [pc, #116]	; (8001240 <main+0x124>)
 80011cc:	4813      	ldr	r0, [pc, #76]	; (800121c <main+0x100>)
 80011ce:	f001 ff3d 	bl	800304c <Uart_TransmitData>
		//    Uart_TransmitData(&huart, (uint8_t*)"\n", strlen("\n"));
		  delay_ms(1);
 80011d2:	2001      	movs	r0, #1
 80011d4:	f000 fe14 	bl	8001e00 <delay_ms>
		  memset(buffer,0,sizeof(buffer));
 80011d8:	220a      	movs	r2, #10
 80011da:	2100      	movs	r1, #0
 80011dc:	4818      	ldr	r0, [pc, #96]	; (8001240 <main+0x124>)
 80011de:	f002 fa1b 	bl	8003618 <memset>
		  sprintf(buffer,"%.2f\n",filter.compAngleY);
 80011e2:	4b14      	ldr	r3, [pc, #80]	; (8001234 <main+0x118>)
 80011e4:	69db      	ldr	r3, [r3, #28]
 80011e6:	4618      	mov	r0, r3
 80011e8:	f7ff f9ce 	bl	8000588 <__aeabi_f2d>
 80011ec:	4602      	mov	r2, r0
 80011ee:	460b      	mov	r3, r1
 80011f0:	4914      	ldr	r1, [pc, #80]	; (8001244 <main+0x128>)
 80011f2:	4813      	ldr	r0, [pc, #76]	; (8001240 <main+0x124>)
 80011f4:	f003 f898 	bl	8004328 <siprintf>
		  Uart_TransmitData(&huart, (uint8_t*)buffer, strlen(buffer));
 80011f8:	4811      	ldr	r0, [pc, #68]	; (8001240 <main+0x124>)
 80011fa:	f7ff f809 	bl	8000210 <strlen>
 80011fe:	4603      	mov	r3, r0
 8001200:	b29b      	uxth	r3, r3
 8001202:	461a      	mov	r2, r3
 8001204:	490e      	ldr	r1, [pc, #56]	; (8001240 <main+0x124>)
 8001206:	4805      	ldr	r0, [pc, #20]	; (800121c <main+0x100>)
 8001208:	f001 ff20 	bl	800304c <Uart_TransmitData>
		//    Uart_TransmitData(&huart, (uint8_t*)"\n", strlen("\n"));
		  delay_ms(1);
 800120c:	2001      	movs	r0, #1
 800120e:	f000 fdf7 	bl	8001e00 <delay_ms>
		  send_data = 0;
 8001212:	4b0a      	ldr	r3, [pc, #40]	; (800123c <main+0x120>)
 8001214:	2200      	movs	r2, #0
 8001216:	701a      	strb	r2, [r3, #0]
	  if(send_data){
 8001218:	e7bc      	b.n	8001194 <main+0x78>
 800121a:	bf00      	nop
 800121c:	200001f4 	.word	0x200001f4
 8001220:	2000020c 	.word	0x2000020c
 8001224:	20000220 	.word	0x20000220
 8001228:	40020400 	.word	0x40020400
 800122c:	3f7ae148 	.word	0x3f7ae148
 8001230:	3ba3d70a 	.word	0x3ba3d70a
 8001234:	2000025c 	.word	0x2000025c
 8001238:	20000292 	.word	0x20000292
 800123c:	20000293 	.word	0x20000293
 8001240:	20000288 	.word	0x20000288
 8001244:	08008418 	.word	0x08008418

08001248 <SystemClockInit>:
/* USER CODE BEGIN 4 */
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClockInit(void){
 8001248:	b580      	push	{r7, lr}
 800124a:	b084      	sub	sp, #16
 800124c:	af00      	add	r7, sp, #0
	/*****************Flash control section*****************/
	  SET_BIT(FLASH->ACR,FLASH_ACR_ICEN | FLASH_ACR_PRFTEN | FLASH_ACR_DCEN);
 800124e:	4b9c      	ldr	r3, [pc, #624]	; (80014c0 <SystemClockInit+0x278>)
 8001250:	681b      	ldr	r3, [r3, #0]
 8001252:	4a9b      	ldr	r2, [pc, #620]	; (80014c0 <SystemClockInit+0x278>)
 8001254:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8001258:	6013      	str	r3, [r2, #0]

	  //init low level hardware
	  SET_BIT(RCC->APB2ENR, RCC_APB2ENR_SYSCFGEN);
 800125a:	4b9a      	ldr	r3, [pc, #616]	; (80014c4 <SystemClockInit+0x27c>)
 800125c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800125e:	4a99      	ldr	r2, [pc, #612]	; (80014c4 <SystemClockInit+0x27c>)
 8001260:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001264:	6453      	str	r3, [r2, #68]	; 0x44
	  SET_BIT(RCC->APB1ENR, RCC_APB1ENR_PWREN);
 8001266:	4b97      	ldr	r3, [pc, #604]	; (80014c4 <SystemClockInit+0x27c>)
 8001268:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800126a:	4a96      	ldr	r2, [pc, #600]	; (80014c4 <SystemClockInit+0x27c>)
 800126c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001270:	6413      	str	r3, [r2, #64]	; 0x40
	  CLEAR_BIT(PWR->CR,PWR_CR_VOS);
 8001272:	4b95      	ldr	r3, [pc, #596]	; (80014c8 <SystemClockInit+0x280>)
 8001274:	681b      	ldr	r3, [r3, #0]
 8001276:	4a94      	ldr	r2, [pc, #592]	; (80014c8 <SystemClockInit+0x280>)
 8001278:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 800127c:	6013      	str	r3, [r2, #0]
	  SET_BIT(PWR->CR,PWR_CR_VOS);
 800127e:	4b92      	ldr	r3, [pc, #584]	; (80014c8 <SystemClockInit+0x280>)
 8001280:	681b      	ldr	r3, [r3, #0]
 8001282:	4a91      	ldr	r2, [pc, #580]	; (80014c8 <SystemClockInit+0x280>)
 8001284:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8001288:	6013      	str	r3, [r2, #0]

	  /**********************HSE section***********************/
	  //clear HSE ready interrupt
	  SET_BIT(RCC->CIR,RCC_CIR_HSERDYC);
 800128a:	4b8e      	ldr	r3, [pc, #568]	; (80014c4 <SystemClockInit+0x27c>)
 800128c:	68db      	ldr	r3, [r3, #12]
 800128e:	4a8d      	ldr	r2, [pc, #564]	; (80014c4 <SystemClockInit+0x27c>)
 8001290:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8001294:	60d3      	str	r3, [r2, #12]

	  //enable HSE ready interrupt
	  SET_BIT(RCC->CIR,RCC_CIR_HSERDYIE);
 8001296:	4b8b      	ldr	r3, [pc, #556]	; (80014c4 <SystemClockInit+0x27c>)
 8001298:	68db      	ldr	r3, [r3, #12]
 800129a:	4a8a      	ldr	r2, [pc, #552]	; (80014c4 <SystemClockInit+0x27c>)
 800129c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80012a0:	60d3      	str	r3, [r2, #12]

	  //HSE on
	  SET_BIT(RCC->CR,RCC_CR_HSEBYP);
 80012a2:	4b88      	ldr	r3, [pc, #544]	; (80014c4 <SystemClockInit+0x27c>)
 80012a4:	681b      	ldr	r3, [r3, #0]
 80012a6:	4a87      	ldr	r2, [pc, #540]	; (80014c4 <SystemClockInit+0x27c>)
 80012a8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80012ac:	6013      	str	r3, [r2, #0]
	  SET_BIT(RCC->CR,RCC_CR_HSEON);
 80012ae:	4b85      	ldr	r3, [pc, #532]	; (80014c4 <SystemClockInit+0x27c>)
 80012b0:	681b      	ldr	r3, [r3, #0]
 80012b2:	4a84      	ldr	r2, [pc, #528]	; (80014c4 <SystemClockInit+0x27c>)
 80012b4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80012b8:	6013      	str	r3, [r2, #0]

	  //wait until HSE is ready

	  while((READ_BIT(RCC->CR,RCC_CR_HSERDY)==0U) | (READ_BIT(RCC->CIR,RCC_CIR_HSERDYF)==0U) ){
 80012ba:	bf00      	nop
 80012bc:	4b81      	ldr	r3, [pc, #516]	; (80014c4 <SystemClockInit+0x27c>)
 80012be:	681b      	ldr	r3, [r3, #0]
 80012c0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80012c4:	2b00      	cmp	r3, #0
 80012c6:	bf0c      	ite	eq
 80012c8:	2301      	moveq	r3, #1
 80012ca:	2300      	movne	r3, #0
 80012cc:	b2da      	uxtb	r2, r3
 80012ce:	4b7d      	ldr	r3, [pc, #500]	; (80014c4 <SystemClockInit+0x27c>)
 80012d0:	68db      	ldr	r3, [r3, #12]
 80012d2:	f003 0308 	and.w	r3, r3, #8
 80012d6:	2b00      	cmp	r3, #0
 80012d8:	bf0c      	ite	eq
 80012da:	2301      	moveq	r3, #1
 80012dc:	2300      	movne	r3, #0
 80012de:	b2db      	uxtb	r3, r3
 80012e0:	4313      	orrs	r3, r2
 80012e2:	b2db      	uxtb	r3, r3
 80012e4:	2b00      	cmp	r3, #0
 80012e6:	d1e9      	bne.n	80012bc <SystemClockInit+0x74>
		  //wait until HSE ready interrupt is set
	  }

	  //clear HSE ready interrupt
	  SET_BIT(RCC->CIR,RCC_CIR_HSERDYC);
 80012e8:	4b76      	ldr	r3, [pc, #472]	; (80014c4 <SystemClockInit+0x27c>)
 80012ea:	68db      	ldr	r3, [r3, #12]
 80012ec:	4a75      	ldr	r2, [pc, #468]	; (80014c4 <SystemClockInit+0x27c>)
 80012ee:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 80012f2:	60d3      	str	r3, [r2, #12]

	  /**********************PLL section**********************/
	  //clear PLL ready interrupt
	  SET_BIT(RCC->CIR,RCC_CIR_PLLRDYC);
 80012f4:	4b73      	ldr	r3, [pc, #460]	; (80014c4 <SystemClockInit+0x27c>)
 80012f6:	68db      	ldr	r3, [r3, #12]
 80012f8:	4a72      	ldr	r2, [pc, #456]	; (80014c4 <SystemClockInit+0x27c>)
 80012fa:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80012fe:	60d3      	str	r3, [r2, #12]

	  //enable PLL ready interrupt
	  SET_BIT(RCC->CIR,RCC_CIR_PLLRDYIE);
 8001300:	4b70      	ldr	r3, [pc, #448]	; (80014c4 <SystemClockInit+0x27c>)
 8001302:	68db      	ldr	r3, [r3, #12]
 8001304:	4a6f      	ldr	r2, [pc, #444]	; (80014c4 <SystemClockInit+0x27c>)
 8001306:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800130a:	60d3      	str	r3, [r2, #12]

	  //PLL disable
	  CLEAR_BIT(RCC->CR,RCC_CR_PLLON);
 800130c:	4b6d      	ldr	r3, [pc, #436]	; (80014c4 <SystemClockInit+0x27c>)
 800130e:	681b      	ldr	r3, [r3, #0]
 8001310:	4a6c      	ldr	r2, [pc, #432]	; (80014c4 <SystemClockInit+0x27c>)
 8001312:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8001316:	6013      	str	r3, [r2, #0]

	  CLEAR_BIT(RCC->PLLCFGR,RCC_PLLCFGR_PLLM);
 8001318:	4b6a      	ldr	r3, [pc, #424]	; (80014c4 <SystemClockInit+0x27c>)
 800131a:	685b      	ldr	r3, [r3, #4]
 800131c:	4a69      	ldr	r2, [pc, #420]	; (80014c4 <SystemClockInit+0x27c>)
 800131e:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8001322:	6053      	str	r3, [r2, #4]
	  CLEAR_BIT(RCC->PLLCFGR,RCC_PLLCFGR_PLLN);
 8001324:	4b67      	ldr	r3, [pc, #412]	; (80014c4 <SystemClockInit+0x27c>)
 8001326:	685b      	ldr	r3, [r3, #4]
 8001328:	4a66      	ldr	r2, [pc, #408]	; (80014c4 <SystemClockInit+0x27c>)
 800132a:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800132e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8001332:	6053      	str	r3, [r2, #4]
	  CLEAR_BIT(RCC->PLLCFGR,RCC_PLLCFGR_PLLQ);
 8001334:	4b63      	ldr	r3, [pc, #396]	; (80014c4 <SystemClockInit+0x27c>)
 8001336:	685b      	ldr	r3, [r3, #4]
 8001338:	4a62      	ldr	r2, [pc, #392]	; (80014c4 <SystemClockInit+0x27c>)
 800133a:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 800133e:	6053      	str	r3, [r2, #4]
	  CLEAR_BIT(RCC->PLLCFGR,RCC_PLLCFGR_PLLP);
 8001340:	4b60      	ldr	r3, [pc, #384]	; (80014c4 <SystemClockInit+0x27c>)
 8001342:	685b      	ldr	r3, [r3, #4]
 8001344:	4a5f      	ldr	r2, [pc, #380]	; (80014c4 <SystemClockInit+0x27c>)
 8001346:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800134a:	6053      	str	r3, [r2, #4]

	  //PLL config
	  SET_BIT(RCC->PLLCFGR,(RCC_PLLCFGR_PLLM_<<0U) | (RCC_PLLCFGR_PLLN_<<6U) |
 800134c:	4b5d      	ldr	r3, [pc, #372]	; (80014c4 <SystemClockInit+0x27c>)
 800134e:	685a      	ldr	r2, [r3, #4]
 8001350:	495c      	ldr	r1, [pc, #368]	; (80014c4 <SystemClockInit+0x27c>)
 8001352:	4b5e      	ldr	r3, [pc, #376]	; (80014cc <SystemClockInit+0x284>)
 8001354:	4313      	orrs	r3, r2
 8001356:	604b      	str	r3, [r1, #4]
			  (RCC_PLLCFGR_PLLQ_<<24U) | RCC_PLLCFGR_PLLSRC_HSE);


	  //PLL enable
	  SET_BIT(RCC->CR,RCC_CR_PLLON);
 8001358:	4b5a      	ldr	r3, [pc, #360]	; (80014c4 <SystemClockInit+0x27c>)
 800135a:	681b      	ldr	r3, [r3, #0]
 800135c:	4a59      	ldr	r2, [pc, #356]	; (80014c4 <SystemClockInit+0x27c>)
 800135e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001362:	6013      	str	r3, [r2, #0]

	  //wait until PLL is ready
	  while((READ_BIT(RCC->CR,RCC_CR_PLLRDY)==0U) | (READ_BIT(RCC->CIR,RCC_CIR_PLLRDYF)==0U) ){
 8001364:	bf00      	nop
 8001366:	4b57      	ldr	r3, [pc, #348]	; (80014c4 <SystemClockInit+0x27c>)
 8001368:	681b      	ldr	r3, [r3, #0]
 800136a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800136e:	2b00      	cmp	r3, #0
 8001370:	bf0c      	ite	eq
 8001372:	2301      	moveq	r3, #1
 8001374:	2300      	movne	r3, #0
 8001376:	b2da      	uxtb	r2, r3
 8001378:	4b52      	ldr	r3, [pc, #328]	; (80014c4 <SystemClockInit+0x27c>)
 800137a:	68db      	ldr	r3, [r3, #12]
 800137c:	f003 0310 	and.w	r3, r3, #16
 8001380:	2b00      	cmp	r3, #0
 8001382:	bf0c      	ite	eq
 8001384:	2301      	moveq	r3, #1
 8001386:	2300      	movne	r3, #0
 8001388:	b2db      	uxtb	r3, r3
 800138a:	4313      	orrs	r3, r2
 800138c:	b2db      	uxtb	r3, r3
 800138e:	2b00      	cmp	r3, #0
 8001390:	d1e9      	bne.n	8001366 <SystemClockInit+0x11e>
	 	  //nop
	  }

	  //clear PLL ready interrupt
	  SET_BIT(RCC->CIR,RCC_CIR_PLLRDYC);
 8001392:	4b4c      	ldr	r3, [pc, #304]	; (80014c4 <SystemClockInit+0x27c>)
 8001394:	68db      	ldr	r3, [r3, #12]
 8001396:	4a4b      	ldr	r2, [pc, #300]	; (80014c4 <SystemClockInit+0x27c>)
 8001398:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800139c:	60d3      	str	r3, [r2, #12]

	  /***************************Flash Latency************************/
	  if(FLASH_ACR_LATENCY_5WS>(READ_REG(FLASH->ACR) & (0xFU << FLASH_ACR_LATENCY_Pos))){
 800139e:	4b48      	ldr	r3, [pc, #288]	; (80014c0 <SystemClockInit+0x278>)
 80013a0:	681b      	ldr	r3, [r3, #0]
 80013a2:	f003 030f 	and.w	r3, r3, #15
 80013a6:	2b04      	cmp	r3, #4
 80013a8:	d80c      	bhi.n	80013c4 <SystemClockInit+0x17c>
		  SET_BIT(FLASH->ACR,FLASH_ACR_LATENCY_5WS);
 80013aa:	4b45      	ldr	r3, [pc, #276]	; (80014c0 <SystemClockInit+0x278>)
 80013ac:	681b      	ldr	r3, [r3, #0]
 80013ae:	4a44      	ldr	r2, [pc, #272]	; (80014c0 <SystemClockInit+0x278>)
 80013b0:	f043 0305 	orr.w	r3, r3, #5
 80013b4:	6013      	str	r3, [r2, #0]
		  while((READ_REG(FLASH->ACR) & (0xFU << 0U))!=FLASH_ACR_LATENCY_5WS){
 80013b6:	bf00      	nop
 80013b8:	4b41      	ldr	r3, [pc, #260]	; (80014c0 <SystemClockInit+0x278>)
 80013ba:	681b      	ldr	r3, [r3, #0]
 80013bc:	f003 030f 	and.w	r3, r3, #15
 80013c0:	2b05      	cmp	r3, #5
 80013c2:	d1f9      	bne.n	80013b8 <SystemClockInit+0x170>
		  }

	  }

	  /**********************APB1 CLK**************************/
	  CLEAR_BIT(RCC->CFGR,RCC_CFGR_PPRE1);
 80013c4:	4b3f      	ldr	r3, [pc, #252]	; (80014c4 <SystemClockInit+0x27c>)
 80013c6:	689b      	ldr	r3, [r3, #8]
 80013c8:	4a3e      	ldr	r2, [pc, #248]	; (80014c4 <SystemClockInit+0x27c>)
 80013ca:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 80013ce:	6093      	str	r3, [r2, #8]
	  SET_BIT(RCC->CFGR,RCC_CFGR_PPRE1_DIV16);
 80013d0:	4b3c      	ldr	r3, [pc, #240]	; (80014c4 <SystemClockInit+0x27c>)
 80013d2:	689b      	ldr	r3, [r3, #8]
 80013d4:	4a3b      	ldr	r2, [pc, #236]	; (80014c4 <SystemClockInit+0x27c>)
 80013d6:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 80013da:	6093      	str	r3, [r2, #8]

	  /**********************APB2 CLK**************************/
	  CLEAR_BIT(RCC->CFGR,RCC_CFGR_PPRE2);
 80013dc:	4b39      	ldr	r3, [pc, #228]	; (80014c4 <SystemClockInit+0x27c>)
 80013de:	689b      	ldr	r3, [r3, #8]
 80013e0:	4a38      	ldr	r2, [pc, #224]	; (80014c4 <SystemClockInit+0x27c>)
 80013e2:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80013e6:	6093      	str	r3, [r2, #8]
	  SET_BIT(RCC->CFGR,RCC_CFGR_PPRE2_DIV16);
 80013e8:	4b36      	ldr	r3, [pc, #216]	; (80014c4 <SystemClockInit+0x27c>)
 80013ea:	689b      	ldr	r3, [r3, #8]
 80013ec:	4a35      	ldr	r2, [pc, #212]	; (80014c4 <SystemClockInit+0x27c>)
 80013ee:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80013f2:	6093      	str	r3, [r2, #8]

	  /***********************AHB CLK**************************/
	  CLEAR_BIT(RCC->CFGR,RCC_CFGR_HPRE);
 80013f4:	4b33      	ldr	r3, [pc, #204]	; (80014c4 <SystemClockInit+0x27c>)
 80013f6:	689b      	ldr	r3, [r3, #8]
 80013f8:	4a32      	ldr	r2, [pc, #200]	; (80014c4 <SystemClockInit+0x27c>)
 80013fa:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80013fe:	6093      	str	r3, [r2, #8]

	  /*********************System Clock section***************/
	  //system clock setting
	  CLEAR_BIT(RCC->CFGR,RCC_CFGR_SW);
 8001400:	4b30      	ldr	r3, [pc, #192]	; (80014c4 <SystemClockInit+0x27c>)
 8001402:	689b      	ldr	r3, [r3, #8]
 8001404:	4a2f      	ldr	r2, [pc, #188]	; (80014c4 <SystemClockInit+0x27c>)
 8001406:	f023 0303 	bic.w	r3, r3, #3
 800140a:	6093      	str	r3, [r2, #8]
	  SET_BIT(RCC->CFGR,RCC_CFGR_SW_PLL);
 800140c:	4b2d      	ldr	r3, [pc, #180]	; (80014c4 <SystemClockInit+0x27c>)
 800140e:	689b      	ldr	r3, [r3, #8]
 8001410:	4a2c      	ldr	r2, [pc, #176]	; (80014c4 <SystemClockInit+0x27c>)
 8001412:	f043 0302 	orr.w	r3, r3, #2
 8001416:	6093      	str	r3, [r2, #8]

	  while((READ_REG(RCC->CFGR) & (0x3U<<2U))!=RCC_CFGR_SWS_PLL){
 8001418:	bf00      	nop
 800141a:	4b2a      	ldr	r3, [pc, #168]	; (80014c4 <SystemClockInit+0x27c>)
 800141c:	689b      	ldr	r3, [r3, #8]
 800141e:	f003 030c 	and.w	r3, r3, #12
 8001422:	2b08      	cmp	r3, #8
 8001424:	d1f9      	bne.n	800141a <SystemClockInit+0x1d2>
		  //check if system clock is switched correctly
	  }

	  /**********************APB1 CLK**************************/
	  CLEAR_BIT(RCC->CFGR,RCC_CFGR_PPRE1);
 8001426:	4b27      	ldr	r3, [pc, #156]	; (80014c4 <SystemClockInit+0x27c>)
 8001428:	689b      	ldr	r3, [r3, #8]
 800142a:	4a26      	ldr	r2, [pc, #152]	; (80014c4 <SystemClockInit+0x27c>)
 800142c:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8001430:	6093      	str	r3, [r2, #8]
	  SET_BIT(RCC->CFGR,(APB1_Prescaler_<<RCC_CFGR_PPRE1_Pos));
 8001432:	4b24      	ldr	r3, [pc, #144]	; (80014c4 <SystemClockInit+0x27c>)
 8001434:	689b      	ldr	r3, [r3, #8]
 8001436:	4a23      	ldr	r2, [pc, #140]	; (80014c4 <SystemClockInit+0x27c>)
 8001438:	f443 53a0 	orr.w	r3, r3, #5120	; 0x1400
 800143c:	6093      	str	r3, [r2, #8]

	  /**********************APB2 CLK**************************/
	  CLEAR_BIT(RCC->CFGR,RCC_CFGR_PPRE2);
 800143e:	4b21      	ldr	r3, [pc, #132]	; (80014c4 <SystemClockInit+0x27c>)
 8001440:	689b      	ldr	r3, [r3, #8]
 8001442:	4a20      	ldr	r2, [pc, #128]	; (80014c4 <SystemClockInit+0x27c>)
 8001444:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8001448:	6093      	str	r3, [r2, #8]
	  SET_BIT(RCC->CFGR,(APB2_Prescaler_<<RCC_CFGR_PPRE2_Pos));
 800144a:	4b1e      	ldr	r3, [pc, #120]	; (80014c4 <SystemClockInit+0x27c>)
 800144c:	689b      	ldr	r3, [r3, #8]
 800144e:	4a1d      	ldr	r2, [pc, #116]	; (80014c4 <SystemClockInit+0x27c>)
 8001450:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001454:	6093      	str	r3, [r2, #8]

	  /**********************Systick config**********************/
	  //Get System & Bus clocks
	  LL_RCC_ClocksTypeDef rcc_clocks;
	  RCC_GetSysClocksFreq(&rcc_clocks);
 8001456:	463b      	mov	r3, r7
 8001458:	4618      	mov	r0, r3
 800145a:	f000 fc99 	bl	8001d90 <RCC_GetSysClocksFreq>
	  //set load register
	  CLEAR_BIT(SysTick->LOAD, SysTick_LOAD_RELOAD_Msk);
 800145e:	4b1c      	ldr	r3, [pc, #112]	; (80014d0 <SystemClockInit+0x288>)
 8001460:	685b      	ldr	r3, [r3, #4]
 8001462:	4a1b      	ldr	r2, [pc, #108]	; (80014d0 <SystemClockInit+0x288>)
 8001464:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8001468:	6053      	str	r3, [r2, #4]
	  SET_BIT(SysTick->LOAD, (rcc_clocks.HCLK_Frequency/1000U)<<0U);
 800146a:	4b19      	ldr	r3, [pc, #100]	; (80014d0 <SystemClockInit+0x288>)
 800146c:	685a      	ldr	r2, [r3, #4]
 800146e:	687b      	ldr	r3, [r7, #4]
 8001470:	4918      	ldr	r1, [pc, #96]	; (80014d4 <SystemClockInit+0x28c>)
 8001472:	fba1 1303 	umull	r1, r3, r1, r3
 8001476:	099b      	lsrs	r3, r3, #6
 8001478:	4915      	ldr	r1, [pc, #84]	; (80014d0 <SystemClockInit+0x288>)
 800147a:	4313      	orrs	r3, r2
 800147c:	604b      	str	r3, [r1, #4]
	  //clear current value
	  CLEAR_BIT(SysTick->VAL, SysTick_VAL_CURRENT_Msk);
 800147e:	4b14      	ldr	r3, [pc, #80]	; (80014d0 <SystemClockInit+0x288>)
 8001480:	689b      	ldr	r3, [r3, #8]
 8001482:	4a13      	ldr	r2, [pc, #76]	; (80014d0 <SystemClockInit+0x288>)
 8001484:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8001488:	6093      	str	r3, [r2, #8]
	  //clocksource - AHB
	  SET_BIT(SysTick->CTRL,SysTick_CTRL_CLKSOURCE_Msk);
 800148a:	4b11      	ldr	r3, [pc, #68]	; (80014d0 <SystemClockInit+0x288>)
 800148c:	681b      	ldr	r3, [r3, #0]
 800148e:	4a10      	ldr	r2, [pc, #64]	; (80014d0 <SystemClockInit+0x288>)
 8001490:	f043 0304 	orr.w	r3, r3, #4
 8001494:	6013      	str	r3, [r2, #0]
	  //tickint
	  SET_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 8001496:	4b0e      	ldr	r3, [pc, #56]	; (80014d0 <SystemClockInit+0x288>)
 8001498:	681b      	ldr	r3, [r3, #0]
 800149a:	4a0d      	ldr	r2, [pc, #52]	; (80014d0 <SystemClockInit+0x288>)
 800149c:	f043 0302 	orr.w	r3, r3, #2
 80014a0:	6013      	str	r3, [r2, #0]
	  //enable counter
	  SET_BIT(SysTick->CTRL,SysTick_CTRL_ENABLE_Msk);
 80014a2:	4b0b      	ldr	r3, [pc, #44]	; (80014d0 <SystemClockInit+0x288>)
 80014a4:	681b      	ldr	r3, [r3, #0]
 80014a6:	4a0a      	ldr	r2, [pc, #40]	; (80014d0 <SystemClockInit+0x288>)
 80014a8:	f043 0301 	orr.w	r3, r3, #1
 80014ac:	6013      	str	r3, [r2, #0]

	  NVIC_SetPriority(SysTick_IRQn,0x03);
 80014ae:	2103      	movs	r1, #3
 80014b0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80014b4:	f7ff fdde 	bl	8001074 <__NVIC_SetPriority>
	  NVIC_EnableIRQ(SysTick_IRQn);
 80014b8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80014bc:	e00c      	b.n	80014d8 <SystemClockInit+0x290>
 80014be:	bf00      	nop
 80014c0:	40023c00 	.word	0x40023c00
 80014c4:	40023800 	.word	0x40023800
 80014c8:	40007000 	.word	0x40007000
 80014cc:	07402a04 	.word	0x07402a04
 80014d0:	e000e010 	.word	0xe000e010
 80014d4:	10624dd3 	.word	0x10624dd3
 80014d8:	f7ff fdae 	bl	8001038 <__NVIC_EnableIRQ>





}
 80014dc:	bf00      	nop
 80014de:	3710      	adds	r7, #16
 80014e0:	46bd      	mov	sp, r7
 80014e2:	bd80      	pop	{r7, pc}

080014e4 <Gpio_Init>:

void Gpio_Init(void){
 80014e4:	b480      	push	{r7}
 80014e6:	af00      	add	r7, sp, #0
	 /***************************GPIOB section****************************/
	  //GPIOB Reset
	  SET_BIT(RCC->AHB1RSTR,RCC_AHB1RSTR_GPIOBRST);
 80014e8:	4b17      	ldr	r3, [pc, #92]	; (8001548 <Gpio_Init+0x64>)
 80014ea:	691b      	ldr	r3, [r3, #16]
 80014ec:	4a16      	ldr	r2, [pc, #88]	; (8001548 <Gpio_Init+0x64>)
 80014ee:	f043 0302 	orr.w	r3, r3, #2
 80014f2:	6113      	str	r3, [r2, #16]
	  CLEAR_BIT(RCC->AHB1RSTR,RCC_AHB1RSTR_GPIOBRST);
 80014f4:	4b14      	ldr	r3, [pc, #80]	; (8001548 <Gpio_Init+0x64>)
 80014f6:	691b      	ldr	r3, [r3, #16]
 80014f8:	4a13      	ldr	r2, [pc, #76]	; (8001548 <Gpio_Init+0x64>)
 80014fa:	f023 0302 	bic.w	r3, r3, #2
 80014fe:	6113      	str	r3, [r2, #16]

	  //GPIOB clock enable
	  SET_BIT(RCC->AHB1ENR,RCC_AHB1ENR_GPIOBEN);
 8001500:	4b11      	ldr	r3, [pc, #68]	; (8001548 <Gpio_Init+0x64>)
 8001502:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001504:	4a10      	ldr	r2, [pc, #64]	; (8001548 <Gpio_Init+0x64>)
 8001506:	f043 0302 	orr.w	r3, r3, #2
 800150a:	6313      	str	r3, [r2, #48]	; 0x30

	  //GPIOB Moder
	  SET_BIT(GPIOB->MODER,GPIO_MODER_MODE14_0);
 800150c:	4b0f      	ldr	r3, [pc, #60]	; (800154c <Gpio_Init+0x68>)
 800150e:	681b      	ldr	r3, [r3, #0]
 8001510:	4a0e      	ldr	r2, [pc, #56]	; (800154c <Gpio_Init+0x68>)
 8001512:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001516:	6013      	str	r3, [r2, #0]
	  SET_BIT(GPIOB->MODER,GPIO_MODER_MODE7_0);
 8001518:	4b0c      	ldr	r3, [pc, #48]	; (800154c <Gpio_Init+0x68>)
 800151a:	681b      	ldr	r3, [r3, #0]
 800151c:	4a0b      	ldr	r2, [pc, #44]	; (800154c <Gpio_Init+0x68>)
 800151e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001522:	6013      	str	r3, [r2, #0]

	  //GPIOB OSPEEDR
	  SET_BIT(GPIOB->OSPEEDR,GPIO_OSPEEDR_OSPEED14_0);
 8001524:	4b09      	ldr	r3, [pc, #36]	; (800154c <Gpio_Init+0x68>)
 8001526:	689b      	ldr	r3, [r3, #8]
 8001528:	4a08      	ldr	r2, [pc, #32]	; (800154c <Gpio_Init+0x68>)
 800152a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800152e:	6093      	str	r3, [r2, #8]
	  SET_BIT(GPIOB->OSPEEDR,GPIO_OSPEEDR_OSPEED7_0);
 8001530:	4b06      	ldr	r3, [pc, #24]	; (800154c <Gpio_Init+0x68>)
 8001532:	689b      	ldr	r3, [r3, #8]
 8001534:	4a05      	ldr	r2, [pc, #20]	; (800154c <Gpio_Init+0x68>)
 8001536:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800153a:	6093      	str	r3, [r2, #8]


}
 800153c:	bf00      	nop
 800153e:	46bd      	mov	sp, r7
 8001540:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001544:	4770      	bx	lr
 8001546:	bf00      	nop
 8001548:	40023800 	.word	0x40023800
 800154c:	40020400 	.word	0x40020400

08001550 <Timer_Init>:

void Timer_Init(void){
 8001550:	b580      	push	{r7, lr}
 8001552:	af00      	add	r7, sp, #0
	/*************************Timer setup**********************/
	//Enable Timer
	SET_BIT(RCC->APB1ENR,RCC_APB1ENR_TIM7EN);
 8001554:	4b25      	ldr	r3, [pc, #148]	; (80015ec <Timer_Init+0x9c>)
 8001556:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001558:	4a24      	ldr	r2, [pc, #144]	; (80015ec <Timer_Init+0x9c>)
 800155a:	f043 0320 	orr.w	r3, r3, #32
 800155e:	6413      	str	r3, [r2, #64]	; 0x40
	NVIC_SetPriority(TIM7_IRQn,0x13);
 8001560:	2113      	movs	r1, #19
 8001562:	2037      	movs	r0, #55	; 0x37
 8001564:	f7ff fd86 	bl	8001074 <__NVIC_SetPriority>
	NVIC_EnableIRQ(TIM7_IRQn);
 8001568:	2037      	movs	r0, #55	; 0x37
 800156a:	f7ff fd65 	bl	8001038 <__NVIC_EnableIRQ>

	// Start by making sure the timer's 'counter' is off.
	CLEAR_BIT(TIM7->CR1,TIM_CR1_CEN);
 800156e:	4b20      	ldr	r3, [pc, #128]	; (80015f0 <Timer_Init+0xa0>)
 8001570:	681b      	ldr	r3, [r3, #0]
 8001572:	4a1f      	ldr	r2, [pc, #124]	; (80015f0 <Timer_Init+0xa0>)
 8001574:	f023 0301 	bic.w	r3, r3, #1
 8001578:	6013      	str	r3, [r2, #0]

	//Timer Reset
	SET_BIT(RCC->APB1RSTR,RCC_APB1RSTR_TIM7RST);
 800157a:	4b1c      	ldr	r3, [pc, #112]	; (80015ec <Timer_Init+0x9c>)
 800157c:	6a1b      	ldr	r3, [r3, #32]
 800157e:	4a1b      	ldr	r2, [pc, #108]	; (80015ec <Timer_Init+0x9c>)
 8001580:	f043 0320 	orr.w	r3, r3, #32
 8001584:	6213      	str	r3, [r2, #32]
	CLEAR_BIT(RCC->APB1RSTR,RCC_APB1RSTR_TIM7RST);
 8001586:	4b19      	ldr	r3, [pc, #100]	; (80015ec <Timer_Init+0x9c>)
 8001588:	6a1b      	ldr	r3, [r3, #32]
 800158a:	4a18      	ldr	r2, [pc, #96]	; (80015ec <Timer_Init+0x9c>)
 800158c:	f023 0320 	bic.w	r3, r3, #32
 8001590:	6213      	str	r3, [r2, #32]

	//Set Prescaler (APB1 CLK - 84MHz)
	SET_BIT(TIM7->PSC,(TIM7_PSC_<<0U));
 8001592:	4b17      	ldr	r3, [pc, #92]	; (80015f0 <Timer_Init+0xa0>)
 8001594:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001596:	4a16      	ldr	r2, [pc, #88]	; (80015f0 <Timer_Init+0xa0>)
 8001598:	f443 5303 	orr.w	r3, r3, #8384	; 0x20c0
 800159c:	f043 0310 	orr.w	r3, r3, #16
 80015a0:	6293      	str	r3, [r2, #40]	; 0x28

	//Set ARR
	CLEAR_BIT(TIM7->ARR,TIM_ARR_ARR);
 80015a2:	4b13      	ldr	r3, [pc, #76]	; (80015f0 <Timer_Init+0xa0>)
 80015a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80015a6:	4b12      	ldr	r3, [pc, #72]	; (80015f0 <Timer_Init+0xa0>)
 80015a8:	2200      	movs	r2, #0
 80015aa:	62da      	str	r2, [r3, #44]	; 0x2c
	SET_BIT(TIM7->ARR,(TIM7_ARR_<<0U));
 80015ac:	4b10      	ldr	r3, [pc, #64]	; (80015f0 <Timer_Init+0xa0>)
 80015ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80015b0:	4a0f      	ldr	r2, [pc, #60]	; (80015f0 <Timer_Init+0xa0>)
 80015b2:	f043 0331 	orr.w	r3, r3, #49	; 0x31
 80015b6:	62d3      	str	r3, [r2, #44]	; 0x2c

	//Auto-Reload Preload
  //  SET_BIT(TIM7->CR1,TIM_CR1_ARPE);
	CLEAR_BIT(TIM7->CR1,TIM_CR1_OPM);      //Continuous timer
 80015b8:	4b0d      	ldr	r3, [pc, #52]	; (80015f0 <Timer_Init+0xa0>)
 80015ba:	681b      	ldr	r3, [r3, #0]
 80015bc:	4a0c      	ldr	r2, [pc, #48]	; (80015f0 <Timer_Init+0xa0>)
 80015be:	f023 0308 	bic.w	r3, r3, #8
 80015c2:	6013      	str	r3, [r2, #0]

	//Send an update event to reset the timer and apply settings.
	SET_BIT(TIM7->EGR,TIM_EGR_UG);
 80015c4:	4b0a      	ldr	r3, [pc, #40]	; (80015f0 <Timer_Init+0xa0>)
 80015c6:	695b      	ldr	r3, [r3, #20]
 80015c8:	4a09      	ldr	r2, [pc, #36]	; (80015f0 <Timer_Init+0xa0>)
 80015ca:	f043 0301 	orr.w	r3, r3, #1
 80015ce:	6153      	str	r3, [r2, #20]

	//Enable Interrupt
	SET_BIT(TIM7->DIER,TIM_DIER_UIE);
 80015d0:	4b07      	ldr	r3, [pc, #28]	; (80015f0 <Timer_Init+0xa0>)
 80015d2:	68db      	ldr	r3, [r3, #12]
 80015d4:	4a06      	ldr	r2, [pc, #24]	; (80015f0 <Timer_Init+0xa0>)
 80015d6:	f043 0301 	orr.w	r3, r3, #1
 80015da:	60d3      	str	r3, [r2, #12]
  //  for(int i=0;i<10;i++);

	//Enable Counter
	SET_BIT(TIM7->CR1,TIM_CR1_CEN);
 80015dc:	4b04      	ldr	r3, [pc, #16]	; (80015f0 <Timer_Init+0xa0>)
 80015de:	681b      	ldr	r3, [r3, #0]
 80015e0:	4a03      	ldr	r2, [pc, #12]	; (80015f0 <Timer_Init+0xa0>)
 80015e2:	f043 0301 	orr.w	r3, r3, #1
 80015e6:	6013      	str	r3, [r2, #0]
}
 80015e8:	bf00      	nop
 80015ea:	bd80      	pop	{r7, pc}
 80015ec:	40023800 	.word	0x40023800
 80015f0:	40001400 	.word	0x40001400

080015f4 <I2C_Init>:

void I2C_Init(void){
 80015f4:	b580      	push	{r7, lr}
 80015f6:	b088      	sub	sp, #32
 80015f8:	af00      	add	r7, sp, #0
	  PB6   ------> I2C1_SCL
	  PB9   ------> I2C1_SDA
	  */

	//GPIOB MODER
    SET_BIT(GPIOB->MODER,GPIO_MODER_MODE6_1);
 80015fa:	4b83      	ldr	r3, [pc, #524]	; (8001808 <I2C_Init+0x214>)
 80015fc:	681b      	ldr	r3, [r3, #0]
 80015fe:	4a82      	ldr	r2, [pc, #520]	; (8001808 <I2C_Init+0x214>)
 8001600:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001604:	6013      	str	r3, [r2, #0]
    SET_BIT(GPIOB->MODER,GPIO_MODER_MODE9_1);
 8001606:	4b80      	ldr	r3, [pc, #512]	; (8001808 <I2C_Init+0x214>)
 8001608:	681b      	ldr	r3, [r3, #0]
 800160a:	4a7f      	ldr	r2, [pc, #508]	; (8001808 <I2C_Init+0x214>)
 800160c:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8001610:	6013      	str	r3, [r2, #0]

    //GPIOB OTYPER
    SET_BIT(GPIOB->OTYPER,GPIO_OTYPER_OT6);
 8001612:	4b7d      	ldr	r3, [pc, #500]	; (8001808 <I2C_Init+0x214>)
 8001614:	685b      	ldr	r3, [r3, #4]
 8001616:	4a7c      	ldr	r2, [pc, #496]	; (8001808 <I2C_Init+0x214>)
 8001618:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800161c:	6053      	str	r3, [r2, #4]
	SET_BIT(GPIOB->OTYPER,GPIO_OTYPER_OT9);
 800161e:	4b7a      	ldr	r3, [pc, #488]	; (8001808 <I2C_Init+0x214>)
 8001620:	685b      	ldr	r3, [r3, #4]
 8001622:	4a79      	ldr	r2, [pc, #484]	; (8001808 <I2C_Init+0x214>)
 8001624:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001628:	6053      	str	r3, [r2, #4]

	//GPIOB OSPEEDR
	SET_BIT(GPIOB->OSPEEDR,GPIO_OSPEEDR_OSPEED6);
 800162a:	4b77      	ldr	r3, [pc, #476]	; (8001808 <I2C_Init+0x214>)
 800162c:	689b      	ldr	r3, [r3, #8]
 800162e:	4a76      	ldr	r2, [pc, #472]	; (8001808 <I2C_Init+0x214>)
 8001630:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 8001634:	6093      	str	r3, [r2, #8]
	SET_BIT(GPIOB->OSPEEDR,GPIO_OSPEEDR_OSPEED9);
 8001636:	4b74      	ldr	r3, [pc, #464]	; (8001808 <I2C_Init+0x214>)
 8001638:	689b      	ldr	r3, [r3, #8]
 800163a:	4a73      	ldr	r2, [pc, #460]	; (8001808 <I2C_Init+0x214>)
 800163c:	f443 2340 	orr.w	r3, r3, #786432	; 0xc0000
 8001640:	6093      	str	r3, [r2, #8]

	//GPIOB AFRL & AFRH
	SET_BIT(GPIOB->AFR[0],GPIO_AFRL_AFSEL6_2);
 8001642:	4b71      	ldr	r3, [pc, #452]	; (8001808 <I2C_Init+0x214>)
 8001644:	6a1b      	ldr	r3, [r3, #32]
 8001646:	4a70      	ldr	r2, [pc, #448]	; (8001808 <I2C_Init+0x214>)
 8001648:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800164c:	6213      	str	r3, [r2, #32]
	SET_BIT(GPIOB->AFR[1],GPIO_AFRH_AFSEL9_2);
 800164e:	4b6e      	ldr	r3, [pc, #440]	; (8001808 <I2C_Init+0x214>)
 8001650:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001652:	4a6d      	ldr	r2, [pc, #436]	; (8001808 <I2C_Init+0x214>)
 8001654:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001658:	6253      	str	r3, [r2, #36]	; 0x24

	//Reset peripheral
	SET_BIT(RCC->APB1RSTR,RCC_APB1RSTR_I2C1RST);
 800165a:	4b6c      	ldr	r3, [pc, #432]	; (800180c <I2C_Init+0x218>)
 800165c:	6a1b      	ldr	r3, [r3, #32]
 800165e:	4a6b      	ldr	r2, [pc, #428]	; (800180c <I2C_Init+0x218>)
 8001660:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001664:	6213      	str	r3, [r2, #32]
	CLEAR_BIT(RCC->APB1RSTR,RCC_APB1RSTR_I2C1RST);
 8001666:	4b69      	ldr	r3, [pc, #420]	; (800180c <I2C_Init+0x218>)
 8001668:	6a1b      	ldr	r3, [r3, #32]
 800166a:	4a68      	ldr	r2, [pc, #416]	; (800180c <I2C_Init+0x218>)
 800166c:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001670:	6213      	str	r3, [r2, #32]

	//Enable clock
	SET_BIT(RCC->APB1ENR,RCC_APB1ENR_I2C1EN);
 8001672:	4b66      	ldr	r3, [pc, #408]	; (800180c <I2C_Init+0x218>)
 8001674:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001676:	4a65      	ldr	r2, [pc, #404]	; (800180c <I2C_Init+0x218>)
 8001678:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800167c:	6413      	str	r3, [r2, #64]	; 0x40

	//Disable Peripheral
	CLEAR_BIT(I2C1->CR1,I2C_CR1_PE);
 800167e:	4b64      	ldr	r3, [pc, #400]	; (8001810 <I2C_Init+0x21c>)
 8001680:	681b      	ldr	r3, [r3, #0]
 8001682:	4a63      	ldr	r2, [pc, #396]	; (8001810 <I2C_Init+0x21c>)
 8001684:	f023 0301 	bic.w	r3, r3, #1
 8001688:	6013      	str	r3, [r2, #0]

	//Disable OwnAddress2
	CLEAR_BIT(I2C1->OAR2, I2C_OAR2_ENDUAL);
 800168a:	4b61      	ldr	r3, [pc, #388]	; (8001810 <I2C_Init+0x21c>)
 800168c:	68db      	ldr	r3, [r3, #12]
 800168e:	4a60      	ldr	r2, [pc, #384]	; (8001810 <I2C_Init+0x21c>)
 8001690:	f023 0301 	bic.w	r3, r3, #1
 8001694:	60d3      	str	r3, [r2, #12]

	//Enable OwnAddress1
	CLEAR_BIT(I2C1->OAR1, I2C_OAR1_ADDMODE);
 8001696:	4b5e      	ldr	r3, [pc, #376]	; (8001810 <I2C_Init+0x21c>)
 8001698:	689b      	ldr	r3, [r3, #8]
 800169a:	4a5d      	ldr	r2, [pc, #372]	; (8001810 <I2C_Init+0x21c>)
 800169c:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80016a0:	6093      	str	r3, [r2, #8]
	SET_BIT(I2C1->OAR1, (OWN_I2CADDR<<1U) | (1<<14U));
 80016a2:	4b5b      	ldr	r3, [pc, #364]	; (8001810 <I2C_Init+0x21c>)
 80016a4:	689b      	ldr	r3, [r3, #8]
 80016a6:	4a5a      	ldr	r2, [pc, #360]	; (8001810 <I2C_Init+0x21c>)
 80016a8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80016ac:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 80016b0:	6093      	str	r3, [r2, #8]

	//Get System & Bus clocks
	LL_RCC_ClocksTypeDef rcc_clocks;
	RCC_GetSysClocksFreq(&rcc_clocks);
 80016b2:	463b      	mov	r3, r7
 80016b4:	4618      	mov	r0, r3
 80016b6:	f000 fb6b 	bl	8001d90 <RCC_GetSysClocksFreq>
     *           and I2C_CCR_CCR[11:0] bits
     * - DutyCycle: I2C_CCR_DUTY[7:0] bits
    */

	//compute frequency range
    uint32_t freqrange = rcc_clocks.PCLK1_Frequency/1000000;
 80016ba:	68bb      	ldr	r3, [r7, #8]
 80016bc:	4a55      	ldr	r2, [pc, #340]	; (8001814 <I2C_Init+0x220>)
 80016be:	fba2 2303 	umull	r2, r3, r2, r3
 80016c2:	0c9b      	lsrs	r3, r3, #18
 80016c4:	61bb      	str	r3, [r7, #24]
    uint32_t ClockSpeed = I2C_CLOCK_SPEED;
 80016c6:	4b54      	ldr	r3, [pc, #336]	; (8001818 <I2C_Init+0x224>)
 80016c8:	617b      	str	r3, [r7, #20]
    uint32_t clockconfig = 0x0U;
 80016ca:	2300      	movs	r3, #0
 80016cc:	61fb      	str	r3, [r7, #28]
    uint32_t DutyCycle = 0x0U;
 80016ce:	2300      	movs	r3, #0
 80016d0:	613b      	str	r3, [r7, #16]
    CLEAR_BIT(I2C1->CR2, I2C_CR2_FREQ);
 80016d2:	4b4f      	ldr	r3, [pc, #316]	; (8001810 <I2C_Init+0x21c>)
 80016d4:	685b      	ldr	r3, [r3, #4]
 80016d6:	4a4e      	ldr	r2, [pc, #312]	; (8001810 <I2C_Init+0x21c>)
 80016d8:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80016dc:	6053      	str	r3, [r2, #4]
    SET_BIT(I2C1->CR2, (freqrange<<0U));
 80016de:	4b4c      	ldr	r3, [pc, #304]	; (8001810 <I2C_Init+0x21c>)
 80016e0:	685a      	ldr	r2, [r3, #4]
 80016e2:	494b      	ldr	r1, [pc, #300]	; (8001810 <I2C_Init+0x21c>)
 80016e4:	69bb      	ldr	r3, [r7, #24]
 80016e6:	4313      	orrs	r3, r2
 80016e8:	604b      	str	r3, [r1, #4]

    //configure rise time
    CLEAR_BIT(I2C1->TRISE, I2C_TRISE_TRISE);
 80016ea:	4b49      	ldr	r3, [pc, #292]	; (8001810 <I2C_Init+0x21c>)
 80016ec:	6a1b      	ldr	r3, [r3, #32]
 80016ee:	4a48      	ldr	r2, [pc, #288]	; (8001810 <I2C_Init+0x21c>)
 80016f0:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80016f4:	6213      	str	r3, [r2, #32]
    SET_BIT(I2C1->TRISE, __LL_I2C_RISE_TIME(freqrange, ClockSpeed));
 80016f6:	4b46      	ldr	r3, [pc, #280]	; (8001810 <I2C_Init+0x21c>)
 80016f8:	6a1a      	ldr	r2, [r3, #32]
 80016fa:	697b      	ldr	r3, [r7, #20]
 80016fc:	4946      	ldr	r1, [pc, #280]	; (8001818 <I2C_Init+0x224>)
 80016fe:	428b      	cmp	r3, r1
 8001700:	d802      	bhi.n	8001708 <I2C_Init+0x114>
 8001702:	69bb      	ldr	r3, [r7, #24]
 8001704:	3301      	adds	r3, #1
 8001706:	e009      	b.n	800171c <I2C_Init+0x128>
 8001708:	69bb      	ldr	r3, [r7, #24]
 800170a:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800170e:	fb01 f303 	mul.w	r3, r1, r3
 8001712:	4942      	ldr	r1, [pc, #264]	; (800181c <I2C_Init+0x228>)
 8001714:	fba1 1303 	umull	r1, r3, r1, r3
 8001718:	099b      	lsrs	r3, r3, #6
 800171a:	3301      	adds	r3, #1
 800171c:	493c      	ldr	r1, [pc, #240]	; (8001810 <I2C_Init+0x21c>)
 800171e:	4313      	orrs	r3, r2
 8001720:	620b      	str	r3, [r1, #32]

    /* Configure Speed mode, Duty Cycle and Clock control register value */
    if (ClockSpeed > LL_I2C_MAX_SPEED_STANDARD)
 8001722:	697b      	ldr	r3, [r7, #20]
 8001724:	4a3c      	ldr	r2, [pc, #240]	; (8001818 <I2C_Init+0x224>)
 8001726:	4293      	cmp	r3, r2
 8001728:	d939      	bls.n	800179e <I2C_Init+0x1aa>
    {
 	  /* Set Speed mode at fast and duty cycle for Clock Speed request in fast clock range */
	  clockconfig = LL_I2C_CLOCK_SPEED_FAST_MODE                                          | \
 800172a:	693b      	ldr	r3, [r7, #16]
 800172c:	2b00      	cmp	r3, #0
 800172e:	d117      	bne.n	8001760 <I2C_Init+0x16c>
				  __LL_I2C_SPEED_FAST_TO_CCR(rcc_clocks.PCLK1_Frequency, ClockSpeed, DutyCycle)        | \
 8001730:	68b9      	ldr	r1, [r7, #8]
 8001732:	697a      	ldr	r2, [r7, #20]
 8001734:	4613      	mov	r3, r2
 8001736:	005b      	lsls	r3, r3, #1
 8001738:	4413      	add	r3, r2
 800173a:	fbb1 f3f3 	udiv	r3, r1, r3
 800173e:	f3c3 030b 	ubfx	r3, r3, #0, #12
	  clockconfig = LL_I2C_CLOCK_SPEED_FAST_MODE                                          | \
 8001742:	2b00      	cmp	r3, #0
 8001744:	d009      	beq.n	800175a <I2C_Init+0x166>
				  __LL_I2C_SPEED_FAST_TO_CCR(rcc_clocks.PCLK1_Frequency, ClockSpeed, DutyCycle)        | \
 8001746:	68b9      	ldr	r1, [r7, #8]
 8001748:	697a      	ldr	r2, [r7, #20]
 800174a:	4613      	mov	r3, r2
 800174c:	005b      	lsls	r3, r3, #1
 800174e:	4413      	add	r3, r2
 8001750:	fbb1 f3f3 	udiv	r3, r1, r3
	  clockconfig = LL_I2C_CLOCK_SPEED_FAST_MODE                                          | \
 8001754:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001758:	e01d      	b.n	8001796 <I2C_Init+0x1a2>
 800175a:	f248 0301 	movw	r3, #32769	; 0x8001
 800175e:	e01a      	b.n	8001796 <I2C_Init+0x1a2>
				  __LL_I2C_SPEED_FAST_TO_CCR(rcc_clocks.PCLK1_Frequency, ClockSpeed, DutyCycle)        | \
 8001760:	68b9      	ldr	r1, [r7, #8]
 8001762:	697a      	ldr	r2, [r7, #20]
 8001764:	4613      	mov	r3, r2
 8001766:	009b      	lsls	r3, r3, #2
 8001768:	4413      	add	r3, r2
 800176a:	009a      	lsls	r2, r3, #2
 800176c:	4413      	add	r3, r2
 800176e:	fbb1 f3f3 	udiv	r3, r1, r3
 8001772:	f3c3 030b 	ubfx	r3, r3, #0, #12
	  clockconfig = LL_I2C_CLOCK_SPEED_FAST_MODE                                          | \
 8001776:	2b00      	cmp	r3, #0
 8001778:	d00b      	beq.n	8001792 <I2C_Init+0x19e>
				  __LL_I2C_SPEED_FAST_TO_CCR(rcc_clocks.PCLK1_Frequency, ClockSpeed, DutyCycle)        | \
 800177a:	68b9      	ldr	r1, [r7, #8]
 800177c:	697a      	ldr	r2, [r7, #20]
 800177e:	4613      	mov	r3, r2
 8001780:	009b      	lsls	r3, r3, #2
 8001782:	4413      	add	r3, r2
 8001784:	009a      	lsls	r2, r3, #2
 8001786:	4413      	add	r3, r2
 8001788:	fbb1 f3f3 	udiv	r3, r1, r3
	  clockconfig = LL_I2C_CLOCK_SPEED_FAST_MODE                                          | \
 800178c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001790:	e001      	b.n	8001796 <I2C_Init+0x1a2>
 8001792:	f248 0301 	movw	r3, #32769	; 0x8001
 8001796:	693a      	ldr	r2, [r7, #16]
 8001798:	4313      	orrs	r3, r2
 800179a:	61fb      	str	r3, [r7, #28]
 800179c:	e011      	b.n	80017c2 <I2C_Init+0x1ce>
				  DutyCycle;
    }
    else
    {
	  /* Set Speed mode at standard for Clock Speed request in standard clock range */
	  clockconfig = __LL_I2C_SPEED_STANDARD_TO_CCR(rcc_clocks.PCLK1_Frequency, ClockSpeed);
 800179e:	68ba      	ldr	r2, [r7, #8]
 80017a0:	697b      	ldr	r3, [r7, #20]
 80017a2:	005b      	lsls	r3, r3, #1
 80017a4:	fbb2 f2f3 	udiv	r2, r2, r3
 80017a8:	f640 73fc 	movw	r3, #4092	; 0xffc
 80017ac:	4013      	ands	r3, r2
 80017ae:	2b00      	cmp	r3, #0
 80017b0:	d005      	beq.n	80017be <I2C_Init+0x1ca>
 80017b2:	68ba      	ldr	r2, [r7, #8]
 80017b4:	697b      	ldr	r3, [r7, #20]
 80017b6:	005b      	lsls	r3, r3, #1
 80017b8:	fbb2 f3f3 	udiv	r3, r2, r3
 80017bc:	e000      	b.n	80017c0 <I2C_Init+0x1cc>
 80017be:	2304      	movs	r3, #4
 80017c0:	61fb      	str	r3, [r7, #28]
    }

    //configure clock control
    CLEAR_BIT(I2C1->CCR, I2C_CCR_FS);
 80017c2:	4b13      	ldr	r3, [pc, #76]	; (8001810 <I2C_Init+0x21c>)
 80017c4:	69db      	ldr	r3, [r3, #28]
 80017c6:	4a12      	ldr	r2, [pc, #72]	; (8001810 <I2C_Init+0x21c>)
 80017c8:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80017cc:	61d3      	str	r3, [r2, #28]
	CLEAR_BIT(I2C1->CCR, I2C_CCR_DUTY);
 80017ce:	4b10      	ldr	r3, [pc, #64]	; (8001810 <I2C_Init+0x21c>)
 80017d0:	69db      	ldr	r3, [r3, #28]
 80017d2:	4a0f      	ldr	r2, [pc, #60]	; (8001810 <I2C_Init+0x21c>)
 80017d4:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80017d8:	61d3      	str	r3, [r2, #28]
	SET_BIT(I2C1->CCR, (clockconfig<<0U));
 80017da:	4b0d      	ldr	r3, [pc, #52]	; (8001810 <I2C_Init+0x21c>)
 80017dc:	69da      	ldr	r2, [r3, #28]
 80017de:	490c      	ldr	r1, [pc, #48]	; (8001810 <I2C_Init+0x21c>)
 80017e0:	69fb      	ldr	r3, [r7, #28]
 80017e2:	4313      	orrs	r3, r2
 80017e4:	61cb      	str	r3, [r1, #28]

	//setup I2C mode
	CLEAR_BIT(I2C1->CR1, I2C_CR1_SMBUS);
 80017e6:	4b0a      	ldr	r3, [pc, #40]	; (8001810 <I2C_Init+0x21c>)
 80017e8:	681b      	ldr	r3, [r3, #0]
 80017ea:	4a09      	ldr	r2, [pc, #36]	; (8001810 <I2C_Init+0x21c>)
 80017ec:	f023 0302 	bic.w	r3, r3, #2
 80017f0:	6013      	str	r3, [r2, #0]

	//Enable Peripheral
	SET_BIT(I2C1->CR1, I2C_CR1_PE);
 80017f2:	4b07      	ldr	r3, [pc, #28]	; (8001810 <I2C_Init+0x21c>)
 80017f4:	681b      	ldr	r3, [r3, #0]
 80017f6:	4a06      	ldr	r2, [pc, #24]	; (8001810 <I2C_Init+0x21c>)
 80017f8:	f043 0301 	orr.w	r3, r3, #1
 80017fc:	6013      	str	r3, [r2, #0]

}
 80017fe:	bf00      	nop
 8001800:	3720      	adds	r7, #32
 8001802:	46bd      	mov	sp, r7
 8001804:	bd80      	pop	{r7, pc}
 8001806:	bf00      	nop
 8001808:	40020400 	.word	0x40020400
 800180c:	40023800 	.word	0x40023800
 8001810:	40005400 	.word	0x40005400
 8001814:	431bde83 	.word	0x431bde83
 8001818:	000186a0 	.word	0x000186a0
 800181c:	10624dd3 	.word	0x10624dd3

08001820 <Usart_Init>:

void Usart_Init(void){
 8001820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001824:	b0c3      	sub	sp, #268	; 0x10c
 8001826:	af00      	add	r7, sp, #0
	/**USART3 GPIO Configuration
	  PD8   ------> USART3_TX
	  PD9   ------> USART3_RX
	  */
	//GPIOD Reset
    SET_BIT(RCC->AHB1RSTR,RCC_AHB1RSTR_GPIODRST);
 8001828:	4bc4      	ldr	r3, [pc, #784]	; (8001b3c <Usart_Init+0x31c>)
 800182a:	691b      	ldr	r3, [r3, #16]
 800182c:	4ac3      	ldr	r2, [pc, #780]	; (8001b3c <Usart_Init+0x31c>)
 800182e:	f043 0308 	orr.w	r3, r3, #8
 8001832:	6113      	str	r3, [r2, #16]
    CLEAR_BIT(RCC->AHB1RSTR,RCC_AHB1RSTR_GPIODRST);
 8001834:	4bc1      	ldr	r3, [pc, #772]	; (8001b3c <Usart_Init+0x31c>)
 8001836:	691b      	ldr	r3, [r3, #16]
 8001838:	4ac0      	ldr	r2, [pc, #768]	; (8001b3c <Usart_Init+0x31c>)
 800183a:	f023 0308 	bic.w	r3, r3, #8
 800183e:	6113      	str	r3, [r2, #16]

    //GPIOD clock enable
    SET_BIT(RCC->AHB1ENR,RCC_AHB1ENR_GPIODEN);
 8001840:	4bbe      	ldr	r3, [pc, #760]	; (8001b3c <Usart_Init+0x31c>)
 8001842:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001844:	4abd      	ldr	r2, [pc, #756]	; (8001b3c <Usart_Init+0x31c>)
 8001846:	f043 0308 	orr.w	r3, r3, #8
 800184a:	6313      	str	r3, [r2, #48]	; 0x30

	//GPIOD Moder
	SET_BIT(GPIOD->MODER,GPIO_MODER_MODE8_1);
 800184c:	4bbc      	ldr	r3, [pc, #752]	; (8001b40 <Usart_Init+0x320>)
 800184e:	681b      	ldr	r3, [r3, #0]
 8001850:	4abb      	ldr	r2, [pc, #748]	; (8001b40 <Usart_Init+0x320>)
 8001852:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001856:	6013      	str	r3, [r2, #0]
	SET_BIT(GPIOD->MODER,GPIO_MODER_MODE9_1);
 8001858:	4bb9      	ldr	r3, [pc, #740]	; (8001b40 <Usart_Init+0x320>)
 800185a:	681b      	ldr	r3, [r3, #0]
 800185c:	4ab8      	ldr	r2, [pc, #736]	; (8001b40 <Usart_Init+0x320>)
 800185e:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8001862:	6013      	str	r3, [r2, #0]

	//GPIOD OSPEEDR
	SET_BIT(GPIOD->OSPEEDR,GPIO_OSPEEDR_OSPEED8);
 8001864:	4bb6      	ldr	r3, [pc, #728]	; (8001b40 <Usart_Init+0x320>)
 8001866:	689b      	ldr	r3, [r3, #8]
 8001868:	4ab5      	ldr	r2, [pc, #724]	; (8001b40 <Usart_Init+0x320>)
 800186a:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 800186e:	6093      	str	r3, [r2, #8]
	SET_BIT(GPIOD->OSPEEDR,GPIO_OSPEEDR_OSPEED9);
 8001870:	4bb3      	ldr	r3, [pc, #716]	; (8001b40 <Usart_Init+0x320>)
 8001872:	689b      	ldr	r3, [r3, #8]
 8001874:	4ab2      	ldr	r2, [pc, #712]	; (8001b40 <Usart_Init+0x320>)
 8001876:	f443 2340 	orr.w	r3, r3, #786432	; 0xc0000
 800187a:	6093      	str	r3, [r2, #8]

	//GPIOD AFRH
	SET_BIT(GPIOD->AFR[1],GPIO_AFRH_AFSEL8_0 | GPIO_AFRH_AFSEL8_1 | GPIO_AFRH_AFSEL8_2);
 800187c:	4bb0      	ldr	r3, [pc, #704]	; (8001b40 <Usart_Init+0x320>)
 800187e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001880:	4aaf      	ldr	r2, [pc, #700]	; (8001b40 <Usart_Init+0x320>)
 8001882:	f043 0307 	orr.w	r3, r3, #7
 8001886:	6253      	str	r3, [r2, #36]	; 0x24
	SET_BIT(GPIOD->AFR[1],GPIO_AFRH_AFSEL9_0 | GPIO_AFRH_AFSEL9_1 | GPIO_AFRH_AFSEL9_2);
 8001888:	4bad      	ldr	r3, [pc, #692]	; (8001b40 <Usart_Init+0x320>)
 800188a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800188c:	4aac      	ldr	r2, [pc, #688]	; (8001b40 <Usart_Init+0x320>)
 800188e:	f043 0370 	orr.w	r3, r3, #112	; 0x70
 8001892:	6253      	str	r3, [r2, #36]	; 0x24

	//Reset peripheral
	SET_BIT(RCC->APB1RSTR,RCC_APB1RSTR_USART3RST);
 8001894:	4ba9      	ldr	r3, [pc, #676]	; (8001b3c <Usart_Init+0x31c>)
 8001896:	6a1b      	ldr	r3, [r3, #32]
 8001898:	4aa8      	ldr	r2, [pc, #672]	; (8001b3c <Usart_Init+0x31c>)
 800189a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800189e:	6213      	str	r3, [r2, #32]
	CLEAR_BIT(RCC->APB1RSTR,RCC_APB1RSTR_USART3RST);
 80018a0:	4ba6      	ldr	r3, [pc, #664]	; (8001b3c <Usart_Init+0x31c>)
 80018a2:	6a1b      	ldr	r3, [r3, #32]
 80018a4:	4aa5      	ldr	r2, [pc, #660]	; (8001b3c <Usart_Init+0x31c>)
 80018a6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80018aa:	6213      	str	r3, [r2, #32]

	//Enable clock
	SET_BIT(RCC->APB1ENR,RCC_APB1ENR_USART3EN);
 80018ac:	4ba3      	ldr	r3, [pc, #652]	; (8001b3c <Usart_Init+0x31c>)
 80018ae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80018b0:	4aa2      	ldr	r2, [pc, #648]	; (8001b3c <Usart_Init+0x31c>)
 80018b2:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80018b6:	6413      	str	r3, [r2, #64]	; 0x40

	//Disable Peripheral
	CLEAR_BIT(USART3->CR1, USART_CR1_UE);
 80018b8:	4ba2      	ldr	r3, [pc, #648]	; (8001b44 <Usart_Init+0x324>)
 80018ba:	68db      	ldr	r3, [r3, #12]
 80018bc:	4aa1      	ldr	r2, [pc, #644]	; (8001b44 <Usart_Init+0x324>)
 80018be:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80018c2:	60d3      	str	r3, [r2, #12]

	//configure parity,oversampling, data direction and word length
    CLEAR_BIT(USART3->CR1, (USART_CR1_M | USART_CR1_PCE | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8));
 80018c4:	4b9f      	ldr	r3, [pc, #636]	; (8001b44 <Usart_Init+0x324>)
 80018c6:	68db      	ldr	r3, [r3, #12]
 80018c8:	4a9e      	ldr	r2, [pc, #632]	; (8001b44 <Usart_Init+0x324>)
 80018ca:	f423 4314 	bic.w	r3, r3, #37888	; 0x9400
 80018ce:	f023 030c 	bic.w	r3, r3, #12
 80018d2:	60d3      	str	r3, [r2, #12]
    SET_BIT(USART3->CR1, USART_CR1_TE | USART_CR1_RE);
 80018d4:	4b9b      	ldr	r3, [pc, #620]	; (8001b44 <Usart_Init+0x324>)
 80018d6:	68db      	ldr	r3, [r3, #12]
 80018d8:	4a9a      	ldr	r2, [pc, #616]	; (8001b44 <Usart_Init+0x324>)
 80018da:	f043 030c 	orr.w	r3, r3, #12
 80018de:	60d3      	str	r3, [r2, #12]

    //configure stop bits
    CLEAR_BIT(USART3->CR2, USART_CR2_STOP);
 80018e0:	4b98      	ldr	r3, [pc, #608]	; (8001b44 <Usart_Init+0x324>)
 80018e2:	691b      	ldr	r3, [r3, #16]
 80018e4:	4a97      	ldr	r2, [pc, #604]	; (8001b44 <Usart_Init+0x324>)
 80018e6:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80018ea:	6113      	str	r3, [r2, #16]

    //configure hardware flow
    CLEAR_BIT(USART3->CR3, USART_CR3_CTSE | USART_CR3_RTSE);
 80018ec:	4b95      	ldr	r3, [pc, #596]	; (8001b44 <Usart_Init+0x324>)
 80018ee:	695b      	ldr	r3, [r3, #20]
 80018f0:	4a94      	ldr	r2, [pc, #592]	; (8001b44 <Usart_Init+0x324>)
 80018f2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80018f6:	6153      	str	r3, [r2, #20]

    //Get System & Bus clocks
	LL_RCC_ClocksTypeDef rcc_clocks;
	RCC_GetSysClocksFreq(&rcc_clocks);
 80018f8:	f107 03f0 	add.w	r3, r7, #240	; 0xf0
 80018fc:	4618      	mov	r0, r3
 80018fe:	f000 fa47 	bl	8001d90 <RCC_GetSysClocksFreq>

	uint32_t periphclock = rcc_clocks.PCLK1_Frequency;
 8001902:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 8001906:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104

	//configure baud rate
	uint32_t baudrate = 115200;
 800190a:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
 800190e:	f8c7 3100 	str.w	r3, [r7, #256]	; 0x100
	if(READ_BIT(USART3->CR2,USART_CR1_OVER8)){
 8001912:	4b8c      	ldr	r3, [pc, #560]	; (8001b44 <Usart_Init+0x324>)
 8001914:	691b      	ldr	r3, [r3, #16]
 8001916:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800191a:	2b00      	cmp	r3, #0
 800191c:	f000 8116 	beq.w	8001b4c <Usart_Init+0x32c>
		SET_BIT(USART3->BRR, (uint16_t)__LL_USART_DIV_SAMPLING8(periphclock, baudrate));
 8001920:	4b88      	ldr	r3, [pc, #544]	; (8001b44 <Usart_Init+0x324>)
 8001922:	689d      	ldr	r5, [r3, #8]
 8001924:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8001928:	2200      	movs	r2, #0
 800192a:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 800192e:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 8001932:	e9d7 233a 	ldrd	r2, r3, [r7, #232]	; 0xe8
 8001936:	1891      	adds	r1, r2, r2
 8001938:	65b9      	str	r1, [r7, #88]	; 0x58
 800193a:	415b      	adcs	r3, r3
 800193c:	65fb      	str	r3, [r7, #92]	; 0x5c
 800193e:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8001942:	f8d7 10e8 	ldr.w	r1, [r7, #232]	; 0xe8
 8001946:	eb12 0801 	adds.w	r8, r2, r1
 800194a:	f8d7 10ec 	ldr.w	r1, [r7, #236]	; 0xec
 800194e:	eb43 0901 	adc.w	r9, r3, r1
 8001952:	f04f 0200 	mov.w	r2, #0
 8001956:	f04f 0300 	mov.w	r3, #0
 800195a:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800195e:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8001962:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8001966:	4690      	mov	r8, r2
 8001968:	4699      	mov	r9, r3
 800196a:	e9d7 123a 	ldrd	r1, r2, [r7, #232]	; 0xe8
 800196e:	460b      	mov	r3, r1
 8001970:	eb18 0303 	adds.w	r3, r8, r3
 8001974:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8001978:	4613      	mov	r3, r2
 800197a:	eb49 0303 	adc.w	r3, r9, r3
 800197e:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8001982:	f8d7 3100 	ldr.w	r3, [r7, #256]	; 0x100
 8001986:	2200      	movs	r2, #0
 8001988:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800198c:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 8001990:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 8001994:	460b      	mov	r3, r1
 8001996:	18db      	adds	r3, r3, r3
 8001998:	653b      	str	r3, [r7, #80]	; 0x50
 800199a:	4613      	mov	r3, r2
 800199c:	eb42 0303 	adc.w	r3, r2, r3
 80019a0:	657b      	str	r3, [r7, #84]	; 0x54
 80019a2:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 80019a6:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 80019aa:	f7ff f98d 	bl	8000cc8 <__aeabi_uldivmod>
 80019ae:	4602      	mov	r2, r0
 80019b0:	460b      	mov	r3, r1
 80019b2:	4b65      	ldr	r3, [pc, #404]	; (8001b48 <Usart_Init+0x328>)
 80019b4:	fba3 2302 	umull	r2, r3, r3, r2
 80019b8:	095b      	lsrs	r3, r3, #5
 80019ba:	b29b      	uxth	r3, r3
 80019bc:	011b      	lsls	r3, r3, #4
 80019be:	b29c      	uxth	r4, r3
 80019c0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80019c4:	2200      	movs	r2, #0
 80019c6:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 80019ca:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 80019ce:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 80019d2:	4642      	mov	r2, r8
 80019d4:	464b      	mov	r3, r9
 80019d6:	1891      	adds	r1, r2, r2
 80019d8:	64b9      	str	r1, [r7, #72]	; 0x48
 80019da:	415b      	adcs	r3, r3
 80019dc:	64fb      	str	r3, [r7, #76]	; 0x4c
 80019de:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 80019e2:	4641      	mov	r1, r8
 80019e4:	eb12 0a01 	adds.w	sl, r2, r1
 80019e8:	4649      	mov	r1, r9
 80019ea:	eb43 0b01 	adc.w	fp, r3, r1
 80019ee:	f04f 0200 	mov.w	r2, #0
 80019f2:	f04f 0300 	mov.w	r3, #0
 80019f6:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80019fa:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80019fe:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8001a02:	4692      	mov	sl, r2
 8001a04:	469b      	mov	fp, r3
 8001a06:	4643      	mov	r3, r8
 8001a08:	eb1a 0303 	adds.w	r3, sl, r3
 8001a0c:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8001a10:	464b      	mov	r3, r9
 8001a12:	eb4b 0303 	adc.w	r3, fp, r3
 8001a16:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 8001a1a:	f8d7 3100 	ldr.w	r3, [r7, #256]	; 0x100
 8001a1e:	2200      	movs	r2, #0
 8001a20:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8001a24:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 8001a28:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 8001a2c:	460b      	mov	r3, r1
 8001a2e:	18db      	adds	r3, r3, r3
 8001a30:	643b      	str	r3, [r7, #64]	; 0x40
 8001a32:	4613      	mov	r3, r2
 8001a34:	eb42 0303 	adc.w	r3, r2, r3
 8001a38:	647b      	str	r3, [r7, #68]	; 0x44
 8001a3a:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8001a3e:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 8001a42:	f7ff f941 	bl	8000cc8 <__aeabi_uldivmod>
 8001a46:	4602      	mov	r2, r0
 8001a48:	460b      	mov	r3, r1
 8001a4a:	4611      	mov	r1, r2
 8001a4c:	4b3e      	ldr	r3, [pc, #248]	; (8001b48 <Usart_Init+0x328>)
 8001a4e:	fba3 2301 	umull	r2, r3, r3, r1
 8001a52:	095b      	lsrs	r3, r3, #5
 8001a54:	2264      	movs	r2, #100	; 0x64
 8001a56:	fb02 f303 	mul.w	r3, r2, r3
 8001a5a:	1acb      	subs	r3, r1, r3
 8001a5c:	00db      	lsls	r3, r3, #3
 8001a5e:	f103 0232 	add.w	r2, r3, #50	; 0x32
 8001a62:	4b39      	ldr	r3, [pc, #228]	; (8001b48 <Usart_Init+0x328>)
 8001a64:	fba3 2302 	umull	r2, r3, r3, r2
 8001a68:	095b      	lsrs	r3, r3, #5
 8001a6a:	b29b      	uxth	r3, r3
 8001a6c:	005b      	lsls	r3, r3, #1
 8001a6e:	b29b      	uxth	r3, r3
 8001a70:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8001a74:	b29b      	uxth	r3, r3
 8001a76:	4423      	add	r3, r4
 8001a78:	b29c      	uxth	r4, r3
 8001a7a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8001a7e:	2200      	movs	r2, #0
 8001a80:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8001a84:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 8001a88:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 8001a8c:	4642      	mov	r2, r8
 8001a8e:	464b      	mov	r3, r9
 8001a90:	1891      	adds	r1, r2, r2
 8001a92:	63b9      	str	r1, [r7, #56]	; 0x38
 8001a94:	415b      	adcs	r3, r3
 8001a96:	63fb      	str	r3, [r7, #60]	; 0x3c
 8001a98:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 8001a9c:	4641      	mov	r1, r8
 8001a9e:	1851      	adds	r1, r2, r1
 8001aa0:	6339      	str	r1, [r7, #48]	; 0x30
 8001aa2:	4649      	mov	r1, r9
 8001aa4:	414b      	adcs	r3, r1
 8001aa6:	637b      	str	r3, [r7, #52]	; 0x34
 8001aa8:	f04f 0200 	mov.w	r2, #0
 8001aac:	f04f 0300 	mov.w	r3, #0
 8001ab0:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 8001ab4:	4659      	mov	r1, fp
 8001ab6:	00cb      	lsls	r3, r1, #3
 8001ab8:	4651      	mov	r1, sl
 8001aba:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8001abe:	4651      	mov	r1, sl
 8001ac0:	00ca      	lsls	r2, r1, #3
 8001ac2:	4610      	mov	r0, r2
 8001ac4:	4619      	mov	r1, r3
 8001ac6:	4603      	mov	r3, r0
 8001ac8:	4642      	mov	r2, r8
 8001aca:	189b      	adds	r3, r3, r2
 8001acc:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8001ad0:	464b      	mov	r3, r9
 8001ad2:	460a      	mov	r2, r1
 8001ad4:	eb42 0303 	adc.w	r3, r2, r3
 8001ad8:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8001adc:	f8d7 3100 	ldr.w	r3, [r7, #256]	; 0x100
 8001ae0:	2200      	movs	r2, #0
 8001ae2:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8001ae6:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 8001aea:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 8001aee:	460b      	mov	r3, r1
 8001af0:	18db      	adds	r3, r3, r3
 8001af2:	62bb      	str	r3, [r7, #40]	; 0x28
 8001af4:	4613      	mov	r3, r2
 8001af6:	eb42 0303 	adc.w	r3, r2, r3
 8001afa:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001afc:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8001b00:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 8001b04:	f7ff f8e0 	bl	8000cc8 <__aeabi_uldivmod>
 8001b08:	4602      	mov	r2, r0
 8001b0a:	460b      	mov	r3, r1
 8001b0c:	4b0e      	ldr	r3, [pc, #56]	; (8001b48 <Usart_Init+0x328>)
 8001b0e:	fba3 1302 	umull	r1, r3, r3, r2
 8001b12:	095b      	lsrs	r3, r3, #5
 8001b14:	2164      	movs	r1, #100	; 0x64
 8001b16:	fb01 f303 	mul.w	r3, r1, r3
 8001b1a:	1ad3      	subs	r3, r2, r3
 8001b1c:	00db      	lsls	r3, r3, #3
 8001b1e:	3332      	adds	r3, #50	; 0x32
 8001b20:	4a09      	ldr	r2, [pc, #36]	; (8001b48 <Usart_Init+0x328>)
 8001b22:	fba2 2303 	umull	r2, r3, r2, r3
 8001b26:	095b      	lsrs	r3, r3, #5
 8001b28:	b29b      	uxth	r3, r3
 8001b2a:	f003 0307 	and.w	r3, r3, #7
 8001b2e:	b29b      	uxth	r3, r3
 8001b30:	4423      	add	r3, r4
 8001b32:	b29b      	uxth	r3, r3
 8001b34:	4a03      	ldr	r2, [pc, #12]	; (8001b44 <Usart_Init+0x324>)
 8001b36:	432b      	orrs	r3, r5
 8001b38:	6093      	str	r3, [r2, #8]
 8001b3a:	e10d      	b.n	8001d58 <Usart_Init+0x538>
 8001b3c:	40023800 	.word	0x40023800
 8001b40:	40020c00 	.word	0x40020c00
 8001b44:	40004800 	.word	0x40004800
 8001b48:	51eb851f 	.word	0x51eb851f
	}else{
		SET_BIT(USART3->BRR, (uint16_t)__LL_USART_DIV_SAMPLING16(periphclock, baudrate));
 8001b4c:	4b8e      	ldr	r3, [pc, #568]	; (8001d88 <Usart_Init+0x568>)
 8001b4e:	689e      	ldr	r6, [r3, #8]
 8001b50:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8001b54:	2200      	movs	r2, #0
 8001b56:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8001b5a:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 8001b5e:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 8001b62:	4642      	mov	r2, r8
 8001b64:	464b      	mov	r3, r9
 8001b66:	1891      	adds	r1, r2, r2
 8001b68:	6239      	str	r1, [r7, #32]
 8001b6a:	415b      	adcs	r3, r3
 8001b6c:	627b      	str	r3, [r7, #36]	; 0x24
 8001b6e:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8001b72:	4641      	mov	r1, r8
 8001b74:	1854      	adds	r4, r2, r1
 8001b76:	4649      	mov	r1, r9
 8001b78:	eb43 0501 	adc.w	r5, r3, r1
 8001b7c:	f04f 0200 	mov.w	r2, #0
 8001b80:	f04f 0300 	mov.w	r3, #0
 8001b84:	00eb      	lsls	r3, r5, #3
 8001b86:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8001b8a:	00e2      	lsls	r2, r4, #3
 8001b8c:	4614      	mov	r4, r2
 8001b8e:	461d      	mov	r5, r3
 8001b90:	4643      	mov	r3, r8
 8001b92:	18e3      	adds	r3, r4, r3
 8001b94:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8001b98:	464b      	mov	r3, r9
 8001b9a:	eb45 0303 	adc.w	r3, r5, r3
 8001b9e:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8001ba2:	f8d7 3100 	ldr.w	r3, [r7, #256]	; 0x100
 8001ba6:	2200      	movs	r2, #0
 8001ba8:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8001bac:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 8001bb0:	f04f 0200 	mov.w	r2, #0
 8001bb4:	f04f 0300 	mov.w	r3, #0
 8001bb8:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 8001bbc:	4629      	mov	r1, r5
 8001bbe:	008b      	lsls	r3, r1, #2
 8001bc0:	4621      	mov	r1, r4
 8001bc2:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8001bc6:	4621      	mov	r1, r4
 8001bc8:	008a      	lsls	r2, r1, #2
 8001bca:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 8001bce:	f7ff f87b 	bl	8000cc8 <__aeabi_uldivmod>
 8001bd2:	4602      	mov	r2, r0
 8001bd4:	460b      	mov	r3, r1
 8001bd6:	4b6d      	ldr	r3, [pc, #436]	; (8001d8c <Usart_Init+0x56c>)
 8001bd8:	fba3 2302 	umull	r2, r3, r3, r2
 8001bdc:	095b      	lsrs	r3, r3, #5
 8001bde:	b29b      	uxth	r3, r3
 8001be0:	011b      	lsls	r3, r3, #4
 8001be2:	b29c      	uxth	r4, r3
 8001be4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8001be8:	2200      	movs	r2, #0
 8001bea:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8001bee:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8001bf2:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 8001bf6:	4642      	mov	r2, r8
 8001bf8:	464b      	mov	r3, r9
 8001bfa:	1891      	adds	r1, r2, r2
 8001bfc:	61b9      	str	r1, [r7, #24]
 8001bfe:	415b      	adcs	r3, r3
 8001c00:	61fb      	str	r3, [r7, #28]
 8001c02:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8001c06:	4641      	mov	r1, r8
 8001c08:	1851      	adds	r1, r2, r1
 8001c0a:	6139      	str	r1, [r7, #16]
 8001c0c:	4649      	mov	r1, r9
 8001c0e:	414b      	adcs	r3, r1
 8001c10:	617b      	str	r3, [r7, #20]
 8001c12:	f04f 0200 	mov.w	r2, #0
 8001c16:	f04f 0300 	mov.w	r3, #0
 8001c1a:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8001c1e:	4659      	mov	r1, fp
 8001c20:	00cb      	lsls	r3, r1, #3
 8001c22:	4651      	mov	r1, sl
 8001c24:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8001c28:	4651      	mov	r1, sl
 8001c2a:	00ca      	lsls	r2, r1, #3
 8001c2c:	4610      	mov	r0, r2
 8001c2e:	4619      	mov	r1, r3
 8001c30:	4603      	mov	r3, r0
 8001c32:	4642      	mov	r2, r8
 8001c34:	189b      	adds	r3, r3, r2
 8001c36:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8001c3a:	464b      	mov	r3, r9
 8001c3c:	460a      	mov	r2, r1
 8001c3e:	eb42 0303 	adc.w	r3, r2, r3
 8001c42:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8001c46:	f8d7 3100 	ldr.w	r3, [r7, #256]	; 0x100
 8001c4a:	2200      	movs	r2, #0
 8001c4c:	67bb      	str	r3, [r7, #120]	; 0x78
 8001c4e:	67fa      	str	r2, [r7, #124]	; 0x7c
 8001c50:	f04f 0200 	mov.w	r2, #0
 8001c54:	f04f 0300 	mov.w	r3, #0
 8001c58:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 8001c5c:	4649      	mov	r1, r9
 8001c5e:	008b      	lsls	r3, r1, #2
 8001c60:	4641      	mov	r1, r8
 8001c62:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8001c66:	4641      	mov	r1, r8
 8001c68:	008a      	lsls	r2, r1, #2
 8001c6a:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 8001c6e:	f7ff f82b 	bl	8000cc8 <__aeabi_uldivmod>
 8001c72:	4602      	mov	r2, r0
 8001c74:	460b      	mov	r3, r1
 8001c76:	4611      	mov	r1, r2
 8001c78:	4b44      	ldr	r3, [pc, #272]	; (8001d8c <Usart_Init+0x56c>)
 8001c7a:	fba3 2301 	umull	r2, r3, r3, r1
 8001c7e:	095b      	lsrs	r3, r3, #5
 8001c80:	2264      	movs	r2, #100	; 0x64
 8001c82:	fb02 f303 	mul.w	r3, r2, r3
 8001c86:	1acb      	subs	r3, r1, r3
 8001c88:	011b      	lsls	r3, r3, #4
 8001c8a:	3332      	adds	r3, #50	; 0x32
 8001c8c:	4a3f      	ldr	r2, [pc, #252]	; (8001d8c <Usart_Init+0x56c>)
 8001c8e:	fba2 2303 	umull	r2, r3, r2, r3
 8001c92:	095b      	lsrs	r3, r3, #5
 8001c94:	b29b      	uxth	r3, r3
 8001c96:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8001c9a:	b29b      	uxth	r3, r3
 8001c9c:	4423      	add	r3, r4
 8001c9e:	b29c      	uxth	r4, r3
 8001ca0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8001ca4:	2200      	movs	r2, #0
 8001ca6:	673b      	str	r3, [r7, #112]	; 0x70
 8001ca8:	677a      	str	r2, [r7, #116]	; 0x74
 8001caa:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 8001cae:	4642      	mov	r2, r8
 8001cb0:	464b      	mov	r3, r9
 8001cb2:	1891      	adds	r1, r2, r2
 8001cb4:	60b9      	str	r1, [r7, #8]
 8001cb6:	415b      	adcs	r3, r3
 8001cb8:	60fb      	str	r3, [r7, #12]
 8001cba:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8001cbe:	4641      	mov	r1, r8
 8001cc0:	1851      	adds	r1, r2, r1
 8001cc2:	6039      	str	r1, [r7, #0]
 8001cc4:	4649      	mov	r1, r9
 8001cc6:	414b      	adcs	r3, r1
 8001cc8:	607b      	str	r3, [r7, #4]
 8001cca:	f04f 0200 	mov.w	r2, #0
 8001cce:	f04f 0300 	mov.w	r3, #0
 8001cd2:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8001cd6:	4659      	mov	r1, fp
 8001cd8:	00cb      	lsls	r3, r1, #3
 8001cda:	4651      	mov	r1, sl
 8001cdc:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8001ce0:	4651      	mov	r1, sl
 8001ce2:	00ca      	lsls	r2, r1, #3
 8001ce4:	4610      	mov	r0, r2
 8001ce6:	4619      	mov	r1, r3
 8001ce8:	4603      	mov	r3, r0
 8001cea:	4642      	mov	r2, r8
 8001cec:	189b      	adds	r3, r3, r2
 8001cee:	66bb      	str	r3, [r7, #104]	; 0x68
 8001cf0:	464b      	mov	r3, r9
 8001cf2:	460a      	mov	r2, r1
 8001cf4:	eb42 0303 	adc.w	r3, r2, r3
 8001cf8:	66fb      	str	r3, [r7, #108]	; 0x6c
 8001cfa:	f8d7 3100 	ldr.w	r3, [r7, #256]	; 0x100
 8001cfe:	2200      	movs	r2, #0
 8001d00:	663b      	str	r3, [r7, #96]	; 0x60
 8001d02:	667a      	str	r2, [r7, #100]	; 0x64
 8001d04:	f04f 0200 	mov.w	r2, #0
 8001d08:	f04f 0300 	mov.w	r3, #0
 8001d0c:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 8001d10:	4649      	mov	r1, r9
 8001d12:	008b      	lsls	r3, r1, #2
 8001d14:	4641      	mov	r1, r8
 8001d16:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8001d1a:	4641      	mov	r1, r8
 8001d1c:	008a      	lsls	r2, r1, #2
 8001d1e:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 8001d22:	f7fe ffd1 	bl	8000cc8 <__aeabi_uldivmod>
 8001d26:	4602      	mov	r2, r0
 8001d28:	460b      	mov	r3, r1
 8001d2a:	4b18      	ldr	r3, [pc, #96]	; (8001d8c <Usart_Init+0x56c>)
 8001d2c:	fba3 1302 	umull	r1, r3, r3, r2
 8001d30:	095b      	lsrs	r3, r3, #5
 8001d32:	2164      	movs	r1, #100	; 0x64
 8001d34:	fb01 f303 	mul.w	r3, r1, r3
 8001d38:	1ad3      	subs	r3, r2, r3
 8001d3a:	011b      	lsls	r3, r3, #4
 8001d3c:	3332      	adds	r3, #50	; 0x32
 8001d3e:	4a13      	ldr	r2, [pc, #76]	; (8001d8c <Usart_Init+0x56c>)
 8001d40:	fba2 2303 	umull	r2, r3, r2, r3
 8001d44:	095b      	lsrs	r3, r3, #5
 8001d46:	b29b      	uxth	r3, r3
 8001d48:	f003 030f 	and.w	r3, r3, #15
 8001d4c:	b29b      	uxth	r3, r3
 8001d4e:	4423      	add	r3, r4
 8001d50:	b29b      	uxth	r3, r3
 8001d52:	4a0d      	ldr	r2, [pc, #52]	; (8001d88 <Usart_Init+0x568>)
 8001d54:	4333      	orrs	r3, r6
 8001d56:	6093      	str	r3, [r2, #8]
	}

	 /* In Asynchronous mode, following bits must be kept cleared:
	  - LINEN, CLKEN bits in the USART_CR2 register,
	  - SCEN, IREN and HDSEL bits in the USART_CR3 register.*/
	 CLEAR_BIT(USART3->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8001d58:	4b0b      	ldr	r3, [pc, #44]	; (8001d88 <Usart_Init+0x568>)
 8001d5a:	691b      	ldr	r3, [r3, #16]
 8001d5c:	4a0a      	ldr	r2, [pc, #40]	; (8001d88 <Usart_Init+0x568>)
 8001d5e:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 8001d62:	6113      	str	r3, [r2, #16]
	 CLEAR_BIT(USART3->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
 8001d64:	4b08      	ldr	r3, [pc, #32]	; (8001d88 <Usart_Init+0x568>)
 8001d66:	695b      	ldr	r3, [r3, #20]
 8001d68:	4a07      	ldr	r2, [pc, #28]	; (8001d88 <Usart_Init+0x568>)
 8001d6a:	f023 032a 	bic.w	r3, r3, #42	; 0x2a
 8001d6e:	6153      	str	r3, [r2, #20]

	 //Enable Peripheral
	 SET_BIT(USART3->CR1, USART_CR1_UE);
 8001d70:	4b05      	ldr	r3, [pc, #20]	; (8001d88 <Usart_Init+0x568>)
 8001d72:	68db      	ldr	r3, [r3, #12]
 8001d74:	4a04      	ldr	r2, [pc, #16]	; (8001d88 <Usart_Init+0x568>)
 8001d76:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001d7a:	60d3      	str	r3, [r2, #12]
}
 8001d7c:	bf00      	nop
 8001d7e:	f507 7786 	add.w	r7, r7, #268	; 0x10c
 8001d82:	46bd      	mov	sp, r7
 8001d84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001d88:	40004800 	.word	0x40004800
 8001d8c:	51eb851f 	.word	0x51eb851f

08001d90 <RCC_GetSysClocksFreq>:
  *         configuration based on this function will be incorrect.
  * @param  RCC_Clocks pointer to a @ref LL_RCC_ClocksTypeDef structure which will hold the clocks frequencies
  * @retval None
  */
void RCC_GetSysClocksFreq(LL_RCC_ClocksTypeDef *RCC_Clocks)
{
 8001d90:	b590      	push	{r4, r7, lr}
 8001d92:	b083      	sub	sp, #12
 8001d94:	af00      	add	r7, sp, #0
 8001d96:	6078      	str	r0, [r7, #4]
  /* Get SYSCLK frequency */
  RCC_Clocks->SYSCLK_Frequency = RCC_GetSysClockFreq();
 8001d98:	f000 f894 	bl	8001ec4 <RCC_GetSysClockFreq>
 8001d9c:	4602      	mov	r2, r0
 8001d9e:	687b      	ldr	r3, [r7, #4]
 8001da0:	601a      	str	r2, [r3, #0]

  /* HCLK clock frequency */
  RCC_Clocks->HCLK_Frequency   = __LL_RCC_CALC_HCLK_FREQ(RCC_Clocks->SYSCLK_Frequency, LL_RCC_GetAHBPrescaler());
 8001da2:	687b      	ldr	r3, [r7, #4]
 8001da4:	681c      	ldr	r4, [r3, #0]
 8001da6:	f7ff f98f 	bl	80010c8 <LL_RCC_GetAHBPrescaler>
 8001daa:	4603      	mov	r3, r0
 8001dac:	091b      	lsrs	r3, r3, #4
 8001dae:	f003 030f 	and.w	r3, r3, #15
 8001db2:	4a11      	ldr	r2, [pc, #68]	; (8001df8 <RCC_GetSysClocksFreq+0x68>)
 8001db4:	5cd3      	ldrb	r3, [r2, r3]
 8001db6:	fa24 f203 	lsr.w	r2, r4, r3
 8001dba:	687b      	ldr	r3, [r7, #4]
 8001dbc:	605a      	str	r2, [r3, #4]

  /* PCLK1 clock frequency */
  RCC_Clocks->PCLK1_Frequency  = __LL_RCC_CALC_PCLK1_FREQ(RCC_Clocks->HCLK_Frequency, LL_RCC_GetAPB1Prescaler());
 8001dbe:	687b      	ldr	r3, [r7, #4]
 8001dc0:	685c      	ldr	r4, [r3, #4]
 8001dc2:	f7ff f98f 	bl	80010e4 <LL_RCC_GetAPB1Prescaler>
 8001dc6:	4603      	mov	r3, r0
 8001dc8:	0a9b      	lsrs	r3, r3, #10
 8001dca:	4a0c      	ldr	r2, [pc, #48]	; (8001dfc <RCC_GetSysClocksFreq+0x6c>)
 8001dcc:	5cd3      	ldrb	r3, [r2, r3]
 8001dce:	fa24 f203 	lsr.w	r2, r4, r3
 8001dd2:	687b      	ldr	r3, [r7, #4]
 8001dd4:	609a      	str	r2, [r3, #8]

  /* PCLK2 clock frequency */
  RCC_Clocks->PCLK2_Frequency  = __LL_RCC_CALC_PCLK2_FREQ(RCC_Clocks->HCLK_Frequency , LL_RCC_GetAPB2Prescaler());
 8001dd6:	687b      	ldr	r3, [r7, #4]
 8001dd8:	685c      	ldr	r4, [r3, #4]
 8001dda:	f7ff f991 	bl	8001100 <LL_RCC_GetAPB2Prescaler>
 8001dde:	4603      	mov	r3, r0
 8001de0:	0b5b      	lsrs	r3, r3, #13
 8001de2:	4a06      	ldr	r2, [pc, #24]	; (8001dfc <RCC_GetSysClocksFreq+0x6c>)
 8001de4:	5cd3      	ldrb	r3, [r2, r3]
 8001de6:	fa24 f203 	lsr.w	r2, r4, r3
 8001dea:	687b      	ldr	r3, [r7, #4]
 8001dec:	60da      	str	r2, [r3, #12]
}
 8001dee:	bf00      	nop
 8001df0:	370c      	adds	r7, #12
 8001df2:	46bd      	mov	sp, r7
 8001df4:	bd90      	pop	{r4, r7, pc}
 8001df6:	bf00      	nop
 8001df8:	08008420 	.word	0x08008420
 8001dfc:	08008430 	.word	0x08008430

08001e00 <delay_ms>:
/**
 * @brief  function to provide delay in milliseconds specified by user
 * @param  ms milliseconds to wait
 * @retval none
 */
void delay_ms(uint32_t ms){
 8001e00:	e92d 03b0 	stmdb	sp!, {r4, r5, r7, r8, r9}
 8001e04:	b085      	sub	sp, #20
 8001e06:	af00      	add	r7, sp, #0
 8001e08:	6078      	str	r0, [r7, #4]
	uint64_t counter_now = counter_millis;
 8001e0a:	490e      	ldr	r1, [pc, #56]	; (8001e44 <delay_ms+0x44>)
 8001e0c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8001e10:	e9c7 0102 	strd	r0, r1, [r7, #8]
	while((counter_millis-counter_now)<ms){
 8001e14:	bf00      	nop
 8001e16:	490b      	ldr	r1, [pc, #44]	; (8001e44 <delay_ms+0x44>)
 8001e18:	e9d1 4500 	ldrd	r4, r5, [r1]
 8001e1c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001e20:	1a22      	subs	r2, r4, r0
 8001e22:	eb65 0301 	sbc.w	r3, r5, r1
 8001e26:	6879      	ldr	r1, [r7, #4]
 8001e28:	2000      	movs	r0, #0
 8001e2a:	4688      	mov	r8, r1
 8001e2c:	4681      	mov	r9, r0
 8001e2e:	4542      	cmp	r2, r8
 8001e30:	eb73 0109 	sbcs.w	r1, r3, r9
 8001e34:	d3ef      	bcc.n	8001e16 <delay_ms+0x16>
		//wait for it
	}


}
 8001e36:	bf00      	nop
 8001e38:	bf00      	nop
 8001e3a:	3714      	adds	r7, #20
 8001e3c:	46bd      	mov	sp, r7
 8001e3e:	e8bd 03b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9}
 8001e42:	4770      	bx	lr
 8001e44:	20000280 	.word	0x20000280

08001e48 <TIM7_IRQHandler>:
 * @param  none
 * @retval none
 * @note   check for the interrupt flag and increase counter
 */
void TIM7_IRQHandler(void)
{
 8001e48:	b580      	push	{r7, lr}
 8001e4a:	af00      	add	r7, sp, #0
	if(READ_BIT(TIM7->SR,TIM_SR_UIF)){
 8001e4c:	4b0e      	ldr	r3, [pc, #56]	; (8001e88 <TIM7_IRQHandler+0x40>)
 8001e4e:	691b      	ldr	r3, [r3, #16]
 8001e50:	f003 0301 	and.w	r3, r3, #1
 8001e54:	2b00      	cmp	r3, #0
 8001e56:	d014      	beq.n	8001e82 <TIM7_IRQHandler+0x3a>
		CLEAR_BIT(TIM7->SR,TIM_SR_UIF); //clear the interrupt flag
 8001e58:	4b0b      	ldr	r3, [pc, #44]	; (8001e88 <TIM7_IRQHandler+0x40>)
 8001e5a:	691b      	ldr	r3, [r3, #16]
 8001e5c:	4a0a      	ldr	r2, [pc, #40]	; (8001e88 <TIM7_IRQHandler+0x40>)
 8001e5e:	f023 0301 	bic.w	r3, r3, #1
 8001e62:	6113      	str	r3, [r2, #16]
		if(start){
 8001e64:	4b09      	ldr	r3, [pc, #36]	; (8001e8c <TIM7_IRQHandler+0x44>)
 8001e66:	781b      	ldrb	r3, [r3, #0]
 8001e68:	2b00      	cmp	r3, #0
 8001e6a:	d00a      	beq.n	8001e82 <TIM7_IRQHandler+0x3a>
			//read scaled data, then get filter data
			MPU_readscaledData(&hi2c, &imu);
 8001e6c:	4908      	ldr	r1, [pc, #32]	; (8001e90 <TIM7_IRQHandler+0x48>)
 8001e6e:	4809      	ldr	r0, [pc, #36]	; (8001e94 <TIM7_IRQHandler+0x4c>)
 8001e70:	f001 fb20 	bl	80034b4 <MPU_readscaledData>
			Filter_calcAttitude(&filter, &imu);
 8001e74:	4906      	ldr	r1, [pc, #24]	; (8001e90 <TIM7_IRQHandler+0x48>)
 8001e76:	4808      	ldr	r0, [pc, #32]	; (8001e98 <TIM7_IRQHandler+0x50>)
 8001e78:	f000 fba6 	bl	80025c8 <Filter_calcAttitude>
			send_data = 1;
 8001e7c:	4b07      	ldr	r3, [pc, #28]	; (8001e9c <TIM7_IRQHandler+0x54>)
 8001e7e:	2201      	movs	r2, #1
 8001e80:	701a      	strb	r2, [r3, #0]
		}
	}
}
 8001e82:	bf00      	nop
 8001e84:	bd80      	pop	{r7, pc}
 8001e86:	bf00      	nop
 8001e88:	40001400 	.word	0x40001400
 8001e8c:	20000292 	.word	0x20000292
 8001e90:	20000220 	.word	0x20000220
 8001e94:	2000020c 	.word	0x2000020c
 8001e98:	2000025c 	.word	0x2000025c
 8001e9c:	20000293 	.word	0x20000293

08001ea0 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001ea0:	b480      	push	{r7}
 8001ea2:	af00      	add	r7, sp, #0
	counter_millis++;
 8001ea4:	4b06      	ldr	r3, [pc, #24]	; (8001ec0 <SysTick_Handler+0x20>)
 8001ea6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001eaa:	1c50      	adds	r0, r2, #1
 8001eac:	f143 0100 	adc.w	r1, r3, #0
 8001eb0:	4b03      	ldr	r3, [pc, #12]	; (8001ec0 <SysTick_Handler+0x20>)
 8001eb2:	e9c3 0100 	strd	r0, r1, [r3]
}
 8001eb6:	bf00      	nop
 8001eb8:	46bd      	mov	sp, r7
 8001eba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ebe:	4770      	bx	lr
 8001ec0:	20000280 	.word	0x20000280

08001ec4 <RCC_GetSysClockFreq>:
 * @param  none
 * @retval system clock frequency
 * @note   gets system core frequency in MHz based on the clock source set
 */
uint32_t RCC_GetSysClockFreq(void)
{
 8001ec4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8001ec8:	b0ae      	sub	sp, #184	; 0xb8
 8001eca:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U;
 8001ecc:	2300      	movs	r3, #0
 8001ece:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
  uint32_t pllvco = 0U;
 8001ed2:	2300      	movs	r3, #0
 8001ed4:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
  uint32_t pllp = 0U;
 8001ed8:	2300      	movs	r3, #0
 8001eda:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
  uint32_t pllr = 0U;
 8001ede:	2300      	movs	r3, #0
 8001ee0:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
  uint32_t sysclockfreq = 0U;
 8001ee4:	2300      	movs	r3, #0
 8001ee6:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8001eea:	4bcb      	ldr	r3, [pc, #812]	; (8002218 <RCC_GetSysClockFreq+0x354>)
 8001eec:	689b      	ldr	r3, [r3, #8]
 8001eee:	f003 030c 	and.w	r3, r3, #12
 8001ef2:	2b0c      	cmp	r3, #12
 8001ef4:	f200 8206 	bhi.w	8002304 <RCC_GetSysClockFreq+0x440>
 8001ef8:	a201      	add	r2, pc, #4	; (adr r2, 8001f00 <RCC_GetSysClockFreq+0x3c>)
 8001efa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001efe:	bf00      	nop
 8001f00:	08001f35 	.word	0x08001f35
 8001f04:	08002305 	.word	0x08002305
 8001f08:	08002305 	.word	0x08002305
 8001f0c:	08002305 	.word	0x08002305
 8001f10:	08001f3d 	.word	0x08001f3d
 8001f14:	08002305 	.word	0x08002305
 8001f18:	08002305 	.word	0x08002305
 8001f1c:	08002305 	.word	0x08002305
 8001f20:	08001f45 	.word	0x08001f45
 8001f24:	08002305 	.word	0x08002305
 8001f28:	08002305 	.word	0x08002305
 8001f2c:	08002305 	.word	0x08002305
 8001f30:	08002135 	.word	0x08002135
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8001f34:	4bb9      	ldr	r3, [pc, #740]	; (800221c <RCC_GetSysClockFreq+0x358>)
 8001f36:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
       break;
 8001f3a:	e1e7      	b.n	800230c <RCC_GetSysClockFreq+0x448>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8001f3c:	4bb8      	ldr	r3, [pc, #736]	; (8002220 <RCC_GetSysClockFreq+0x35c>)
 8001f3e:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
      break;
 8001f42:	e1e3      	b.n	800230c <RCC_GetSysClockFreq+0x448>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL/PLLP used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8001f44:	4bb4      	ldr	r3, [pc, #720]	; (8002218 <RCC_GetSysClockFreq+0x354>)
 8001f46:	685b      	ldr	r3, [r3, #4]
 8001f48:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8001f4c:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
      if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) != RCC_PLLCFGR_PLLSRC_HSI)
 8001f50:	4bb1      	ldr	r3, [pc, #708]	; (8002218 <RCC_GetSysClockFreq+0x354>)
 8001f52:	685b      	ldr	r3, [r3, #4]
 8001f54:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8001f58:	2b00      	cmp	r3, #0
 8001f5a:	d071      	beq.n	8002040 <RCC_GetSysClockFreq+0x17c>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8001f5c:	4bae      	ldr	r3, [pc, #696]	; (8002218 <RCC_GetSysClockFreq+0x354>)
 8001f5e:	685b      	ldr	r3, [r3, #4]
 8001f60:	099b      	lsrs	r3, r3, #6
 8001f62:	2200      	movs	r2, #0
 8001f64:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8001f68:	f8c7 209c 	str.w	r2, [r7, #156]	; 0x9c
 8001f6c:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8001f70:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8001f74:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8001f78:	2300      	movs	r3, #0
 8001f7a:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8001f7e:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 8001f82:	4622      	mov	r2, r4
 8001f84:	462b      	mov	r3, r5
 8001f86:	f04f 0000 	mov.w	r0, #0
 8001f8a:	f04f 0100 	mov.w	r1, #0
 8001f8e:	0159      	lsls	r1, r3, #5
 8001f90:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8001f94:	0150      	lsls	r0, r2, #5
 8001f96:	4602      	mov	r2, r0
 8001f98:	460b      	mov	r3, r1
 8001f9a:	4621      	mov	r1, r4
 8001f9c:	1a51      	subs	r1, r2, r1
 8001f9e:	6439      	str	r1, [r7, #64]	; 0x40
 8001fa0:	4629      	mov	r1, r5
 8001fa2:	eb63 0301 	sbc.w	r3, r3, r1
 8001fa6:	647b      	str	r3, [r7, #68]	; 0x44
 8001fa8:	f04f 0200 	mov.w	r2, #0
 8001fac:	f04f 0300 	mov.w	r3, #0
 8001fb0:	e9d7 8910 	ldrd	r8, r9, [r7, #64]	; 0x40
 8001fb4:	4649      	mov	r1, r9
 8001fb6:	018b      	lsls	r3, r1, #6
 8001fb8:	4641      	mov	r1, r8
 8001fba:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8001fbe:	4641      	mov	r1, r8
 8001fc0:	018a      	lsls	r2, r1, #6
 8001fc2:	4641      	mov	r1, r8
 8001fc4:	1a51      	subs	r1, r2, r1
 8001fc6:	63b9      	str	r1, [r7, #56]	; 0x38
 8001fc8:	4649      	mov	r1, r9
 8001fca:	eb63 0301 	sbc.w	r3, r3, r1
 8001fce:	63fb      	str	r3, [r7, #60]	; 0x3c
 8001fd0:	f04f 0200 	mov.w	r2, #0
 8001fd4:	f04f 0300 	mov.w	r3, #0
 8001fd8:	e9d7 890e 	ldrd	r8, r9, [r7, #56]	; 0x38
 8001fdc:	4649      	mov	r1, r9
 8001fde:	00cb      	lsls	r3, r1, #3
 8001fe0:	4641      	mov	r1, r8
 8001fe2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8001fe6:	4641      	mov	r1, r8
 8001fe8:	00ca      	lsls	r2, r1, #3
 8001fea:	4610      	mov	r0, r2
 8001fec:	4619      	mov	r1, r3
 8001fee:	4603      	mov	r3, r0
 8001ff0:	4622      	mov	r2, r4
 8001ff2:	189b      	adds	r3, r3, r2
 8001ff4:	633b      	str	r3, [r7, #48]	; 0x30
 8001ff6:	462b      	mov	r3, r5
 8001ff8:	460a      	mov	r2, r1
 8001ffa:	eb42 0303 	adc.w	r3, r2, r3
 8001ffe:	637b      	str	r3, [r7, #52]	; 0x34
 8002000:	f04f 0200 	mov.w	r2, #0
 8002004:	f04f 0300 	mov.w	r3, #0
 8002008:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 800200c:	4629      	mov	r1, r5
 800200e:	024b      	lsls	r3, r1, #9
 8002010:	4621      	mov	r1, r4
 8002012:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8002016:	4621      	mov	r1, r4
 8002018:	024a      	lsls	r2, r1, #9
 800201a:	4610      	mov	r0, r2
 800201c:	4619      	mov	r1, r3
 800201e:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002022:	2200      	movs	r2, #0
 8002024:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8002028:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 800202c:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	; 0x88
 8002030:	f7fe fe4a 	bl	8000cc8 <__aeabi_uldivmod>
 8002034:	4602      	mov	r2, r0
 8002036:	460b      	mov	r3, r1
 8002038:	4613      	mov	r3, r2
 800203a:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800203e:	e067      	b.n	8002110 <RCC_GetSysClockFreq+0x24c>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8002040:	4b75      	ldr	r3, [pc, #468]	; (8002218 <RCC_GetSysClockFreq+0x354>)
 8002042:	685b      	ldr	r3, [r3, #4]
 8002044:	099b      	lsrs	r3, r3, #6
 8002046:	2200      	movs	r2, #0
 8002048:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800204c:	f8c7 2084 	str.w	r2, [r7, #132]	; 0x84
 8002050:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8002054:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002058:	67bb      	str	r3, [r7, #120]	; 0x78
 800205a:	2300      	movs	r3, #0
 800205c:	67fb      	str	r3, [r7, #124]	; 0x7c
 800205e:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	; 0x78
 8002062:	4622      	mov	r2, r4
 8002064:	462b      	mov	r3, r5
 8002066:	f04f 0000 	mov.w	r0, #0
 800206a:	f04f 0100 	mov.w	r1, #0
 800206e:	0159      	lsls	r1, r3, #5
 8002070:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002074:	0150      	lsls	r0, r2, #5
 8002076:	4602      	mov	r2, r0
 8002078:	460b      	mov	r3, r1
 800207a:	4621      	mov	r1, r4
 800207c:	1a51      	subs	r1, r2, r1
 800207e:	62b9      	str	r1, [r7, #40]	; 0x28
 8002080:	4629      	mov	r1, r5
 8002082:	eb63 0301 	sbc.w	r3, r3, r1
 8002086:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002088:	f04f 0200 	mov.w	r2, #0
 800208c:	f04f 0300 	mov.w	r3, #0
 8002090:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	; 0x28
 8002094:	4649      	mov	r1, r9
 8002096:	018b      	lsls	r3, r1, #6
 8002098:	4641      	mov	r1, r8
 800209a:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800209e:	4641      	mov	r1, r8
 80020a0:	018a      	lsls	r2, r1, #6
 80020a2:	4641      	mov	r1, r8
 80020a4:	ebb2 0a01 	subs.w	sl, r2, r1
 80020a8:	4649      	mov	r1, r9
 80020aa:	eb63 0b01 	sbc.w	fp, r3, r1
 80020ae:	f04f 0200 	mov.w	r2, #0
 80020b2:	f04f 0300 	mov.w	r3, #0
 80020b6:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80020ba:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80020be:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80020c2:	4692      	mov	sl, r2
 80020c4:	469b      	mov	fp, r3
 80020c6:	4623      	mov	r3, r4
 80020c8:	eb1a 0303 	adds.w	r3, sl, r3
 80020cc:	623b      	str	r3, [r7, #32]
 80020ce:	462b      	mov	r3, r5
 80020d0:	eb4b 0303 	adc.w	r3, fp, r3
 80020d4:	627b      	str	r3, [r7, #36]	; 0x24
 80020d6:	f04f 0200 	mov.w	r2, #0
 80020da:	f04f 0300 	mov.w	r3, #0
 80020de:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 80020e2:	4629      	mov	r1, r5
 80020e4:	028b      	lsls	r3, r1, #10
 80020e6:	4621      	mov	r1, r4
 80020e8:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80020ec:	4621      	mov	r1, r4
 80020ee:	028a      	lsls	r2, r1, #10
 80020f0:	4610      	mov	r0, r2
 80020f2:	4619      	mov	r1, r3
 80020f4:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80020f8:	2200      	movs	r2, #0
 80020fa:	673b      	str	r3, [r7, #112]	; 0x70
 80020fc:	677a      	str	r2, [r7, #116]	; 0x74
 80020fe:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 8002102:	f7fe fde1 	bl	8000cc8 <__aeabi_uldivmod>
 8002106:	4602      	mov	r2, r0
 8002108:	460b      	mov	r3, r1
 800210a:	4613      	mov	r3, r2
 800210c:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8002110:	4b41      	ldr	r3, [pc, #260]	; (8002218 <RCC_GetSysClockFreq+0x354>)
 8002112:	685b      	ldr	r3, [r3, #4]
 8002114:	0c1b      	lsrs	r3, r3, #16
 8002116:	f003 0303 	and.w	r3, r3, #3
 800211a:	3301      	adds	r3, #1
 800211c:	005b      	lsls	r3, r3, #1
 800211e:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8

      sysclockfreq = pllvco/pllp;
 8002122:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8002126:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 800212a:	fbb2 f3f3 	udiv	r3, r2, r3
 800212e:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
      break;
 8002132:	e0eb      	b.n	800230c <RCC_GetSysClockFreq+0x448>
    }
    case RCC_CFGR_SWS_PLLR:  /* PLL/PLLR used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8002134:	4b38      	ldr	r3, [pc, #224]	; (8002218 <RCC_GetSysClockFreq+0x354>)
 8002136:	685b      	ldr	r3, [r3, #4]
 8002138:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800213c:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
      if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) != RCC_PLLCFGR_PLLSRC_HSI)
 8002140:	4b35      	ldr	r3, [pc, #212]	; (8002218 <RCC_GetSysClockFreq+0x354>)
 8002142:	685b      	ldr	r3, [r3, #4]
 8002144:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002148:	2b00      	cmp	r3, #0
 800214a:	d06b      	beq.n	8002224 <RCC_GetSysClockFreq+0x360>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800214c:	4b32      	ldr	r3, [pc, #200]	; (8002218 <RCC_GetSysClockFreq+0x354>)
 800214e:	685b      	ldr	r3, [r3, #4]
 8002150:	099b      	lsrs	r3, r3, #6
 8002152:	2200      	movs	r2, #0
 8002154:	66bb      	str	r3, [r7, #104]	; 0x68
 8002156:	66fa      	str	r2, [r7, #108]	; 0x6c
 8002158:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800215a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800215e:	663b      	str	r3, [r7, #96]	; 0x60
 8002160:	2300      	movs	r3, #0
 8002162:	667b      	str	r3, [r7, #100]	; 0x64
 8002164:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	; 0x60
 8002168:	4622      	mov	r2, r4
 800216a:	462b      	mov	r3, r5
 800216c:	f04f 0000 	mov.w	r0, #0
 8002170:	f04f 0100 	mov.w	r1, #0
 8002174:	0159      	lsls	r1, r3, #5
 8002176:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800217a:	0150      	lsls	r0, r2, #5
 800217c:	4602      	mov	r2, r0
 800217e:	460b      	mov	r3, r1
 8002180:	4621      	mov	r1, r4
 8002182:	1a51      	subs	r1, r2, r1
 8002184:	61b9      	str	r1, [r7, #24]
 8002186:	4629      	mov	r1, r5
 8002188:	eb63 0301 	sbc.w	r3, r3, r1
 800218c:	61fb      	str	r3, [r7, #28]
 800218e:	f04f 0200 	mov.w	r2, #0
 8002192:	f04f 0300 	mov.w	r3, #0
 8002196:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 800219a:	4659      	mov	r1, fp
 800219c:	018b      	lsls	r3, r1, #6
 800219e:	4651      	mov	r1, sl
 80021a0:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80021a4:	4651      	mov	r1, sl
 80021a6:	018a      	lsls	r2, r1, #6
 80021a8:	4651      	mov	r1, sl
 80021aa:	ebb2 0801 	subs.w	r8, r2, r1
 80021ae:	4659      	mov	r1, fp
 80021b0:	eb63 0901 	sbc.w	r9, r3, r1
 80021b4:	f04f 0200 	mov.w	r2, #0
 80021b8:	f04f 0300 	mov.w	r3, #0
 80021bc:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80021c0:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80021c4:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80021c8:	4690      	mov	r8, r2
 80021ca:	4699      	mov	r9, r3
 80021cc:	4623      	mov	r3, r4
 80021ce:	eb18 0303 	adds.w	r3, r8, r3
 80021d2:	613b      	str	r3, [r7, #16]
 80021d4:	462b      	mov	r3, r5
 80021d6:	eb49 0303 	adc.w	r3, r9, r3
 80021da:	617b      	str	r3, [r7, #20]
 80021dc:	f04f 0200 	mov.w	r2, #0
 80021e0:	f04f 0300 	mov.w	r3, #0
 80021e4:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 80021e8:	4629      	mov	r1, r5
 80021ea:	024b      	lsls	r3, r1, #9
 80021ec:	4621      	mov	r1, r4
 80021ee:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 80021f2:	4621      	mov	r1, r4
 80021f4:	024a      	lsls	r2, r1, #9
 80021f6:	4610      	mov	r0, r2
 80021f8:	4619      	mov	r1, r3
 80021fa:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80021fe:	2200      	movs	r2, #0
 8002200:	65bb      	str	r3, [r7, #88]	; 0x58
 8002202:	65fa      	str	r2, [r7, #92]	; 0x5c
 8002204:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8002208:	f7fe fd5e 	bl	8000cc8 <__aeabi_uldivmod>
 800220c:	4602      	mov	r2, r0
 800220e:	460b      	mov	r3, r1
 8002210:	4613      	mov	r3, r2
 8002212:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8002216:	e065      	b.n	80022e4 <RCC_GetSysClockFreq+0x420>
 8002218:	40023800 	.word	0x40023800
 800221c:	00f42400 	.word	0x00f42400
 8002220:	007a1200 	.word	0x007a1200
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8002224:	4b3d      	ldr	r3, [pc, #244]	; (800231c <RCC_GetSysClockFreq+0x458>)
 8002226:	685b      	ldr	r3, [r3, #4]
 8002228:	099b      	lsrs	r3, r3, #6
 800222a:	2200      	movs	r2, #0
 800222c:	4618      	mov	r0, r3
 800222e:	4611      	mov	r1, r2
 8002230:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8002234:	653b      	str	r3, [r7, #80]	; 0x50
 8002236:	2300      	movs	r3, #0
 8002238:	657b      	str	r3, [r7, #84]	; 0x54
 800223a:	e9d7 8914 	ldrd	r8, r9, [r7, #80]	; 0x50
 800223e:	4642      	mov	r2, r8
 8002240:	464b      	mov	r3, r9
 8002242:	f04f 0000 	mov.w	r0, #0
 8002246:	f04f 0100 	mov.w	r1, #0
 800224a:	0159      	lsls	r1, r3, #5
 800224c:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002250:	0150      	lsls	r0, r2, #5
 8002252:	4602      	mov	r2, r0
 8002254:	460b      	mov	r3, r1
 8002256:	4641      	mov	r1, r8
 8002258:	1a51      	subs	r1, r2, r1
 800225a:	60b9      	str	r1, [r7, #8]
 800225c:	4649      	mov	r1, r9
 800225e:	eb63 0301 	sbc.w	r3, r3, r1
 8002262:	60fb      	str	r3, [r7, #12]
 8002264:	f04f 0200 	mov.w	r2, #0
 8002268:	f04f 0300 	mov.w	r3, #0
 800226c:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 8002270:	4659      	mov	r1, fp
 8002272:	018b      	lsls	r3, r1, #6
 8002274:	4651      	mov	r1, sl
 8002276:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800227a:	4651      	mov	r1, sl
 800227c:	018a      	lsls	r2, r1, #6
 800227e:	4651      	mov	r1, sl
 8002280:	1a54      	subs	r4, r2, r1
 8002282:	4659      	mov	r1, fp
 8002284:	eb63 0501 	sbc.w	r5, r3, r1
 8002288:	f04f 0200 	mov.w	r2, #0
 800228c:	f04f 0300 	mov.w	r3, #0
 8002290:	00eb      	lsls	r3, r5, #3
 8002292:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8002296:	00e2      	lsls	r2, r4, #3
 8002298:	4614      	mov	r4, r2
 800229a:	461d      	mov	r5, r3
 800229c:	4643      	mov	r3, r8
 800229e:	18e3      	adds	r3, r4, r3
 80022a0:	603b      	str	r3, [r7, #0]
 80022a2:	464b      	mov	r3, r9
 80022a4:	eb45 0303 	adc.w	r3, r5, r3
 80022a8:	607b      	str	r3, [r7, #4]
 80022aa:	f04f 0200 	mov.w	r2, #0
 80022ae:	f04f 0300 	mov.w	r3, #0
 80022b2:	e9d7 4500 	ldrd	r4, r5, [r7]
 80022b6:	4629      	mov	r1, r5
 80022b8:	028b      	lsls	r3, r1, #10
 80022ba:	4621      	mov	r1, r4
 80022bc:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80022c0:	4621      	mov	r1, r4
 80022c2:	028a      	lsls	r2, r1, #10
 80022c4:	4610      	mov	r0, r2
 80022c6:	4619      	mov	r1, r3
 80022c8:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80022cc:	2200      	movs	r2, #0
 80022ce:	64bb      	str	r3, [r7, #72]	; 0x48
 80022d0:	64fa      	str	r2, [r7, #76]	; 0x4c
 80022d2:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 80022d6:	f7fe fcf7 	bl	8000cc8 <__aeabi_uldivmod>
 80022da:	4602      	mov	r2, r0
 80022dc:	460b      	mov	r3, r1
 80022de:	4613      	mov	r3, r2
 80022e0:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
      }
      pllr = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos);
 80022e4:	4b0d      	ldr	r3, [pc, #52]	; (800231c <RCC_GetSysClockFreq+0x458>)
 80022e6:	685b      	ldr	r3, [r3, #4]
 80022e8:	0f1b      	lsrs	r3, r3, #28
 80022ea:	f003 0307 	and.w	r3, r3, #7
 80022ee:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4

      sysclockfreq = pllvco/pllr;
 80022f2:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 80022f6:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 80022fa:	fbb2 f3f3 	udiv	r3, r2, r3
 80022fe:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
      break;
 8002302:	e003      	b.n	800230c <RCC_GetSysClockFreq+0x448>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8002304:	4b06      	ldr	r3, [pc, #24]	; (8002320 <RCC_GetSysClockFreq+0x45c>)
 8002306:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
      break;
 800230a:	bf00      	nop
    }
  }
  return sysclockfreq;
 800230c:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
}
 8002310:	4618      	mov	r0, r3
 8002312:	37b8      	adds	r7, #184	; 0xb8
 8002314:	46bd      	mov	sp, r7
 8002316:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800231a:	bf00      	nop
 800231c:	40023800 	.word	0x40023800
 8002320:	00f42400 	.word	0x00f42400

08002324 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002324:	b480      	push	{r7}
 8002326:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8002328:	e7fe      	b.n	8002328 <NMI_Handler+0x4>

0800232a <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800232a:	b480      	push	{r7}
 800232c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800232e:	e7fe      	b.n	800232e <HardFault_Handler+0x4>

08002330 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002330:	b480      	push	{r7}
 8002332:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002334:	e7fe      	b.n	8002334 <MemManage_Handler+0x4>

08002336 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002336:	b480      	push	{r7}
 8002338:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800233a:	e7fe      	b.n	800233a <BusFault_Handler+0x4>

0800233c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 800233c:	b480      	push	{r7}
 800233e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002340:	e7fe      	b.n	8002340 <UsageFault_Handler+0x4>

08002342 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002342:	b480      	push	{r7}
 8002344:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002346:	bf00      	nop
 8002348:	46bd      	mov	sp, r7
 800234a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800234e:	4770      	bx	lr

08002350 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002350:	b480      	push	{r7}
 8002352:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002354:	bf00      	nop
 8002356:	46bd      	mov	sp, r7
 8002358:	f85d 7b04 	ldr.w	r7, [sp], #4
 800235c:	4770      	bx	lr

0800235e <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800235e:	b480      	push	{r7}
 8002360:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002362:	bf00      	nop
 8002364:	46bd      	mov	sp, r7
 8002366:	f85d 7b04 	ldr.w	r7, [sp], #4
 800236a:	4770      	bx	lr

0800236c <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 800236c:	b480      	push	{r7}
 800236e:	af00      	add	r7, sp, #0
  return 1;
 8002370:	2301      	movs	r3, #1
}
 8002372:	4618      	mov	r0, r3
 8002374:	46bd      	mov	sp, r7
 8002376:	f85d 7b04 	ldr.w	r7, [sp], #4
 800237a:	4770      	bx	lr

0800237c <_kill>:

int _kill(int pid, int sig)
{
 800237c:	b580      	push	{r7, lr}
 800237e:	b082      	sub	sp, #8
 8002380:	af00      	add	r7, sp, #0
 8002382:	6078      	str	r0, [r7, #4]
 8002384:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8002386:	f001 f91d 	bl	80035c4 <__errno>
 800238a:	4603      	mov	r3, r0
 800238c:	2216      	movs	r2, #22
 800238e:	601a      	str	r2, [r3, #0]
  return -1;
 8002390:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 8002394:	4618      	mov	r0, r3
 8002396:	3708      	adds	r7, #8
 8002398:	46bd      	mov	sp, r7
 800239a:	bd80      	pop	{r7, pc}

0800239c <_exit>:

void _exit (int status)
{
 800239c:	b580      	push	{r7, lr}
 800239e:	b082      	sub	sp, #8
 80023a0:	af00      	add	r7, sp, #0
 80023a2:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80023a4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80023a8:	6878      	ldr	r0, [r7, #4]
 80023aa:	f7ff ffe7 	bl	800237c <_kill>
  while (1) {}    /* Make sure we hang here */
 80023ae:	e7fe      	b.n	80023ae <_exit+0x12>

080023b0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80023b0:	b580      	push	{r7, lr}
 80023b2:	b086      	sub	sp, #24
 80023b4:	af00      	add	r7, sp, #0
 80023b6:	60f8      	str	r0, [r7, #12]
 80023b8:	60b9      	str	r1, [r7, #8]
 80023ba:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80023bc:	2300      	movs	r3, #0
 80023be:	617b      	str	r3, [r7, #20]
 80023c0:	e00a      	b.n	80023d8 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80023c2:	f3af 8000 	nop.w
 80023c6:	4601      	mov	r1, r0
 80023c8:	68bb      	ldr	r3, [r7, #8]
 80023ca:	1c5a      	adds	r2, r3, #1
 80023cc:	60ba      	str	r2, [r7, #8]
 80023ce:	b2ca      	uxtb	r2, r1
 80023d0:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80023d2:	697b      	ldr	r3, [r7, #20]
 80023d4:	3301      	adds	r3, #1
 80023d6:	617b      	str	r3, [r7, #20]
 80023d8:	697a      	ldr	r2, [r7, #20]
 80023da:	687b      	ldr	r3, [r7, #4]
 80023dc:	429a      	cmp	r2, r3
 80023de:	dbf0      	blt.n	80023c2 <_read+0x12>
  }

  return len;
 80023e0:	687b      	ldr	r3, [r7, #4]
}
 80023e2:	4618      	mov	r0, r3
 80023e4:	3718      	adds	r7, #24
 80023e6:	46bd      	mov	sp, r7
 80023e8:	bd80      	pop	{r7, pc}

080023ea <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80023ea:	b580      	push	{r7, lr}
 80023ec:	b086      	sub	sp, #24
 80023ee:	af00      	add	r7, sp, #0
 80023f0:	60f8      	str	r0, [r7, #12]
 80023f2:	60b9      	str	r1, [r7, #8]
 80023f4:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80023f6:	2300      	movs	r3, #0
 80023f8:	617b      	str	r3, [r7, #20]
 80023fa:	e009      	b.n	8002410 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80023fc:	68bb      	ldr	r3, [r7, #8]
 80023fe:	1c5a      	adds	r2, r3, #1
 8002400:	60ba      	str	r2, [r7, #8]
 8002402:	781b      	ldrb	r3, [r3, #0]
 8002404:	4618      	mov	r0, r3
 8002406:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800240a:	697b      	ldr	r3, [r7, #20]
 800240c:	3301      	adds	r3, #1
 800240e:	617b      	str	r3, [r7, #20]
 8002410:	697a      	ldr	r2, [r7, #20]
 8002412:	687b      	ldr	r3, [r7, #4]
 8002414:	429a      	cmp	r2, r3
 8002416:	dbf1      	blt.n	80023fc <_write+0x12>
  }
  return len;
 8002418:	687b      	ldr	r3, [r7, #4]
}
 800241a:	4618      	mov	r0, r3
 800241c:	3718      	adds	r7, #24
 800241e:	46bd      	mov	sp, r7
 8002420:	bd80      	pop	{r7, pc}

08002422 <_close>:

int _close(int file)
{
 8002422:	b480      	push	{r7}
 8002424:	b083      	sub	sp, #12
 8002426:	af00      	add	r7, sp, #0
 8002428:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800242a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 800242e:	4618      	mov	r0, r3
 8002430:	370c      	adds	r7, #12
 8002432:	46bd      	mov	sp, r7
 8002434:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002438:	4770      	bx	lr

0800243a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800243a:	b480      	push	{r7}
 800243c:	b083      	sub	sp, #12
 800243e:	af00      	add	r7, sp, #0
 8002440:	6078      	str	r0, [r7, #4]
 8002442:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8002444:	683b      	ldr	r3, [r7, #0]
 8002446:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800244a:	605a      	str	r2, [r3, #4]
  return 0;
 800244c:	2300      	movs	r3, #0
}
 800244e:	4618      	mov	r0, r3
 8002450:	370c      	adds	r7, #12
 8002452:	46bd      	mov	sp, r7
 8002454:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002458:	4770      	bx	lr

0800245a <_isatty>:

int _isatty(int file)
{
 800245a:	b480      	push	{r7}
 800245c:	b083      	sub	sp, #12
 800245e:	af00      	add	r7, sp, #0
 8002460:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8002462:	2301      	movs	r3, #1
}
 8002464:	4618      	mov	r0, r3
 8002466:	370c      	adds	r7, #12
 8002468:	46bd      	mov	sp, r7
 800246a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800246e:	4770      	bx	lr

08002470 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002470:	b480      	push	{r7}
 8002472:	b085      	sub	sp, #20
 8002474:	af00      	add	r7, sp, #0
 8002476:	60f8      	str	r0, [r7, #12]
 8002478:	60b9      	str	r1, [r7, #8]
 800247a:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800247c:	2300      	movs	r3, #0
}
 800247e:	4618      	mov	r0, r3
 8002480:	3714      	adds	r7, #20
 8002482:	46bd      	mov	sp, r7
 8002484:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002488:	4770      	bx	lr
	...

0800248c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800248c:	b580      	push	{r7, lr}
 800248e:	b086      	sub	sp, #24
 8002490:	af00      	add	r7, sp, #0
 8002492:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002494:	4a14      	ldr	r2, [pc, #80]	; (80024e8 <_sbrk+0x5c>)
 8002496:	4b15      	ldr	r3, [pc, #84]	; (80024ec <_sbrk+0x60>)
 8002498:	1ad3      	subs	r3, r2, r3
 800249a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800249c:	697b      	ldr	r3, [r7, #20]
 800249e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80024a0:	4b13      	ldr	r3, [pc, #76]	; (80024f0 <_sbrk+0x64>)
 80024a2:	681b      	ldr	r3, [r3, #0]
 80024a4:	2b00      	cmp	r3, #0
 80024a6:	d102      	bne.n	80024ae <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80024a8:	4b11      	ldr	r3, [pc, #68]	; (80024f0 <_sbrk+0x64>)
 80024aa:	4a12      	ldr	r2, [pc, #72]	; (80024f4 <_sbrk+0x68>)
 80024ac:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80024ae:	4b10      	ldr	r3, [pc, #64]	; (80024f0 <_sbrk+0x64>)
 80024b0:	681a      	ldr	r2, [r3, #0]
 80024b2:	687b      	ldr	r3, [r7, #4]
 80024b4:	4413      	add	r3, r2
 80024b6:	693a      	ldr	r2, [r7, #16]
 80024b8:	429a      	cmp	r2, r3
 80024ba:	d207      	bcs.n	80024cc <_sbrk+0x40>
  {
    errno = ENOMEM;
 80024bc:	f001 f882 	bl	80035c4 <__errno>
 80024c0:	4603      	mov	r3, r0
 80024c2:	220c      	movs	r2, #12
 80024c4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80024c6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80024ca:	e009      	b.n	80024e0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80024cc:	4b08      	ldr	r3, [pc, #32]	; (80024f0 <_sbrk+0x64>)
 80024ce:	681b      	ldr	r3, [r3, #0]
 80024d0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80024d2:	4b07      	ldr	r3, [pc, #28]	; (80024f0 <_sbrk+0x64>)
 80024d4:	681a      	ldr	r2, [r3, #0]
 80024d6:	687b      	ldr	r3, [r7, #4]
 80024d8:	4413      	add	r3, r2
 80024da:	4a05      	ldr	r2, [pc, #20]	; (80024f0 <_sbrk+0x64>)
 80024dc:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80024de:	68fb      	ldr	r3, [r7, #12]
}
 80024e0:	4618      	mov	r0, r3
 80024e2:	3718      	adds	r7, #24
 80024e4:	46bd      	mov	sp, r7
 80024e6:	bd80      	pop	{r7, pc}
 80024e8:	20020000 	.word	0x20020000
 80024ec:	00000400 	.word	0x00000400
 80024f0:	20000294 	.word	0x20000294
 80024f4:	200002a8 	.word	0x200002a8

080024f8 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80024f8:	b480      	push	{r7}
 80024fa:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80024fc:	4b06      	ldr	r3, [pc, #24]	; (8002518 <SystemInit+0x20>)
 80024fe:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002502:	4a05      	ldr	r2, [pc, #20]	; (8002518 <SystemInit+0x20>)
 8002504:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002508:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 800250c:	bf00      	nop
 800250e:	46bd      	mov	sp, r7
 8002510:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002514:	4770      	bx	lr
 8002516:	bf00      	nop
 8002518:	e000ed00 	.word	0xe000ed00

0800251c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 800251c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002554 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8002520:	480d      	ldr	r0, [pc, #52]	; (8002558 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8002522:	490e      	ldr	r1, [pc, #56]	; (800255c <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8002524:	4a0e      	ldr	r2, [pc, #56]	; (8002560 <LoopFillZerobss+0x1e>)
  movs r3, #0
 8002526:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002528:	e002      	b.n	8002530 <LoopCopyDataInit>

0800252a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800252a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800252c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800252e:	3304      	adds	r3, #4

08002530 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002530:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002532:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002534:	d3f9      	bcc.n	800252a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002536:	4a0b      	ldr	r2, [pc, #44]	; (8002564 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8002538:	4c0b      	ldr	r4, [pc, #44]	; (8002568 <LoopFillZerobss+0x26>)
  movs r3, #0
 800253a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800253c:	e001      	b.n	8002542 <LoopFillZerobss>

0800253e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800253e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002540:	3204      	adds	r2, #4

08002542 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002542:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002544:	d3fb      	bcc.n	800253e <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 8002546:	f7ff ffd7 	bl	80024f8 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800254a:	f001 f841 	bl	80035d0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800254e:	f7fe fde5 	bl	800111c <main>
  bx  lr    
 8002552:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8002554:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8002558:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800255c:	200001d4 	.word	0x200001d4
  ldr r2, =_sidata
 8002560:	08008960 	.word	0x08008960
  ldr r2, =_sbss
 8002564:	200001d8 	.word	0x200001d8
  ldr r4, =_ebss
 8002568:	200002a8 	.word	0x200002a8

0800256c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800256c:	e7fe      	b.n	800256c <ADC_IRQHandler>

0800256e <Filter_Init>:
#include "CompFilter.h"
#include "MPUXX50.h"

/// @param alpha Set alpha value for the complementary filter (typically 0.98).
/// @param deltaT Set sampling rate in seconds determined by the timer interrupt.
void Filter_Init(Filter_t* filter,float deltaT, float alpha){
 800256e:	b480      	push	{r7}
 8002570:	b085      	sub	sp, #20
 8002572:	af00      	add	r7, sp, #0
 8002574:	60f8      	str	r0, [r7, #12]
 8002576:	ed87 0a02 	vstr	s0, [r7, #8]
 800257a:	edc7 0a01 	vstr	s1, [r7, #4]
	filter->deltaT = deltaT;
 800257e:	68fb      	ldr	r3, [r7, #12]
 8002580:	68ba      	ldr	r2, [r7, #8]
 8002582:	601a      	str	r2, [r3, #0]
	filter->alpha = alpha;
 8002584:	68fb      	ldr	r3, [r7, #12]
 8002586:	687a      	ldr	r2, [r7, #4]
 8002588:	605a      	str	r2, [r3, #4]
	filter->compAngleX = 0.0f;
 800258a:	68fb      	ldr	r3, [r7, #12]
 800258c:	f04f 0200 	mov.w	r2, #0
 8002590:	619a      	str	r2, [r3, #24]
	filter->compAngleY = 0.0f;
 8002592:	68fb      	ldr	r3, [r7, #12]
 8002594:	f04f 0200 	mov.w	r2, #0
 8002598:	61da      	str	r2, [r3, #28]
	filter->accelAngleX = 0.0f;
 800259a:	68fb      	ldr	r3, [r7, #12]
 800259c:	f04f 0200 	mov.w	r2, #0
 80025a0:	609a      	str	r2, [r3, #8]
	filter->accelAngleY = 0.0f;
 80025a2:	68fb      	ldr	r3, [r7, #12]
 80025a4:	f04f 0200 	mov.w	r2, #0
 80025a8:	60da      	str	r2, [r3, #12]
	filter->gyroAngleX = 0.0f;
 80025aa:	68fb      	ldr	r3, [r7, #12]
 80025ac:	f04f 0200 	mov.w	r2, #0
 80025b0:	611a      	str	r2, [r3, #16]
	filter->gyroAngleY = 0.0f;
 80025b2:	68fb      	ldr	r3, [r7, #12]
 80025b4:	f04f 0200 	mov.w	r2, #0
 80025b8:	615a      	str	r2, [r3, #20]
}
 80025ba:	bf00      	nop
 80025bc:	3714      	adds	r7, #20
 80025be:	46bd      	mov	sp, r7
 80025c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025c4:	4770      	bx	lr
	...

080025c8 <Filter_calcAttitude>:


/// @brief Calculate the attitude of the sensor in degrees using a complementary filter.
/// @param I2Cx Pointer to I2C structure config.
void Filter_calcAttitude(Filter_t* filter, IMU_t *imu)
{
 80025c8:	b5b0      	push	{r4, r5, r7, lr}
 80025ca:	b082      	sub	sp, #8
 80025cc:	af00      	add	r7, sp, #0
 80025ce:	6078      	str	r0, [r7, #4]
 80025d0:	6039      	str	r1, [r7, #0]
    // Complementary filter
    filter->accelAngleY = atan2(imu->ay, imu->az) * RAD2DEG; //pitch
 80025d2:	683b      	ldr	r3, [r7, #0]
 80025d4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80025d6:	4618      	mov	r0, r3
 80025d8:	f7fd ffd6 	bl	8000588 <__aeabi_f2d>
 80025dc:	4604      	mov	r4, r0
 80025de:	460d      	mov	r5, r1
 80025e0:	683b      	ldr	r3, [r7, #0]
 80025e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80025e4:	4618      	mov	r0, r3
 80025e6:	f7fd ffcf 	bl	8000588 <__aeabi_f2d>
 80025ea:	4602      	mov	r2, r0
 80025ec:	460b      	mov	r3, r1
 80025ee:	ec43 2b11 	vmov	d1, r2, r3
 80025f2:	ec45 4b10 	vmov	d0, r4, r5
 80025f6:	f005 fc87 	bl	8007f08 <atan2>
 80025fa:	ec51 0b10 	vmov	r0, r1, d0
 80025fe:	a346      	add	r3, pc, #280	; (adr r3, 8002718 <Filter_calcAttitude+0x150>)
 8002600:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002604:	f7fe f818 	bl	8000638 <__aeabi_dmul>
 8002608:	4602      	mov	r2, r0
 800260a:	460b      	mov	r3, r1
 800260c:	4610      	mov	r0, r2
 800260e:	4619      	mov	r1, r3
 8002610:	f7fe fb0a 	bl	8000c28 <__aeabi_d2f>
 8002614:	4602      	mov	r2, r0
 8002616:	687b      	ldr	r3, [r7, #4]
 8002618:	60da      	str	r2, [r3, #12]
    filter->accelAngleX = atan2(imu->ax, imu->az) * RAD2DEG;  //roll
 800261a:	683b      	ldr	r3, [r7, #0]
 800261c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800261e:	4618      	mov	r0, r3
 8002620:	f7fd ffb2 	bl	8000588 <__aeabi_f2d>
 8002624:	4604      	mov	r4, r0
 8002626:	460d      	mov	r5, r1
 8002628:	683b      	ldr	r3, [r7, #0]
 800262a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800262c:	4618      	mov	r0, r3
 800262e:	f7fd ffab 	bl	8000588 <__aeabi_f2d>
 8002632:	4602      	mov	r2, r0
 8002634:	460b      	mov	r3, r1
 8002636:	ec43 2b11 	vmov	d1, r2, r3
 800263a:	ec45 4b10 	vmov	d0, r4, r5
 800263e:	f005 fc63 	bl	8007f08 <atan2>
 8002642:	ec51 0b10 	vmov	r0, r1, d0
 8002646:	a334      	add	r3, pc, #208	; (adr r3, 8002718 <Filter_calcAttitude+0x150>)
 8002648:	e9d3 2300 	ldrd	r2, r3, [r3]
 800264c:	f7fd fff4 	bl	8000638 <__aeabi_dmul>
 8002650:	4602      	mov	r2, r0
 8002652:	460b      	mov	r3, r1
 8002654:	4610      	mov	r0, r2
 8002656:	4619      	mov	r1, r3
 8002658:	f7fe fae6 	bl	8000c28 <__aeabi_d2f>
 800265c:	4602      	mov	r2, r0
 800265e:	687b      	ldr	r3, [r7, #4]
 8002660:	609a      	str	r2, [r3, #8]

    filter->gyroAngleX = -(imu->gy * filter->deltaT); //roll
 8002662:	683b      	ldr	r3, [r7, #0]
 8002664:	ed93 7a0d 	vldr	s14, [r3, #52]	; 0x34
 8002668:	687b      	ldr	r3, [r7, #4]
 800266a:	edd3 7a00 	vldr	s15, [r3]
 800266e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002672:	eef1 7a67 	vneg.f32	s15, s15
 8002676:	687b      	ldr	r3, [r7, #4]
 8002678:	edc3 7a04 	vstr	s15, [r3, #16]
    filter->gyroAngleY = (imu->gx * filter->deltaT);  //pitch
 800267c:	683b      	ldr	r3, [r7, #0]
 800267e:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 8002682:	687b      	ldr	r3, [r7, #4]
 8002684:	edd3 7a00 	vldr	s15, [r3]
 8002688:	ee67 7a27 	vmul.f32	s15, s14, s15
 800268c:	687b      	ldr	r3, [r7, #4]
 800268e:	edc3 7a05 	vstr	s15, [r3, #20]

    filter->compAngleX = (filter->alpha * (filter->compAngleX + filter->gyroAngleX)) + ((1.0f - filter->alpha) * filter->accelAngleX);  //roll
 8002692:	687b      	ldr	r3, [r7, #4]
 8002694:	ed93 7a01 	vldr	s14, [r3, #4]
 8002698:	687b      	ldr	r3, [r7, #4]
 800269a:	edd3 6a06 	vldr	s13, [r3, #24]
 800269e:	687b      	ldr	r3, [r7, #4]
 80026a0:	edd3 7a04 	vldr	s15, [r3, #16]
 80026a4:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80026a8:	ee27 7a27 	vmul.f32	s14, s14, s15
 80026ac:	687b      	ldr	r3, [r7, #4]
 80026ae:	edd3 7a01 	vldr	s15, [r3, #4]
 80026b2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80026b6:	ee76 6ae7 	vsub.f32	s13, s13, s15
 80026ba:	687b      	ldr	r3, [r7, #4]
 80026bc:	edd3 7a02 	vldr	s15, [r3, #8]
 80026c0:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80026c4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80026c8:	687b      	ldr	r3, [r7, #4]
 80026ca:	edc3 7a06 	vstr	s15, [r3, #24]
    filter->compAngleY = (filter->alpha * (filter->compAngleY + filter->gyroAngleY)) + ((1.0f - filter->alpha) * filter->accelAngleY);   //pitch
 80026ce:	687b      	ldr	r3, [r7, #4]
 80026d0:	ed93 7a01 	vldr	s14, [r3, #4]
 80026d4:	687b      	ldr	r3, [r7, #4]
 80026d6:	edd3 6a07 	vldr	s13, [r3, #28]
 80026da:	687b      	ldr	r3, [r7, #4]
 80026dc:	edd3 7a05 	vldr	s15, [r3, #20]
 80026e0:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80026e4:	ee27 7a27 	vmul.f32	s14, s14, s15
 80026e8:	687b      	ldr	r3, [r7, #4]
 80026ea:	edd3 7a01 	vldr	s15, [r3, #4]
 80026ee:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80026f2:	ee76 6ae7 	vsub.f32	s13, s13, s15
 80026f6:	687b      	ldr	r3, [r7, #4]
 80026f8:	edd3 7a03 	vldr	s15, [r3, #12]
 80026fc:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8002700:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002704:	687b      	ldr	r3, [r7, #4]
 8002706:	edc3 7a07 	vstr	s15, [r3, #28]
}
 800270a:	bf00      	nop
 800270c:	3708      	adds	r7, #8
 800270e:	46bd      	mov	sp, r7
 8002710:	bdb0      	pop	{r4, r5, r7, pc}
 8002712:	bf00      	nop
 8002714:	f3af 8000 	nop.w
 8002718:	1a63cbb0 	.word	0x1a63cbb0
 800271c:	404ca5dc 	.word	0x404ca5dc

08002720 <LL_I2C_Enable>:
  * @rmtoll CR1          PE            LL_I2C_Enable
  * @param  I2Cx I2C Instance.
  * @retval None
  */
__STATIC_INLINE void LL_I2C_Enable(I2C_TypeDef *I2Cx)
{
 8002720:	b480      	push	{r7}
 8002722:	b083      	sub	sp, #12
 8002724:	af00      	add	r7, sp, #0
 8002726:	6078      	str	r0, [r7, #4]
  SET_BIT(I2Cx->CR1, I2C_CR1_PE);
 8002728:	687b      	ldr	r3, [r7, #4]
 800272a:	681b      	ldr	r3, [r3, #0]
 800272c:	f043 0201 	orr.w	r2, r3, #1
 8002730:	687b      	ldr	r3, [r7, #4]
 8002732:	601a      	str	r2, [r3, #0]
}
 8002734:	bf00      	nop
 8002736:	370c      	adds	r7, #12
 8002738:	46bd      	mov	sp, r7
 800273a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800273e:	4770      	bx	lr

08002740 <LL_I2C_IsEnabled>:
  * @rmtoll CR1          PE            LL_I2C_IsEnabled
  * @param  I2Cx I2C Instance.
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_I2C_IsEnabled(I2C_TypeDef *I2Cx)
{
 8002740:	b480      	push	{r7}
 8002742:	b083      	sub	sp, #12
 8002744:	af00      	add	r7, sp, #0
 8002746:	6078      	str	r0, [r7, #4]
  return (READ_BIT(I2Cx->CR1, I2C_CR1_PE) == (I2C_CR1_PE));
 8002748:	687b      	ldr	r3, [r7, #4]
 800274a:	681b      	ldr	r3, [r3, #0]
 800274c:	f003 0301 	and.w	r3, r3, #1
 8002750:	2b01      	cmp	r3, #1
 8002752:	bf0c      	ite	eq
 8002754:	2301      	moveq	r3, #1
 8002756:	2300      	movne	r3, #0
 8002758:	b2db      	uxtb	r3, r3
}
 800275a:	4618      	mov	r0, r3
 800275c:	370c      	adds	r7, #12
 800275e:	46bd      	mov	sp, r7
 8002760:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002764:	4770      	bx	lr

08002766 <LL_I2C_IsActiveFlag_TXE>:
  * @rmtoll SR1          TXE           LL_I2C_IsActiveFlag_TXE
  * @param  I2Cx I2C Instance.
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_TXE(I2C_TypeDef *I2Cx)
{
 8002766:	b480      	push	{r7}
 8002768:	b083      	sub	sp, #12
 800276a:	af00      	add	r7, sp, #0
 800276c:	6078      	str	r0, [r7, #4]
  return (READ_BIT(I2Cx->SR1, I2C_SR1_TXE) == (I2C_SR1_TXE));
 800276e:	687b      	ldr	r3, [r7, #4]
 8002770:	695b      	ldr	r3, [r3, #20]
 8002772:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002776:	2b80      	cmp	r3, #128	; 0x80
 8002778:	bf0c      	ite	eq
 800277a:	2301      	moveq	r3, #1
 800277c:	2300      	movne	r3, #0
 800277e:	b2db      	uxtb	r3, r3
}
 8002780:	4618      	mov	r0, r3
 8002782:	370c      	adds	r7, #12
 8002784:	46bd      	mov	sp, r7
 8002786:	f85d 7b04 	ldr.w	r7, [sp], #4
 800278a:	4770      	bx	lr

0800278c <LL_I2C_IsActiveFlag_RXNE>:
  * @rmtoll SR1          RXNE          LL_I2C_IsActiveFlag_RXNE
  * @param  I2Cx I2C Instance.
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_RXNE(I2C_TypeDef *I2Cx)
{
 800278c:	b480      	push	{r7}
 800278e:	b083      	sub	sp, #12
 8002790:	af00      	add	r7, sp, #0
 8002792:	6078      	str	r0, [r7, #4]
  return (READ_BIT(I2Cx->SR1, I2C_SR1_RXNE) == (I2C_SR1_RXNE));
 8002794:	687b      	ldr	r3, [r7, #4]
 8002796:	695b      	ldr	r3, [r3, #20]
 8002798:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800279c:	2b40      	cmp	r3, #64	; 0x40
 800279e:	bf0c      	ite	eq
 80027a0:	2301      	moveq	r3, #1
 80027a2:	2300      	movne	r3, #0
 80027a4:	b2db      	uxtb	r3, r3
}
 80027a6:	4618      	mov	r0, r3
 80027a8:	370c      	adds	r7, #12
 80027aa:	46bd      	mov	sp, r7
 80027ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027b0:	4770      	bx	lr

080027b2 <LL_I2C_IsActiveFlag_ADDR>:
  * @rmtoll SR1          ADDR          LL_I2C_IsActiveFlag_ADDR
  * @param  I2Cx I2C Instance.
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_ADDR(I2C_TypeDef *I2Cx)
{
 80027b2:	b480      	push	{r7}
 80027b4:	b083      	sub	sp, #12
 80027b6:	af00      	add	r7, sp, #0
 80027b8:	6078      	str	r0, [r7, #4]
  return (READ_BIT(I2Cx->SR1, I2C_SR1_ADDR) == (I2C_SR1_ADDR));
 80027ba:	687b      	ldr	r3, [r7, #4]
 80027bc:	695b      	ldr	r3, [r3, #20]
 80027be:	f003 0302 	and.w	r3, r3, #2
 80027c2:	2b02      	cmp	r3, #2
 80027c4:	bf0c      	ite	eq
 80027c6:	2301      	moveq	r3, #1
 80027c8:	2300      	movne	r3, #0
 80027ca:	b2db      	uxtb	r3, r3
}
 80027cc:	4618      	mov	r0, r3
 80027ce:	370c      	adds	r7, #12
 80027d0:	46bd      	mov	sp, r7
 80027d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027d6:	4770      	bx	lr

080027d8 <LL_I2C_IsActiveFlag_AF>:
  * @rmtoll SR1          AF            LL_I2C_IsActiveFlag_AF
  * @param  I2Cx I2C Instance.
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_AF(I2C_TypeDef *I2Cx)
{
 80027d8:	b480      	push	{r7}
 80027da:	b083      	sub	sp, #12
 80027dc:	af00      	add	r7, sp, #0
 80027de:	6078      	str	r0, [r7, #4]
  return (READ_BIT(I2Cx->SR1, I2C_SR1_AF) == (I2C_SR1_AF));
 80027e0:	687b      	ldr	r3, [r7, #4]
 80027e2:	695b      	ldr	r3, [r3, #20]
 80027e4:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80027e8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80027ec:	bf0c      	ite	eq
 80027ee:	2301      	moveq	r3, #1
 80027f0:	2300      	movne	r3, #0
 80027f2:	b2db      	uxtb	r3, r3
}
 80027f4:	4618      	mov	r0, r3
 80027f6:	370c      	adds	r7, #12
 80027f8:	46bd      	mov	sp, r7
 80027fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027fe:	4770      	bx	lr

08002800 <LL_I2C_ReceiveData8>:
  * @rmtoll DR           DR            LL_I2C_ReceiveData8
  * @param  I2Cx I2C Instance.
  * @retval Value between Min_Data=0x0 and Max_Data=0xFF
  */
__STATIC_INLINE uint8_t LL_I2C_ReceiveData8(I2C_TypeDef *I2Cx)
{
 8002800:	b480      	push	{r7}
 8002802:	b083      	sub	sp, #12
 8002804:	af00      	add	r7, sp, #0
 8002806:	6078      	str	r0, [r7, #4]
  return (uint8_t)(READ_BIT(I2Cx->DR, I2C_DR_DR));
 8002808:	687b      	ldr	r3, [r7, #4]
 800280a:	691b      	ldr	r3, [r3, #16]
 800280c:	b2db      	uxtb	r3, r3
}
 800280e:	4618      	mov	r0, r3
 8002810:	370c      	adds	r7, #12
 8002812:	46bd      	mov	sp, r7
 8002814:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002818:	4770      	bx	lr

0800281a <LL_I2C_TransmitData8>:
  * @param  I2Cx I2C Instance.
  * @param  Data Value between Min_Data=0x0 and Max_Data=0xFF
  * @retval None
  */
__STATIC_INLINE void LL_I2C_TransmitData8(I2C_TypeDef *I2Cx, uint8_t Data)
{
 800281a:	b480      	push	{r7}
 800281c:	b083      	sub	sp, #12
 800281e:	af00      	add	r7, sp, #0
 8002820:	6078      	str	r0, [r7, #4]
 8002822:	460b      	mov	r3, r1
 8002824:	70fb      	strb	r3, [r7, #3]
  MODIFY_REG(I2Cx->DR, I2C_DR_DR, Data);
 8002826:	687b      	ldr	r3, [r7, #4]
 8002828:	691b      	ldr	r3, [r3, #16]
 800282a:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 800282e:	78fb      	ldrb	r3, [r7, #3]
 8002830:	431a      	orrs	r2, r3
 8002832:	687b      	ldr	r3, [r7, #4]
 8002834:	611a      	str	r2, [r3, #16]
}
 8002836:	bf00      	nop
 8002838:	370c      	adds	r7, #12
 800283a:	46bd      	mov	sp, r7
 800283c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002840:	4770      	bx	lr
	...

08002844 <IMU_I2C_Init>:
#include "IMU_I2C.h"

#define I2C_USED  I2C1
extern uint64_t counter_millis;

void IMU_I2C_Init(I2CHandle_t *hi2c){
 8002844:	b480      	push	{r7}
 8002846:	b083      	sub	sp, #12
 8002848:	af00      	add	r7, sp, #0
 800284a:	6078      	str	r0, [r7, #4]
	hi2c->Instance = I2C_USED;
 800284c:	687b      	ldr	r3, [r7, #4]
 800284e:	4a04      	ldr	r2, [pc, #16]	; (8002860 <IMU_I2C_Init+0x1c>)
 8002850:	601a      	str	r2, [r3, #0]
}
 8002852:	bf00      	nop
 8002854:	370c      	adds	r7, #12
 8002856:	46bd      	mov	sp, r7
 8002858:	f85d 7b04 	ldr.w	r7, [sp], #4
 800285c:	4770      	bx	lr
 800285e:	bf00      	nop
 8002860:	40005400 	.word	0x40005400

08002864 <I2C_Read_Reg>:

void I2C_Read_Reg(I2CHandle_t *hi2c,uint8_t reg,uint8_t* reg_data,uint16_t count,uint16_t timeout){
 8002864:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8002868:	b09e      	sub	sp, #120	; 0x78
 800286a:	af00      	add	r7, sp, #0
 800286c:	6678      	str	r0, [r7, #100]	; 0x64
 800286e:	65fa      	str	r2, [r7, #92]	; 0x5c
 8002870:	461a      	mov	r2, r3
 8002872:	460b      	mov	r3, r1
 8002874:	f887 3063 	strb.w	r3, [r7, #99]	; 0x63
 8002878:	4613      	mov	r3, r2
 800287a:	f8a7 3060 	strh.w	r3, [r7, #96]	; 0x60

	uint8_t reg_addr = reg;
 800287e:	f897 3063 	ldrb.w	r3, [r7, #99]	; 0x63
 8002882:	f887 306b 	strb.w	r3, [r7, #107]	; 0x6b
	uint64_t counter_ms = 0;
 8002886:	f04f 0200 	mov.w	r2, #0
 800288a:	f04f 0300 	mov.w	r3, #0
 800288e:	e9c7 231c 	strd	r2, r3, [r7, #112]	; 0x70
	hi2c->pTxdata = &reg_addr;
 8002892:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 8002894:	f107 036b 	add.w	r3, r7, #107	; 0x6b
 8002898:	6093      	str	r3, [r2, #8]
	hi2c->pRxdata = reg_data;
 800289a:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 800289c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800289e:	6053      	str	r3, [r2, #4]
	hi2c->pTxXfercount = 0;
 80028a0:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 80028a2:	2300      	movs	r3, #0
 80028a4:	81d3      	strh	r3, [r2, #14]
	hi2c->pRxXfercount = count;
 80028a6:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 80028a8:	f8b7 3060 	ldrh.w	r3, [r7, #96]	; 0x60
 80028ac:	8193      	strh	r3, [r2, #12]

	//check if peripheral enabled
	if(!LL_I2C_IsEnabled(hi2c->Instance)){
 80028ae:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80028b0:	681b      	ldr	r3, [r3, #0]
 80028b2:	4618      	mov	r0, r3
 80028b4:	f7ff ff44 	bl	8002740 <LL_I2C_IsEnabled>
 80028b8:	4603      	mov	r3, r0
 80028ba:	2b00      	cmp	r3, #0
 80028bc:	d104      	bne.n	80028c8 <I2C_Read_Reg+0x64>
		LL_I2C_Enable(hi2c->Instance);
 80028be:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80028c0:	681b      	ldr	r3, [r3, #0]
 80028c2:	4618      	mov	r0, r3
 80028c4:	f7ff ff2c 	bl	8002720 <LL_I2C_Enable>
	}

	//Enable acknowledge
	SET_BIT((hi2c->Instance)->CR1,I2C_CR1_ACK);
 80028c8:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80028ca:	681b      	ldr	r3, [r3, #0]
 80028cc:	6819      	ldr	r1, [r3, #0]
 80028ce:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80028d0:	681a      	ldr	r2, [r3, #0]
 80028d2:	f441 6380 	orr.w	r3, r1, #1024	; 0x400
 80028d6:	6013      	str	r3, [r2, #0]

	//send start
	SET_BIT((hi2c->Instance)->CR1,I2C_CR1_START);
 80028d8:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80028da:	681b      	ldr	r3, [r3, #0]
 80028dc:	6819      	ldr	r1, [r3, #0]
 80028de:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80028e0:	681a      	ldr	r2, [r3, #0]
 80028e2:	f441 7380 	orr.w	r3, r1, #256	; 0x100
 80028e6:	6013      	str	r3, [r2, #0]

	counter_ms = counter_millis;
 80028e8:	4bad      	ldr	r3, [pc, #692]	; (8002ba0 <I2C_Read_Reg+0x33c>)
 80028ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80028ee:	e9c7 231c 	strd	r2, r3, [r7, #112]	; 0x70
	while(!READ_BIT((hi2c->Instance)->SR1,I2C_SR1_SB)){
 80028f2:	e011      	b.n	8002918 <I2C_Read_Reg+0xb4>
		//wait till start condition generated
		if((counter_millis-counter_ms)>timeout)return;
 80028f4:	4baa      	ldr	r3, [pc, #680]	; (8002ba0 <I2C_Read_Reg+0x33c>)
 80028f6:	e9d3 0100 	ldrd	r0, r1, [r3]
 80028fa:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 80028fe:	1a84      	subs	r4, r0, r2
 8002900:	eb61 0503 	sbc.w	r5, r1, r3
 8002904:	f8b7 3098 	ldrh.w	r3, [r7, #152]	; 0x98
 8002908:	2200      	movs	r2, #0
 800290a:	469a      	mov	sl, r3
 800290c:	4693      	mov	fp, r2
 800290e:	45a2      	cmp	sl, r4
 8002910:	eb7b 0305 	sbcs.w	r3, fp, r5
 8002914:	f0c0 81b2 	bcc.w	8002c7c <I2C_Read_Reg+0x418>
	while(!READ_BIT((hi2c->Instance)->SR1,I2C_SR1_SB)){
 8002918:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800291a:	681b      	ldr	r3, [r3, #0]
 800291c:	695b      	ldr	r3, [r3, #20]
 800291e:	f003 0301 	and.w	r3, r3, #1
 8002922:	2b00      	cmp	r3, #0
 8002924:	d0e6      	beq.n	80028f4 <I2C_Read_Reg+0x90>
	}

	//send slave address
	LL_I2C_TransmitData8(hi2c->Instance, (IMU_SLAVE_ADDR<<1U) & ~(0x01U)); //Write operation
 8002926:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002928:	681b      	ldr	r3, [r3, #0]
 800292a:	21d0      	movs	r1, #208	; 0xd0
 800292c:	4618      	mov	r0, r3
 800292e:	f7ff ff74 	bl	800281a <LL_I2C_TransmitData8>

	counter_ms = counter_millis;
 8002932:	4b9b      	ldr	r3, [pc, #620]	; (8002ba0 <I2C_Read_Reg+0x33c>)
 8002934:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002938:	e9c7 231c 	strd	r2, r3, [r7, #112]	; 0x70
	while(!LL_I2C_IsActiveFlag_ADDR(hi2c->Instance)){
 800293c:	e016      	b.n	800296c <I2C_Read_Reg+0x108>
		//wait until ADDR flag is set
		if((counter_millis-counter_ms)>timeout)return;
 800293e:	4b98      	ldr	r3, [pc, #608]	; (8002ba0 <I2C_Read_Reg+0x33c>)
 8002940:	e9d3 0100 	ldrd	r0, r1, [r3]
 8002944:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 8002948:	ebb0 0802 	subs.w	r8, r0, r2
 800294c:	eb61 0903 	sbc.w	r9, r1, r3
 8002950:	f8b7 3098 	ldrh.w	r3, [r7, #152]	; 0x98
 8002954:	2200      	movs	r2, #0
 8002956:	653b      	str	r3, [r7, #80]	; 0x50
 8002958:	657a      	str	r2, [r7, #84]	; 0x54
 800295a:	e9d7 1214 	ldrd	r1, r2, [r7, #80]	; 0x50
 800295e:	460b      	mov	r3, r1
 8002960:	4543      	cmp	r3, r8
 8002962:	4613      	mov	r3, r2
 8002964:	eb73 0309 	sbcs.w	r3, r3, r9
 8002968:	f0c0 818a 	bcc.w	8002c80 <I2C_Read_Reg+0x41c>
	while(!LL_I2C_IsActiveFlag_ADDR(hi2c->Instance)){
 800296c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800296e:	681b      	ldr	r3, [r3, #0]
 8002970:	4618      	mov	r0, r3
 8002972:	f7ff ff1e 	bl	80027b2 <LL_I2C_IsActiveFlag_ADDR>
 8002976:	4603      	mov	r3, r0
 8002978:	2b00      	cmp	r3, #0
 800297a:	d0e0      	beq.n	800293e <I2C_Read_Reg+0xda>
	}

	uint32_t tmpreg = (hi2c->Instance)->SR1;
 800297c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800297e:	681b      	ldr	r3, [r3, #0]
 8002980:	695b      	ldr	r3, [r3, #20]
 8002982:	66fb      	str	r3, [r7, #108]	; 0x6c
	tmpreg = (hi2c->Instance)->SR2;
 8002984:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002986:	681b      	ldr	r3, [r3, #0]
 8002988:	699b      	ldr	r3, [r3, #24]
 800298a:	66fb      	str	r3, [r7, #108]	; 0x6c
	unused(tmpreg);

	if(LL_I2C_IsActiveFlag_AF(hi2c->Instance)){
 800298c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800298e:	681b      	ldr	r3, [r3, #0]
 8002990:	4618      	mov	r0, r3
 8002992:	f7ff ff21 	bl	80027d8 <LL_I2C_IsActiveFlag_AF>
 8002996:	4603      	mov	r3, r0
 8002998:	2b00      	cmp	r3, #0
 800299a:	d008      	beq.n	80029ae <I2C_Read_Reg+0x14a>
		//should not be here (ACK failure)
		CLEAR_BIT((hi2c->Instance)->SR1,I2C_SR1_AF);
 800299c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800299e:	681b      	ldr	r3, [r3, #0]
 80029a0:	695a      	ldr	r2, [r3, #20]
 80029a2:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80029a4:	681b      	ldr	r3, [r3, #0]
 80029a6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80029aa:	615a      	str	r2, [r3, #20]
		return;
 80029ac:	e173      	b.n	8002c96 <I2C_Read_Reg+0x432>
	}

	counter_ms = counter_millis;
 80029ae:	4b7c      	ldr	r3, [pc, #496]	; (8002ba0 <I2C_Read_Reg+0x33c>)
 80029b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80029b4:	e9c7 231c 	strd	r2, r3, [r7, #112]	; 0x70
	while(!LL_I2C_IsActiveFlag_TXE(hi2c->Instance)){
 80029b8:	e01a      	b.n	80029f0 <I2C_Read_Reg+0x18c>
		//wait until TXE flag is set
		if((counter_millis-counter_ms)>timeout)return;
 80029ba:	4b79      	ldr	r3, [pc, #484]	; (8002ba0 <I2C_Read_Reg+0x33c>)
 80029bc:	e9d3 0100 	ldrd	r0, r1, [r3]
 80029c0:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 80029c4:	1a84      	subs	r4, r0, r2
 80029c6:	64bc      	str	r4, [r7, #72]	; 0x48
 80029c8:	eb61 0303 	sbc.w	r3, r1, r3
 80029cc:	64fb      	str	r3, [r7, #76]	; 0x4c
 80029ce:	f8b7 3098 	ldrh.w	r3, [r7, #152]	; 0x98
 80029d2:	2200      	movs	r2, #0
 80029d4:	643b      	str	r3, [r7, #64]	; 0x40
 80029d6:	647a      	str	r2, [r7, #68]	; 0x44
 80029d8:	e9d7 4510 	ldrd	r4, r5, [r7, #64]	; 0x40
 80029dc:	4623      	mov	r3, r4
 80029de:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 80029e2:	4602      	mov	r2, r0
 80029e4:	4293      	cmp	r3, r2
 80029e6:	462b      	mov	r3, r5
 80029e8:	460a      	mov	r2, r1
 80029ea:	4193      	sbcs	r3, r2
 80029ec:	f0c0 814a 	bcc.w	8002c84 <I2C_Read_Reg+0x420>
	while(!LL_I2C_IsActiveFlag_TXE(hi2c->Instance)){
 80029f0:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80029f2:	681b      	ldr	r3, [r3, #0]
 80029f4:	4618      	mov	r0, r3
 80029f6:	f7ff feb6 	bl	8002766 <LL_I2C_IsActiveFlag_TXE>
 80029fa:	4603      	mov	r3, r0
 80029fc:	2b00      	cmp	r3, #0
 80029fe:	d0dc      	beq.n	80029ba <I2C_Read_Reg+0x156>
	}

	//send register address
	LL_I2C_TransmitData8(hi2c->Instance, *(hi2c->pTxdata));
 8002a00:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002a02:	681a      	ldr	r2, [r3, #0]
 8002a04:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002a06:	689b      	ldr	r3, [r3, #8]
 8002a08:	781b      	ldrb	r3, [r3, #0]
 8002a0a:	4619      	mov	r1, r3
 8002a0c:	4610      	mov	r0, r2
 8002a0e:	f7ff ff04 	bl	800281a <LL_I2C_TransmitData8>
	hi2c->pTxdata++;
 8002a12:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002a14:	689b      	ldr	r3, [r3, #8]
 8002a16:	1c5a      	adds	r2, r3, #1
 8002a18:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002a1a:	609a      	str	r2, [r3, #8]
	hi2c->pTxXfercount--;
 8002a1c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002a1e:	89db      	ldrh	r3, [r3, #14]
 8002a20:	3b01      	subs	r3, #1
 8002a22:	b29b      	uxth	r3, r3
 8002a24:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 8002a26:	81d3      	strh	r3, [r2, #14]
	reg_addr = reg + 1;
 8002a28:	f897 3063 	ldrb.w	r3, [r7, #99]	; 0x63
 8002a2c:	3301      	adds	r3, #1
 8002a2e:	b2db      	uxtb	r3, r3
 8002a30:	f887 306b 	strb.w	r3, [r7, #107]	; 0x6b
	hi2c->pTxdata = &reg_addr;
 8002a34:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 8002a36:	f107 036b 	add.w	r3, r7, #107	; 0x6b
 8002a3a:	6093      	str	r3, [r2, #8]

	counter_ms = counter_millis;
 8002a3c:	4b58      	ldr	r3, [pc, #352]	; (8002ba0 <I2C_Read_Reg+0x33c>)
 8002a3e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002a42:	e9c7 231c 	strd	r2, r3, [r7, #112]	; 0x70
	while(!LL_I2C_IsActiveFlag_TXE(hi2c->Instance)){
 8002a46:	e01a      	b.n	8002a7e <I2C_Read_Reg+0x21a>
		//wait until TXE flag is set
		if((counter_millis-counter_ms)>timeout)return;
 8002a48:	4b55      	ldr	r3, [pc, #340]	; (8002ba0 <I2C_Read_Reg+0x33c>)
 8002a4a:	e9d3 0100 	ldrd	r0, r1, [r3]
 8002a4e:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 8002a52:	1a84      	subs	r4, r0, r2
 8002a54:	63bc      	str	r4, [r7, #56]	; 0x38
 8002a56:	eb61 0303 	sbc.w	r3, r1, r3
 8002a5a:	63fb      	str	r3, [r7, #60]	; 0x3c
 8002a5c:	f8b7 3098 	ldrh.w	r3, [r7, #152]	; 0x98
 8002a60:	2200      	movs	r2, #0
 8002a62:	633b      	str	r3, [r7, #48]	; 0x30
 8002a64:	637a      	str	r2, [r7, #52]	; 0x34
 8002a66:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 8002a6a:	4623      	mov	r3, r4
 8002a6c:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 8002a70:	4602      	mov	r2, r0
 8002a72:	4293      	cmp	r3, r2
 8002a74:	462b      	mov	r3, r5
 8002a76:	460a      	mov	r2, r1
 8002a78:	4193      	sbcs	r3, r2
 8002a7a:	f0c0 8105 	bcc.w	8002c88 <I2C_Read_Reg+0x424>
	while(!LL_I2C_IsActiveFlag_TXE(hi2c->Instance)){
 8002a7e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002a80:	681b      	ldr	r3, [r3, #0]
 8002a82:	4618      	mov	r0, r3
 8002a84:	f7ff fe6f 	bl	8002766 <LL_I2C_IsActiveFlag_TXE>
 8002a88:	4603      	mov	r3, r0
 8002a8a:	2b00      	cmp	r3, #0
 8002a8c:	d0dc      	beq.n	8002a48 <I2C_Read_Reg+0x1e4>
	}

	if(LL_I2C_IsActiveFlag_AF(hi2c->Instance)){
 8002a8e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002a90:	681b      	ldr	r3, [r3, #0]
 8002a92:	4618      	mov	r0, r3
 8002a94:	f7ff fea0 	bl	80027d8 <LL_I2C_IsActiveFlag_AF>
 8002a98:	4603      	mov	r3, r0
 8002a9a:	2b00      	cmp	r3, #0
 8002a9c:	d008      	beq.n	8002ab0 <I2C_Read_Reg+0x24c>
		//should not be here (ACK failure)
		CLEAR_BIT((hi2c->Instance)->SR1,I2C_SR1_AF);
 8002a9e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002aa0:	681b      	ldr	r3, [r3, #0]
 8002aa2:	695a      	ldr	r2, [r3, #20]
 8002aa4:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002aa6:	681b      	ldr	r3, [r3, #0]
 8002aa8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002aac:	615a      	str	r2, [r3, #20]
		return;
 8002aae:	e0f2      	b.n	8002c96 <I2C_Read_Reg+0x432>
	}

	//send repeated start
	SET_BIT((hi2c->Instance)->CR1,I2C_CR1_START);
 8002ab0:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002ab2:	681b      	ldr	r3, [r3, #0]
 8002ab4:	6819      	ldr	r1, [r3, #0]
 8002ab6:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002ab8:	681a      	ldr	r2, [r3, #0]
 8002aba:	f441 7380 	orr.w	r3, r1, #256	; 0x100
 8002abe:	6013      	str	r3, [r2, #0]

	counter_ms = counter_millis;
 8002ac0:	4b37      	ldr	r3, [pc, #220]	; (8002ba0 <I2C_Read_Reg+0x33c>)
 8002ac2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002ac6:	e9c7 231c 	strd	r2, r3, [r7, #112]	; 0x70
	while(!READ_BIT((hi2c->Instance)->SR1,I2C_SR1_SB)){
 8002aca:	e01a      	b.n	8002b02 <I2C_Read_Reg+0x29e>
			//wait till repeated start condition generated
		if((counter_millis-counter_ms)>timeout)return;
 8002acc:	4b34      	ldr	r3, [pc, #208]	; (8002ba0 <I2C_Read_Reg+0x33c>)
 8002ace:	e9d3 0100 	ldrd	r0, r1, [r3]
 8002ad2:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 8002ad6:	1a84      	subs	r4, r0, r2
 8002ad8:	62bc      	str	r4, [r7, #40]	; 0x28
 8002ada:	eb61 0303 	sbc.w	r3, r1, r3
 8002ade:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002ae0:	f8b7 3098 	ldrh.w	r3, [r7, #152]	; 0x98
 8002ae4:	2200      	movs	r2, #0
 8002ae6:	623b      	str	r3, [r7, #32]
 8002ae8:	627a      	str	r2, [r7, #36]	; 0x24
 8002aea:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 8002aee:	4623      	mov	r3, r4
 8002af0:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8002af4:	4602      	mov	r2, r0
 8002af6:	4293      	cmp	r3, r2
 8002af8:	462b      	mov	r3, r5
 8002afa:	460a      	mov	r2, r1
 8002afc:	4193      	sbcs	r3, r2
 8002afe:	f0c0 80c5 	bcc.w	8002c8c <I2C_Read_Reg+0x428>
	while(!READ_BIT((hi2c->Instance)->SR1,I2C_SR1_SB)){
 8002b02:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002b04:	681b      	ldr	r3, [r3, #0]
 8002b06:	695b      	ldr	r3, [r3, #20]
 8002b08:	f003 0301 	and.w	r3, r3, #1
 8002b0c:	2b00      	cmp	r3, #0
 8002b0e:	d0dd      	beq.n	8002acc <I2C_Read_Reg+0x268>
	}

	//send slave address
	LL_I2C_TransmitData8(hi2c->Instance, (IMU_SLAVE_ADDR<<1U) | (0x01U)); //Read operation
 8002b10:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002b12:	681b      	ldr	r3, [r3, #0]
 8002b14:	21d1      	movs	r1, #209	; 0xd1
 8002b16:	4618      	mov	r0, r3
 8002b18:	f7ff fe7f 	bl	800281a <LL_I2C_TransmitData8>

	counter_ms = counter_millis;
 8002b1c:	4b20      	ldr	r3, [pc, #128]	; (8002ba0 <I2C_Read_Reg+0x33c>)
 8002b1e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b22:	e9c7 231c 	strd	r2, r3, [r7, #112]	; 0x70
	while(!LL_I2C_IsActiveFlag_ADDR(hi2c->Instance)){
 8002b26:	e01a      	b.n	8002b5e <I2C_Read_Reg+0x2fa>
		//wait until ADDR flag is set
		if((counter_millis-counter_ms)>timeout)return;
 8002b28:	4b1d      	ldr	r3, [pc, #116]	; (8002ba0 <I2C_Read_Reg+0x33c>)
 8002b2a:	e9d3 0100 	ldrd	r0, r1, [r3]
 8002b2e:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 8002b32:	1a84      	subs	r4, r0, r2
 8002b34:	61bc      	str	r4, [r7, #24]
 8002b36:	eb61 0303 	sbc.w	r3, r1, r3
 8002b3a:	61fb      	str	r3, [r7, #28]
 8002b3c:	f8b7 3098 	ldrh.w	r3, [r7, #152]	; 0x98
 8002b40:	2200      	movs	r2, #0
 8002b42:	613b      	str	r3, [r7, #16]
 8002b44:	617a      	str	r2, [r7, #20]
 8002b46:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 8002b4a:	4623      	mov	r3, r4
 8002b4c:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8002b50:	4602      	mov	r2, r0
 8002b52:	4293      	cmp	r3, r2
 8002b54:	462b      	mov	r3, r5
 8002b56:	460a      	mov	r2, r1
 8002b58:	4193      	sbcs	r3, r2
 8002b5a:	f0c0 8099 	bcc.w	8002c90 <I2C_Read_Reg+0x42c>
	while(!LL_I2C_IsActiveFlag_ADDR(hi2c->Instance)){
 8002b5e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002b60:	681b      	ldr	r3, [r3, #0]
 8002b62:	4618      	mov	r0, r3
 8002b64:	f7ff fe25 	bl	80027b2 <LL_I2C_IsActiveFlag_ADDR>
 8002b68:	4603      	mov	r3, r0
 8002b6a:	2b00      	cmp	r3, #0
 8002b6c:	d0dc      	beq.n	8002b28 <I2C_Read_Reg+0x2c4>
	}

	tmpreg = (hi2c->Instance)->SR1;
 8002b6e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002b70:	681b      	ldr	r3, [r3, #0]
 8002b72:	695b      	ldr	r3, [r3, #20]
 8002b74:	66fb      	str	r3, [r7, #108]	; 0x6c
	tmpreg = (hi2c->Instance)->SR2;
 8002b76:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002b78:	681b      	ldr	r3, [r3, #0]
 8002b7a:	699b      	ldr	r3, [r3, #24]
 8002b7c:	66fb      	str	r3, [r7, #108]	; 0x6c

	if(LL_I2C_IsActiveFlag_AF(hi2c->Instance)){
 8002b7e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002b80:	681b      	ldr	r3, [r3, #0]
 8002b82:	4618      	mov	r0, r3
 8002b84:	f7ff fe28 	bl	80027d8 <LL_I2C_IsActiveFlag_AF>
 8002b88:	4603      	mov	r3, r0
 8002b8a:	2b00      	cmp	r3, #0
 8002b8c:	d00a      	beq.n	8002ba4 <I2C_Read_Reg+0x340>
		//should not be here (ACK failure)
		CLEAR_BIT((hi2c->Instance)->SR1,I2C_SR1_AF);
 8002b8e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002b90:	681b      	ldr	r3, [r3, #0]
 8002b92:	695a      	ldr	r2, [r3, #20]
 8002b94:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002b96:	681b      	ldr	r3, [r3, #0]
 8002b98:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002b9c:	615a      	str	r2, [r3, #20]
		return;
 8002b9e:	e07a      	b.n	8002c96 <I2C_Read_Reg+0x432>
 8002ba0:	20000280 	.word	0x20000280
	}

	//Disable Acknowledge
	CLEAR_BIT((hi2c->Instance)->CR1,I2C_CR1_ACK);
 8002ba4:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002ba6:	681b      	ldr	r3, [r3, #0]
 8002ba8:	681a      	ldr	r2, [r3, #0]
 8002baa:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002bac:	681b      	ldr	r3, [r3, #0]
 8002bae:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002bb2:	601a      	str	r2, [r3, #0]


	while(hi2c->pRxXfercount>0U){
 8002bb4:	e055      	b.n	8002c62 <I2C_Read_Reg+0x3fe>

		counter_ms = counter_millis;
 8002bb6:	4b3a      	ldr	r3, [pc, #232]	; (8002ca0 <I2C_Read_Reg+0x43c>)
 8002bb8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002bbc:	e9c7 231c 	strd	r2, r3, [r7, #112]	; 0x70
		while(!LL_I2C_IsActiveFlag_RXNE(hi2c->Instance)){
 8002bc0:	e019      	b.n	8002bf6 <I2C_Read_Reg+0x392>
			//wait until RXNE flag is set
			if((counter_millis-counter_ms)>timeout)return;
 8002bc2:	4b37      	ldr	r3, [pc, #220]	; (8002ca0 <I2C_Read_Reg+0x43c>)
 8002bc4:	e9d3 0100 	ldrd	r0, r1, [r3]
 8002bc8:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 8002bcc:	1a84      	subs	r4, r0, r2
 8002bce:	60bc      	str	r4, [r7, #8]
 8002bd0:	eb61 0303 	sbc.w	r3, r1, r3
 8002bd4:	60fb      	str	r3, [r7, #12]
 8002bd6:	f8b7 3098 	ldrh.w	r3, [r7, #152]	; 0x98
 8002bda:	2200      	movs	r2, #0
 8002bdc:	603b      	str	r3, [r7, #0]
 8002bde:	607a      	str	r2, [r7, #4]
 8002be0:	e9d7 4500 	ldrd	r4, r5, [r7]
 8002be4:	4623      	mov	r3, r4
 8002be6:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8002bea:	4602      	mov	r2, r0
 8002bec:	4293      	cmp	r3, r2
 8002bee:	462b      	mov	r3, r5
 8002bf0:	460a      	mov	r2, r1
 8002bf2:	4193      	sbcs	r3, r2
 8002bf4:	d34e      	bcc.n	8002c94 <I2C_Read_Reg+0x430>
		while(!LL_I2C_IsActiveFlag_RXNE(hi2c->Instance)){
 8002bf6:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002bf8:	681b      	ldr	r3, [r3, #0]
 8002bfa:	4618      	mov	r0, r3
 8002bfc:	f7ff fdc6 	bl	800278c <LL_I2C_IsActiveFlag_RXNE>
 8002c00:	4603      	mov	r3, r0
 8002c02:	2b00      	cmp	r3, #0
 8002c04:	d0dd      	beq.n	8002bc2 <I2C_Read_Reg+0x35e>
		}

		//read data, increment buffer and update count
		*(hi2c->pRxdata) = LL_I2C_ReceiveData8(hi2c->Instance);
 8002c06:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002c08:	681a      	ldr	r2, [r3, #0]
 8002c0a:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002c0c:	685c      	ldr	r4, [r3, #4]
 8002c0e:	4610      	mov	r0, r2
 8002c10:	f7ff fdf6 	bl	8002800 <LL_I2C_ReceiveData8>
 8002c14:	4603      	mov	r3, r0
 8002c16:	7023      	strb	r3, [r4, #0]
		hi2c->pRxdata++;
 8002c18:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002c1a:	685b      	ldr	r3, [r3, #4]
 8002c1c:	1c5a      	adds	r2, r3, #1
 8002c1e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002c20:	605a      	str	r2, [r3, #4]
		hi2c->pRxXfercount--;
 8002c22:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002c24:	899b      	ldrh	r3, [r3, #12]
 8002c26:	3b01      	subs	r3, #1
 8002c28:	b29a      	uxth	r2, r3
 8002c2a:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002c2c:	819a      	strh	r2, [r3, #12]

		if(READ_BIT(I2C1->SR1,I2C_SR1_BTF)){
 8002c2e:	4b1d      	ldr	r3, [pc, #116]	; (8002ca4 <I2C_Read_Reg+0x440>)
 8002c30:	695b      	ldr	r3, [r3, #20]
 8002c32:	f003 0304 	and.w	r3, r3, #4
 8002c36:	2b00      	cmp	r3, #0
 8002c38:	d013      	beq.n	8002c62 <I2C_Read_Reg+0x3fe>
			//read data, increment buffer and update count
			*(hi2c->pRxdata) = LL_I2C_ReceiveData8(hi2c->Instance);
 8002c3a:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002c3c:	681a      	ldr	r2, [r3, #0]
 8002c3e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002c40:	685c      	ldr	r4, [r3, #4]
 8002c42:	4610      	mov	r0, r2
 8002c44:	f7ff fddc 	bl	8002800 <LL_I2C_ReceiveData8>
 8002c48:	4603      	mov	r3, r0
 8002c4a:	7023      	strb	r3, [r4, #0]
			hi2c->pRxdata++;
 8002c4c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002c4e:	685b      	ldr	r3, [r3, #4]
 8002c50:	1c5a      	adds	r2, r3, #1
 8002c52:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002c54:	605a      	str	r2, [r3, #4]
			hi2c->pRxXfercount--;
 8002c56:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002c58:	899b      	ldrh	r3, [r3, #12]
 8002c5a:	3b01      	subs	r3, #1
 8002c5c:	b29a      	uxth	r2, r3
 8002c5e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002c60:	819a      	strh	r2, [r3, #12]
	while(hi2c->pRxXfercount>0U){
 8002c62:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002c64:	899b      	ldrh	r3, [r3, #12]
 8002c66:	2b00      	cmp	r3, #0
 8002c68:	d1a5      	bne.n	8002bb6 <I2C_Read_Reg+0x352>
		}

	}

	// Generate Stop
	SET_BIT((hi2c->Instance)->CR1, I2C_CR1_STOP);
 8002c6a:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002c6c:	681b      	ldr	r3, [r3, #0]
 8002c6e:	681a      	ldr	r2, [r3, #0]
 8002c70:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002c72:	681b      	ldr	r3, [r3, #0]
 8002c74:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002c78:	601a      	str	r2, [r3, #0]
 8002c7a:	e00c      	b.n	8002c96 <I2C_Read_Reg+0x432>
		if((counter_millis-counter_ms)>timeout)return;
 8002c7c:	bf00      	nop
 8002c7e:	e00a      	b.n	8002c96 <I2C_Read_Reg+0x432>
		if((counter_millis-counter_ms)>timeout)return;
 8002c80:	bf00      	nop
 8002c82:	e008      	b.n	8002c96 <I2C_Read_Reg+0x432>
		if((counter_millis-counter_ms)>timeout)return;
 8002c84:	bf00      	nop
 8002c86:	e006      	b.n	8002c96 <I2C_Read_Reg+0x432>
		if((counter_millis-counter_ms)>timeout)return;
 8002c88:	bf00      	nop
 8002c8a:	e004      	b.n	8002c96 <I2C_Read_Reg+0x432>
		if((counter_millis-counter_ms)>timeout)return;
 8002c8c:	bf00      	nop
 8002c8e:	e002      	b.n	8002c96 <I2C_Read_Reg+0x432>
		if((counter_millis-counter_ms)>timeout)return;
 8002c90:	bf00      	nop
 8002c92:	e000      	b.n	8002c96 <I2C_Read_Reg+0x432>
			if((counter_millis-counter_ms)>timeout)return;
 8002c94:	bf00      	nop


}
 8002c96:	3778      	adds	r7, #120	; 0x78
 8002c98:	46bd      	mov	sp, r7
 8002c9a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8002c9e:	bf00      	nop
 8002ca0:	20000280 	.word	0x20000280
 8002ca4:	40005400 	.word	0x40005400

08002ca8 <I2C_Write_Reg>:

void I2C_Write_Reg(I2CHandle_t *hi2c,uint8_t reg,uint8_t* reg_data,uint16_t count,uint16_t timeout){
 8002ca8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8002cac:	b09a      	sub	sp, #104	; 0x68
 8002cae:	af00      	add	r7, sp, #0
 8002cb0:	6578      	str	r0, [r7, #84]	; 0x54
 8002cb2:	64fa      	str	r2, [r7, #76]	; 0x4c
 8002cb4:	461a      	mov	r2, r3
 8002cb6:	460b      	mov	r3, r1
 8002cb8:	f887 3053 	strb.w	r3, [r7, #83]	; 0x53
 8002cbc:	4613      	mov	r3, r2
 8002cbe:	f8a7 3050 	strh.w	r3, [r7, #80]	; 0x50

	uint64_t counter_ms = 0;
 8002cc2:	f04f 0200 	mov.w	r2, #0
 8002cc6:	f04f 0300 	mov.w	r3, #0
 8002cca:	e9c7 2318 	strd	r2, r3, [r7, #96]	; 0x60
	hi2c->pTxdata = &reg;
 8002cce:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8002cd0:	f107 0353 	add.w	r3, r7, #83	; 0x53
 8002cd4:	6093      	str	r3, [r2, #8]
	hi2c->pTxXfercount = count;
 8002cd6:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8002cd8:	f8b7 3050 	ldrh.w	r3, [r7, #80]	; 0x50
 8002cdc:	81d3      	strh	r3, [r2, #14]

	//check if peripheral enabled
	if(!LL_I2C_IsEnabled(hi2c->Instance)){
 8002cde:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002ce0:	681b      	ldr	r3, [r3, #0]
 8002ce2:	4618      	mov	r0, r3
 8002ce4:	f7ff fd2c 	bl	8002740 <LL_I2C_IsEnabled>
 8002ce8:	4603      	mov	r3, r0
 8002cea:	2b00      	cmp	r3, #0
 8002cec:	d104      	bne.n	8002cf8 <I2C_Write_Reg+0x50>
		LL_I2C_Enable(hi2c->Instance);
 8002cee:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002cf0:	681b      	ldr	r3, [r3, #0]
 8002cf2:	4618      	mov	r0, r3
 8002cf4:	f7ff fd14 	bl	8002720 <LL_I2C_Enable>
	}

	//Enable acknowledge
	SET_BIT((hi2c->Instance)->CR1,I2C_CR1_ACK);
 8002cf8:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002cfa:	681b      	ldr	r3, [r3, #0]
 8002cfc:	6819      	ldr	r1, [r3, #0]
 8002cfe:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002d00:	681a      	ldr	r2, [r3, #0]
 8002d02:	f441 6380 	orr.w	r3, r1, #1024	; 0x400
 8002d06:	6013      	str	r3, [r2, #0]

    //send start
	SET_BIT((hi2c->Instance)->CR1,I2C_CR1_START);
 8002d08:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002d0a:	681b      	ldr	r3, [r3, #0]
 8002d0c:	6819      	ldr	r1, [r3, #0]
 8002d0e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002d10:	681a      	ldr	r2, [r3, #0]
 8002d12:	f441 7380 	orr.w	r3, r1, #256	; 0x100
 8002d16:	6013      	str	r3, [r2, #0]

	counter_ms = counter_millis;
 8002d18:	4ba8      	ldr	r3, [pc, #672]	; (8002fbc <I2C_Write_Reg+0x314>)
 8002d1a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d1e:	e9c7 2318 	strd	r2, r3, [r7, #96]	; 0x60
	while(!READ_BIT((hi2c->Instance)->SR1,I2C_SR1_SB)){
 8002d22:	e011      	b.n	8002d48 <I2C_Write_Reg+0xa0>
		//wait till start condition generated
		if((counter_millis-counter_ms)>timeout)return;
 8002d24:	4ba5      	ldr	r3, [pc, #660]	; (8002fbc <I2C_Write_Reg+0x314>)
 8002d26:	e9d3 0100 	ldrd	r0, r1, [r3]
 8002d2a:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 8002d2e:	1a84      	subs	r4, r0, r2
 8002d30:	eb61 0503 	sbc.w	r5, r1, r3
 8002d34:	f8b7 3088 	ldrh.w	r3, [r7, #136]	; 0x88
 8002d38:	2200      	movs	r2, #0
 8002d3a:	469a      	mov	sl, r3
 8002d3c:	4693      	mov	fp, r2
 8002d3e:	45a2      	cmp	sl, r4
 8002d40:	eb7b 0305 	sbcs.w	r3, fp, r5
 8002d44:	f0c0 812b 	bcc.w	8002f9e <I2C_Write_Reg+0x2f6>
	while(!READ_BIT((hi2c->Instance)->SR1,I2C_SR1_SB)){
 8002d48:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002d4a:	681b      	ldr	r3, [r3, #0]
 8002d4c:	695b      	ldr	r3, [r3, #20]
 8002d4e:	f003 0301 	and.w	r3, r3, #1
 8002d52:	2b00      	cmp	r3, #0
 8002d54:	d0e6      	beq.n	8002d24 <I2C_Write_Reg+0x7c>
	}

	//send slave address
	LL_I2C_TransmitData8(hi2c->Instance, (IMU_SLAVE_ADDR<<1U) & ~(0x01U)); //Write operation
 8002d56:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002d58:	681b      	ldr	r3, [r3, #0]
 8002d5a:	21d0      	movs	r1, #208	; 0xd0
 8002d5c:	4618      	mov	r0, r3
 8002d5e:	f7ff fd5c 	bl	800281a <LL_I2C_TransmitData8>

	counter_ms = counter_millis;
 8002d62:	4b96      	ldr	r3, [pc, #600]	; (8002fbc <I2C_Write_Reg+0x314>)
 8002d64:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d68:	e9c7 2318 	strd	r2, r3, [r7, #96]	; 0x60
    while(!LL_I2C_IsActiveFlag_ADDR(hi2c->Instance)){
 8002d6c:	e016      	b.n	8002d9c <I2C_Write_Reg+0xf4>
    	//wait until ADDR flag is set
    	if((counter_millis-counter_ms)>timeout)return;
 8002d6e:	4b93      	ldr	r3, [pc, #588]	; (8002fbc <I2C_Write_Reg+0x314>)
 8002d70:	e9d3 0100 	ldrd	r0, r1, [r3]
 8002d74:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 8002d78:	ebb0 0802 	subs.w	r8, r0, r2
 8002d7c:	eb61 0903 	sbc.w	r9, r1, r3
 8002d80:	f8b7 3088 	ldrh.w	r3, [r7, #136]	; 0x88
 8002d84:	2200      	movs	r2, #0
 8002d86:	643b      	str	r3, [r7, #64]	; 0x40
 8002d88:	647a      	str	r2, [r7, #68]	; 0x44
 8002d8a:	e9d7 1210 	ldrd	r1, r2, [r7, #64]	; 0x40
 8002d8e:	460b      	mov	r3, r1
 8002d90:	4543      	cmp	r3, r8
 8002d92:	4613      	mov	r3, r2
 8002d94:	eb73 0309 	sbcs.w	r3, r3, r9
 8002d98:	f0c0 8103 	bcc.w	8002fa2 <I2C_Write_Reg+0x2fa>
    while(!LL_I2C_IsActiveFlag_ADDR(hi2c->Instance)){
 8002d9c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002d9e:	681b      	ldr	r3, [r3, #0]
 8002da0:	4618      	mov	r0, r3
 8002da2:	f7ff fd06 	bl	80027b2 <LL_I2C_IsActiveFlag_ADDR>
 8002da6:	4603      	mov	r3, r0
 8002da8:	2b00      	cmp	r3, #0
 8002daa:	d0e0      	beq.n	8002d6e <I2C_Write_Reg+0xc6>
    }

    uint32_t tmpreg = (hi2c->Instance)->SR1;
 8002dac:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002dae:	681b      	ldr	r3, [r3, #0]
 8002db0:	695b      	ldr	r3, [r3, #20]
 8002db2:	65fb      	str	r3, [r7, #92]	; 0x5c
    tmpreg = (hi2c->Instance)->SR2;
 8002db4:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002db6:	681b      	ldr	r3, [r3, #0]
 8002db8:	699b      	ldr	r3, [r3, #24]
 8002dba:	65fb      	str	r3, [r7, #92]	; 0x5c
    unused(tmpreg);

    if(LL_I2C_IsActiveFlag_AF(hi2c->Instance)){
 8002dbc:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002dbe:	681b      	ldr	r3, [r3, #0]
 8002dc0:	4618      	mov	r0, r3
 8002dc2:	f7ff fd09 	bl	80027d8 <LL_I2C_IsActiveFlag_AF>
 8002dc6:	4603      	mov	r3, r0
 8002dc8:	2b00      	cmp	r3, #0
 8002dca:	d008      	beq.n	8002dde <I2C_Write_Reg+0x136>
    	//should not be here (ACK failure)
    	CLEAR_BIT((hi2c->Instance)->SR1,I2C_SR1_AF);
 8002dcc:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002dce:	681b      	ldr	r3, [r3, #0]
 8002dd0:	695a      	ldr	r2, [r3, #20]
 8002dd2:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002dd4:	681b      	ldr	r3, [r3, #0]
 8002dd6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002dda:	615a      	str	r2, [r3, #20]
    	return;
 8002ddc:	e0ea      	b.n	8002fb4 <I2C_Write_Reg+0x30c>
    }

    counter_ms = counter_millis;
 8002dde:	4b77      	ldr	r3, [pc, #476]	; (8002fbc <I2C_Write_Reg+0x314>)
 8002de0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002de4:	e9c7 2318 	strd	r2, r3, [r7, #96]	; 0x60
    while(!LL_I2C_IsActiveFlag_TXE(hi2c->Instance)){
 8002de8:	e01a      	b.n	8002e20 <I2C_Write_Reg+0x178>
		//wait until TXE flag is set
    	if((counter_millis-counter_ms)>timeout)return;
 8002dea:	4b74      	ldr	r3, [pc, #464]	; (8002fbc <I2C_Write_Reg+0x314>)
 8002dec:	e9d3 0100 	ldrd	r0, r1, [r3]
 8002df0:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 8002df4:	1a84      	subs	r4, r0, r2
 8002df6:	63bc      	str	r4, [r7, #56]	; 0x38
 8002df8:	eb61 0303 	sbc.w	r3, r1, r3
 8002dfc:	63fb      	str	r3, [r7, #60]	; 0x3c
 8002dfe:	f8b7 3088 	ldrh.w	r3, [r7, #136]	; 0x88
 8002e02:	2200      	movs	r2, #0
 8002e04:	633b      	str	r3, [r7, #48]	; 0x30
 8002e06:	637a      	str	r2, [r7, #52]	; 0x34
 8002e08:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 8002e0c:	4623      	mov	r3, r4
 8002e0e:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 8002e12:	4602      	mov	r2, r0
 8002e14:	4293      	cmp	r3, r2
 8002e16:	462b      	mov	r3, r5
 8002e18:	460a      	mov	r2, r1
 8002e1a:	4193      	sbcs	r3, r2
 8002e1c:	f0c0 80c3 	bcc.w	8002fa6 <I2C_Write_Reg+0x2fe>
    while(!LL_I2C_IsActiveFlag_TXE(hi2c->Instance)){
 8002e20:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002e22:	681b      	ldr	r3, [r3, #0]
 8002e24:	4618      	mov	r0, r3
 8002e26:	f7ff fc9e 	bl	8002766 <LL_I2C_IsActiveFlag_TXE>
 8002e2a:	4603      	mov	r3, r0
 8002e2c:	2b00      	cmp	r3, #0
 8002e2e:	d0dc      	beq.n	8002dea <I2C_Write_Reg+0x142>
	}

    //send register address
    LL_I2C_TransmitData8(hi2c->Instance, *(hi2c->pTxdata++));
 8002e30:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002e32:	6818      	ldr	r0, [r3, #0]
 8002e34:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002e36:	6899      	ldr	r1, [r3, #8]
 8002e38:	1c4a      	adds	r2, r1, #1
 8002e3a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002e3c:	609a      	str	r2, [r3, #8]
 8002e3e:	780b      	ldrb	r3, [r1, #0]
 8002e40:	4619      	mov	r1, r3
 8002e42:	f7ff fcea 	bl	800281a <LL_I2C_TransmitData8>

    counter_ms = counter_millis;
 8002e46:	4b5d      	ldr	r3, [pc, #372]	; (8002fbc <I2C_Write_Reg+0x314>)
 8002e48:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002e4c:	e9c7 2318 	strd	r2, r3, [r7, #96]	; 0x60
    while(!LL_I2C_IsActiveFlag_TXE(hi2c->Instance)){
 8002e50:	e01a      	b.n	8002e88 <I2C_Write_Reg+0x1e0>
		//wait until TXE flag is set
    	if((counter_millis-counter_ms)>timeout)return;
 8002e52:	4b5a      	ldr	r3, [pc, #360]	; (8002fbc <I2C_Write_Reg+0x314>)
 8002e54:	e9d3 0100 	ldrd	r0, r1, [r3]
 8002e58:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 8002e5c:	1a84      	subs	r4, r0, r2
 8002e5e:	62bc      	str	r4, [r7, #40]	; 0x28
 8002e60:	eb61 0303 	sbc.w	r3, r1, r3
 8002e64:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002e66:	f8b7 3088 	ldrh.w	r3, [r7, #136]	; 0x88
 8002e6a:	2200      	movs	r2, #0
 8002e6c:	623b      	str	r3, [r7, #32]
 8002e6e:	627a      	str	r2, [r7, #36]	; 0x24
 8002e70:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 8002e74:	4623      	mov	r3, r4
 8002e76:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8002e7a:	4602      	mov	r2, r0
 8002e7c:	4293      	cmp	r3, r2
 8002e7e:	462b      	mov	r3, r5
 8002e80:	460a      	mov	r2, r1
 8002e82:	4193      	sbcs	r3, r2
 8002e84:	f0c0 8091 	bcc.w	8002faa <I2C_Write_Reg+0x302>
    while(!LL_I2C_IsActiveFlag_TXE(hi2c->Instance)){
 8002e88:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002e8a:	681b      	ldr	r3, [r3, #0]
 8002e8c:	4618      	mov	r0, r3
 8002e8e:	f7ff fc6a 	bl	8002766 <LL_I2C_IsActiveFlag_TXE>
 8002e92:	4603      	mov	r3, r0
 8002e94:	2b00      	cmp	r3, #0
 8002e96:	d0dc      	beq.n	8002e52 <I2C_Write_Reg+0x1aa>
	}

    if(LL_I2C_IsActiveFlag_AF(hi2c->Instance)){
 8002e98:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002e9a:	681b      	ldr	r3, [r3, #0]
 8002e9c:	4618      	mov	r0, r3
 8002e9e:	f7ff fc9b 	bl	80027d8 <LL_I2C_IsActiveFlag_AF>
 8002ea2:	4603      	mov	r3, r0
 8002ea4:	2b00      	cmp	r3, #0
 8002ea6:	d008      	beq.n	8002eba <I2C_Write_Reg+0x212>
		//should not be here (ACK failure)
		CLEAR_BIT((hi2c->Instance)->SR1,I2C_SR1_AF);
 8002ea8:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002eaa:	681b      	ldr	r3, [r3, #0]
 8002eac:	695a      	ldr	r2, [r3, #20]
 8002eae:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002eb0:	681b      	ldr	r3, [r3, #0]
 8002eb2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002eb6:	615a      	str	r2, [r3, #20]
		return;
 8002eb8:	e07c      	b.n	8002fb4 <I2C_Write_Reg+0x30c>
	}

    counter_ms = counter_millis;
 8002eba:	4b40      	ldr	r3, [pc, #256]	; (8002fbc <I2C_Write_Reg+0x314>)
 8002ebc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002ec0:	e9c7 2318 	strd	r2, r3, [r7, #96]	; 0x60
    while(!LL_I2C_IsActiveFlag_TXE(hi2c->Instance)){
 8002ec4:	e019      	b.n	8002efa <I2C_Write_Reg+0x252>
		//wait until TXE flag is set
    	if((counter_millis-counter_ms)>timeout)return;
 8002ec6:	4b3d      	ldr	r3, [pc, #244]	; (8002fbc <I2C_Write_Reg+0x314>)
 8002ec8:	e9d3 0100 	ldrd	r0, r1, [r3]
 8002ecc:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 8002ed0:	1a84      	subs	r4, r0, r2
 8002ed2:	61bc      	str	r4, [r7, #24]
 8002ed4:	eb61 0303 	sbc.w	r3, r1, r3
 8002ed8:	61fb      	str	r3, [r7, #28]
 8002eda:	f8b7 3088 	ldrh.w	r3, [r7, #136]	; 0x88
 8002ede:	2200      	movs	r2, #0
 8002ee0:	613b      	str	r3, [r7, #16]
 8002ee2:	617a      	str	r2, [r7, #20]
 8002ee4:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 8002ee8:	4623      	mov	r3, r4
 8002eea:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8002eee:	4602      	mov	r2, r0
 8002ef0:	4293      	cmp	r3, r2
 8002ef2:	462b      	mov	r3, r5
 8002ef4:	460a      	mov	r2, r1
 8002ef6:	4193      	sbcs	r3, r2
 8002ef8:	d359      	bcc.n	8002fae <I2C_Write_Reg+0x306>
    while(!LL_I2C_IsActiveFlag_TXE(hi2c->Instance)){
 8002efa:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002efc:	681b      	ldr	r3, [r3, #0]
 8002efe:	4618      	mov	r0, r3
 8002f00:	f7ff fc31 	bl	8002766 <LL_I2C_IsActiveFlag_TXE>
 8002f04:	4603      	mov	r3, r0
 8002f06:	2b00      	cmp	r3, #0
 8002f08:	d0dd      	beq.n	8002ec6 <I2C_Write_Reg+0x21e>
	}

	//send register data
	LL_I2C_TransmitData8(hi2c->Instance, reg_data[0]);
 8002f0a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002f0c:	681a      	ldr	r2, [r3, #0]
 8002f0e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8002f10:	781b      	ldrb	r3, [r3, #0]
 8002f12:	4619      	mov	r1, r3
 8002f14:	4610      	mov	r0, r2
 8002f16:	f7ff fc80 	bl	800281a <LL_I2C_TransmitData8>

	counter_ms = counter_millis;
 8002f1a:	4b28      	ldr	r3, [pc, #160]	; (8002fbc <I2C_Write_Reg+0x314>)
 8002f1c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002f20:	e9c7 2318 	strd	r2, r3, [r7, #96]	; 0x60
	while(!LL_I2C_IsActiveFlag_TXE(hi2c->Instance)){
 8002f24:	e019      	b.n	8002f5a <I2C_Write_Reg+0x2b2>
		//wait until TXE flag is set
		if((counter_millis-counter_ms)>timeout)return;
 8002f26:	4b25      	ldr	r3, [pc, #148]	; (8002fbc <I2C_Write_Reg+0x314>)
 8002f28:	e9d3 0100 	ldrd	r0, r1, [r3]
 8002f2c:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 8002f30:	1a84      	subs	r4, r0, r2
 8002f32:	60bc      	str	r4, [r7, #8]
 8002f34:	eb61 0303 	sbc.w	r3, r1, r3
 8002f38:	60fb      	str	r3, [r7, #12]
 8002f3a:	f8b7 3088 	ldrh.w	r3, [r7, #136]	; 0x88
 8002f3e:	2200      	movs	r2, #0
 8002f40:	603b      	str	r3, [r7, #0]
 8002f42:	607a      	str	r2, [r7, #4]
 8002f44:	e9d7 4500 	ldrd	r4, r5, [r7]
 8002f48:	4623      	mov	r3, r4
 8002f4a:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8002f4e:	4602      	mov	r2, r0
 8002f50:	4293      	cmp	r3, r2
 8002f52:	462b      	mov	r3, r5
 8002f54:	460a      	mov	r2, r1
 8002f56:	4193      	sbcs	r3, r2
 8002f58:	d32b      	bcc.n	8002fb2 <I2C_Write_Reg+0x30a>
	while(!LL_I2C_IsActiveFlag_TXE(hi2c->Instance)){
 8002f5a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002f5c:	681b      	ldr	r3, [r3, #0]
 8002f5e:	4618      	mov	r0, r3
 8002f60:	f7ff fc01 	bl	8002766 <LL_I2C_IsActiveFlag_TXE>
 8002f64:	4603      	mov	r3, r0
 8002f66:	2b00      	cmp	r3, #0
 8002f68:	d0dd      	beq.n	8002f26 <I2C_Write_Reg+0x27e>
	}


	if(LL_I2C_IsActiveFlag_AF(hi2c->Instance)){
 8002f6a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002f6c:	681b      	ldr	r3, [r3, #0]
 8002f6e:	4618      	mov	r0, r3
 8002f70:	f7ff fc32 	bl	80027d8 <LL_I2C_IsActiveFlag_AF>
 8002f74:	4603      	mov	r3, r0
 8002f76:	2b00      	cmp	r3, #0
 8002f78:	d008      	beq.n	8002f8c <I2C_Write_Reg+0x2e4>
		//should not be here (ACK failure)
		CLEAR_BIT((hi2c->Instance)->SR1,I2C_SR1_AF);
 8002f7a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002f7c:	681b      	ldr	r3, [r3, #0]
 8002f7e:	695a      	ldr	r2, [r3, #20]
 8002f80:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002f82:	681b      	ldr	r3, [r3, #0]
 8002f84:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002f88:	615a      	str	r2, [r3, #20]
		return;
 8002f8a:	e013      	b.n	8002fb4 <I2C_Write_Reg+0x30c>
	}

    // Generate Stop
    SET_BIT((hi2c->Instance)->CR1, I2C_CR1_STOP);
 8002f8c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002f8e:	681b      	ldr	r3, [r3, #0]
 8002f90:	681a      	ldr	r2, [r3, #0]
 8002f92:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002f94:	681b      	ldr	r3, [r3, #0]
 8002f96:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002f9a:	601a      	str	r2, [r3, #0]
 8002f9c:	e00a      	b.n	8002fb4 <I2C_Write_Reg+0x30c>
		if((counter_millis-counter_ms)>timeout)return;
 8002f9e:	bf00      	nop
 8002fa0:	e008      	b.n	8002fb4 <I2C_Write_Reg+0x30c>
    	if((counter_millis-counter_ms)>timeout)return;
 8002fa2:	bf00      	nop
 8002fa4:	e006      	b.n	8002fb4 <I2C_Write_Reg+0x30c>
    	if((counter_millis-counter_ms)>timeout)return;
 8002fa6:	bf00      	nop
 8002fa8:	e004      	b.n	8002fb4 <I2C_Write_Reg+0x30c>
    	if((counter_millis-counter_ms)>timeout)return;
 8002faa:	bf00      	nop
 8002fac:	e002      	b.n	8002fb4 <I2C_Write_Reg+0x30c>
    	if((counter_millis-counter_ms)>timeout)return;
 8002fae:	bf00      	nop
 8002fb0:	e000      	b.n	8002fb4 <I2C_Write_Reg+0x30c>
		if((counter_millis-counter_ms)>timeout)return;
 8002fb2:	bf00      	nop

//    delay_ms(1);
}
 8002fb4:	3768      	adds	r7, #104	; 0x68
 8002fb6:	46bd      	mov	sp, r7
 8002fb8:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8002fbc:	20000280 	.word	0x20000280

08002fc0 <LL_USART_IsActiveFlag_TC>:
  * @rmtoll SR           TC            LL_USART_IsActiveFlag_TC
  * @param  USARTx USART Instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TC(USART_TypeDef *USARTx)
{
 8002fc0:	b480      	push	{r7}
 8002fc2:	b083      	sub	sp, #12
 8002fc4:	af00      	add	r7, sp, #0
 8002fc6:	6078      	str	r0, [r7, #4]
  return (READ_BIT(USARTx->SR, USART_SR_TC) == (USART_SR_TC));
 8002fc8:	687b      	ldr	r3, [r7, #4]
 8002fca:	681b      	ldr	r3, [r3, #0]
 8002fcc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002fd0:	2b40      	cmp	r3, #64	; 0x40
 8002fd2:	bf0c      	ite	eq
 8002fd4:	2301      	moveq	r3, #1
 8002fd6:	2300      	movne	r3, #0
 8002fd8:	b2db      	uxtb	r3, r3
}
 8002fda:	4618      	mov	r0, r3
 8002fdc:	370c      	adds	r7, #12
 8002fde:	46bd      	mov	sp, r7
 8002fe0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fe4:	4770      	bx	lr

08002fe6 <LL_USART_IsActiveFlag_TXE>:
  * @rmtoll SR           TXE           LL_USART_IsActiveFlag_TXE
  * @param  USARTx USART Instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TXE(USART_TypeDef *USARTx)
{
 8002fe6:	b480      	push	{r7}
 8002fe8:	b083      	sub	sp, #12
 8002fea:	af00      	add	r7, sp, #0
 8002fec:	6078      	str	r0, [r7, #4]
  return (READ_BIT(USARTx->SR, USART_SR_TXE) == (USART_SR_TXE));
 8002fee:	687b      	ldr	r3, [r7, #4]
 8002ff0:	681b      	ldr	r3, [r3, #0]
 8002ff2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002ff6:	2b80      	cmp	r3, #128	; 0x80
 8002ff8:	bf0c      	ite	eq
 8002ffa:	2301      	moveq	r3, #1
 8002ffc:	2300      	movne	r3, #0
 8002ffe:	b2db      	uxtb	r3, r3
}
 8003000:	4618      	mov	r0, r3
 8003002:	370c      	adds	r7, #12
 8003004:	46bd      	mov	sp, r7
 8003006:	f85d 7b04 	ldr.w	r7, [sp], #4
 800300a:	4770      	bx	lr

0800300c <LL_USART_TransmitData8>:
  * @param  USARTx USART Instance
  * @param  Value between Min_Data=0x00 and Max_Data=0xFF
  * @retval None
  */
__STATIC_INLINE void LL_USART_TransmitData8(USART_TypeDef *USARTx, uint8_t Value)
{
 800300c:	b480      	push	{r7}
 800300e:	b083      	sub	sp, #12
 8003010:	af00      	add	r7, sp, #0
 8003012:	6078      	str	r0, [r7, #4]
 8003014:	460b      	mov	r3, r1
 8003016:	70fb      	strb	r3, [r7, #3]
  USARTx->DR = Value;
 8003018:	78fa      	ldrb	r2, [r7, #3]
 800301a:	687b      	ldr	r3, [r7, #4]
 800301c:	605a      	str	r2, [r3, #4]
}
 800301e:	bf00      	nop
 8003020:	370c      	adds	r7, #12
 8003022:	46bd      	mov	sp, r7
 8003024:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003028:	4770      	bx	lr
	...

0800302c <IMU_Uart_Init>:
#include "IMU_UartMsg.h"

#define UART_USED USART3

void IMU_Uart_Init(UartHandle_t *huart){
 800302c:	b480      	push	{r7}
 800302e:	b083      	sub	sp, #12
 8003030:	af00      	add	r7, sp, #0
 8003032:	6078      	str	r0, [r7, #4]
	huart->Instance = UART_USED;
 8003034:	687b      	ldr	r3, [r7, #4]
 8003036:	4a04      	ldr	r2, [pc, #16]	; (8003048 <IMU_Uart_Init+0x1c>)
 8003038:	601a      	str	r2, [r3, #0]
}
 800303a:	bf00      	nop
 800303c:	370c      	adds	r7, #12
 800303e:	46bd      	mov	sp, r7
 8003040:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003044:	4770      	bx	lr
 8003046:	bf00      	nop
 8003048:	40004800 	.word	0x40004800

0800304c <Uart_TransmitData>:

void Uart_TransmitData(UartHandle_t *huart,uint8_t* pTxdata,uint16_t size){
 800304c:	b580      	push	{r7, lr}
 800304e:	b084      	sub	sp, #16
 8003050:	af00      	add	r7, sp, #0
 8003052:	60f8      	str	r0, [r7, #12]
 8003054:	60b9      	str	r1, [r7, #8]
 8003056:	4613      	mov	r3, r2
 8003058:	80fb      	strh	r3, [r7, #6]
	huart->pTxdata = pTxdata;
 800305a:	68fb      	ldr	r3, [r7, #12]
 800305c:	68ba      	ldr	r2, [r7, #8]
 800305e:	605a      	str	r2, [r3, #4]
	huart->pTxXfercount = size;
 8003060:	68fb      	ldr	r3, [r7, #12]
 8003062:	88fa      	ldrh	r2, [r7, #6]
 8003064:	81da      	strh	r2, [r3, #14]
	huart->pTxXfersize = size;
 8003066:	68fb      	ldr	r3, [r7, #12]
 8003068:	88fa      	ldrh	r2, [r7, #6]
 800306a:	819a      	strh	r2, [r3, #12]
	huart->errorcode = UART_ERROR_NONE;
 800306c:	68fb      	ldr	r3, [r7, #12]
 800306e:	2200      	movs	r2, #0
 8003070:	751a      	strb	r2, [r3, #20]

	while((huart->pTxXfercount)>0){
 8003072:	e019      	b.n	80030a8 <Uart_TransmitData+0x5c>
		huart->pTxXfercount--;
 8003074:	68fb      	ldr	r3, [r7, #12]
 8003076:	89db      	ldrh	r3, [r3, #14]
 8003078:	3b01      	subs	r3, #1
 800307a:	b29a      	uxth	r2, r3
 800307c:	68fb      	ldr	r3, [r7, #12]
 800307e:	81da      	strh	r2, [r3, #14]

		while(!LL_USART_IsActiveFlag_TXE(huart->Instance)){
 8003080:	bf00      	nop
 8003082:	68fb      	ldr	r3, [r7, #12]
 8003084:	681b      	ldr	r3, [r3, #0]
 8003086:	4618      	mov	r0, r3
 8003088:	f7ff ffad 	bl	8002fe6 <LL_USART_IsActiveFlag_TXE>
 800308c:	4603      	mov	r3, r0
 800308e:	2b00      	cmp	r3, #0
 8003090:	d0f7      	beq.n	8003082 <Uart_TransmitData+0x36>
			//wait for TXE bit to go high
		}

		LL_USART_TransmitData8(huart->Instance, *(huart->pTxdata++)&(uint8_t)0xFF);
 8003092:	68fb      	ldr	r3, [r7, #12]
 8003094:	6818      	ldr	r0, [r3, #0]
 8003096:	68fb      	ldr	r3, [r7, #12]
 8003098:	685b      	ldr	r3, [r3, #4]
 800309a:	1c59      	adds	r1, r3, #1
 800309c:	68fa      	ldr	r2, [r7, #12]
 800309e:	6051      	str	r1, [r2, #4]
 80030a0:	781b      	ldrb	r3, [r3, #0]
 80030a2:	4619      	mov	r1, r3
 80030a4:	f7ff ffb2 	bl	800300c <LL_USART_TransmitData8>
	while((huart->pTxXfercount)>0){
 80030a8:	68fb      	ldr	r3, [r7, #12]
 80030aa:	89db      	ldrh	r3, [r3, #14]
 80030ac:	2b00      	cmp	r3, #0
 80030ae:	d1e1      	bne.n	8003074 <Uart_TransmitData+0x28>
	}

	while(!LL_USART_IsActiveFlag_TC(huart->Instance)){
 80030b0:	bf00      	nop
 80030b2:	68fb      	ldr	r3, [r7, #12]
 80030b4:	681b      	ldr	r3, [r3, #0]
 80030b6:	4618      	mov	r0, r3
 80030b8:	f7ff ff82 	bl	8002fc0 <LL_USART_IsActiveFlag_TC>
 80030bc:	4603      	mov	r3, r0
 80030be:	2b00      	cmp	r3, #0
 80030c0:	d0f7      	beq.n	80030b2 <Uart_TransmitData+0x66>
		//wait for TC bit to go high
	}
}
 80030c2:	bf00      	nop
 80030c4:	bf00      	nop
 80030c6:	3710      	adds	r7, #16
 80030c8:	46bd      	mov	sp, r7
 80030ca:	bd80      	pop	{r7, pc}

080030cc <MPU_begin>:
/// @param addr Hex address based on AD0 pin - 0x68 low or 0x69 high.
/// @param aScale Set accelerometer full scale range: 0 for ±2g, 1 for ±4g, 2 for ±8g, and 3 for ±16g.
/// @param gScale Set gyroscope full scale range: 0 for ±250°/s, 1 for ±500°/s, 2 for ±1000°/s, and 3 for ±2000°/s.

uint8_t MPU_begin(I2CHandle_t *hi2c, IMU_t *imu, uint8_t addr, uint8_t aScale, uint8_t gScale)
{
 80030cc:	b580      	push	{r7, lr}
 80030ce:	b088      	sub	sp, #32
 80030d0:	af02      	add	r7, sp, #8
 80030d2:	60f8      	str	r0, [r7, #12]
 80030d4:	60b9      	str	r1, [r7, #8]
 80030d6:	4611      	mov	r1, r2
 80030d8:	461a      	mov	r2, r3
 80030da:	460b      	mov	r3, r1
 80030dc:	71fb      	strb	r3, [r7, #7]
 80030de:	4613      	mov	r3, r2
 80030e0:	71bb      	strb	r3, [r7, #6]
	//set address
	imu->dev_address = addr;
 80030e2:	68bb      	ldr	r3, [r7, #8]
 80030e4:	79fa      	ldrb	r2, [r7, #7]
 80030e6:	701a      	strb	r2, [r3, #0]

    // Initialize variables
    uint8_t check = 0U;
 80030e8:	2300      	movs	r3, #0
 80030ea:	75fb      	strb	r3, [r7, #23]

    // Confirm device
    I2C_Read_Reg(hi2c, REG_WHO_AM_I, &check, 1,100);
 80030ec:	f107 0217 	add.w	r2, r7, #23
 80030f0:	2364      	movs	r3, #100	; 0x64
 80030f2:	9300      	str	r3, [sp, #0]
 80030f4:	2301      	movs	r3, #1
 80030f6:	2175      	movs	r1, #117	; 0x75
 80030f8:	68f8      	ldr	r0, [r7, #12]
 80030fa:	f7ff fbb3 	bl	8002864 <I2C_Read_Reg>

    if ((check == WHO_AM_I_9250_ANS) || (check == WHO_AM_I_6050_ANS))
 80030fe:	7dfb      	ldrb	r3, [r7, #23]
 8003100:	2b71      	cmp	r3, #113	; 0x71
 8003102:	d002      	beq.n	800310a <MPU_begin+0x3e>
 8003104:	7dfb      	ldrb	r3, [r7, #23]
 8003106:	2b68      	cmp	r3, #104	; 0x68
 8003108:	d119      	bne.n	800313e <MPU_begin+0x72>
    {
        // Startup / reset the sensor
    	//exit sleep
	    uint8_t pwr = 0x00U;
 800310a:	2300      	movs	r3, #0
 800310c:	75bb      	strb	r3, [r7, #22]
    	I2C_Write_Reg(hi2c, REG_PWR_MGMT_1, &pwr, 1,100);
 800310e:	f107 0216 	add.w	r2, r7, #22
 8003112:	2364      	movs	r3, #100	; 0x64
 8003114:	9300      	str	r3, [sp, #0]
 8003116:	2301      	movs	r3, #1
 8003118:	216b      	movs	r1, #107	; 0x6b
 800311a:	68f8      	ldr	r0, [r7, #12]
 800311c:	f7ff fdc4 	bl	8002ca8 <I2C_Write_Reg>

    	// Set the full scale ranges
        MPU_writeAccFullScaleRange(hi2c, imu, aScale);
 8003120:	79bb      	ldrb	r3, [r7, #6]
 8003122:	461a      	mov	r2, r3
 8003124:	68b9      	ldr	r1, [r7, #8]
 8003126:	68f8      	ldr	r0, [r7, #12]
 8003128:	f000 f80e 	bl	8003148 <MPU_writeAccFullScaleRange>
        MPU_writeGyroFullScaleRange(hi2c, imu, gScale);
 800312c:	f897 3020 	ldrb.w	r3, [r7, #32]
 8003130:	461a      	mov	r2, r3
 8003132:	68b9      	ldr	r1, [r7, #8]
 8003134:	68f8      	ldr	r0, [r7, #12]
 8003136:	f000 f85f 	bl	80031f8 <MPU_writeGyroFullScaleRange>

        return 1;
 800313a:	2301      	movs	r3, #1
 800313c:	e000      	b.n	8003140 <MPU_begin+0x74>
    }
    else
    {
        return 0;
 800313e:	2300      	movs	r3, #0
    }
}
 8003140:	4618      	mov	r0, r3
 8003142:	3718      	adds	r7, #24
 8003144:	46bd      	mov	sp, r7
 8003146:	bd80      	pop	{r7, pc}

08003148 <MPU_writeAccFullScaleRange>:

/// @brief Set the accelerometer full scale range.
/// @param I2Cx Pointer to I2C structure config.
/// @param aScale Set 0 for ±2g, 1 for ±4g, 2 for ±8g, and 3 for ±16g.
void MPU_writeAccFullScaleRange(I2CHandle_t *hi2c, IMU_t *imu, uint8_t aScale)
{
 8003148:	b580      	push	{r7, lr}
 800314a:	b088      	sub	sp, #32
 800314c:	af02      	add	r7, sp, #8
 800314e:	60f8      	str	r0, [r7, #12]
 8003150:	60b9      	str	r1, [r7, #8]
 8003152:	4613      	mov	r3, r2
 8003154:	71fb      	strb	r3, [r7, #7]
	//clear scale value
	uint8_t data = 0;
 8003156:	2300      	movs	r3, #0
 8003158:	75fb      	strb	r3, [r7, #23]
	I2C_Read_Reg(hi2c, REG_ACCEL_CONFIG, &data, 1,100);
 800315a:	f107 0217 	add.w	r2, r7, #23
 800315e:	2364      	movs	r3, #100	; 0x64
 8003160:	9300      	str	r3, [sp, #0]
 8003162:	2301      	movs	r3, #1
 8003164:	211c      	movs	r1, #28
 8003166:	68f8      	ldr	r0, [r7, #12]
 8003168:	f7ff fb7c 	bl	8002864 <I2C_Read_Reg>
	data = data & ~(0x3<<3U);
 800316c:	7dfb      	ldrb	r3, [r7, #23]
 800316e:	f023 0318 	bic.w	r3, r3, #24
 8003172:	b2db      	uxtb	r3, r3
 8003174:	75fb      	strb	r3, [r7, #23]
	I2C_Write_Reg(hi2c, REG_ACCEL_CONFIG, &data, 1,100);
 8003176:	f107 0217 	add.w	r2, r7, #23
 800317a:	2364      	movs	r3, #100	; 0x64
 800317c:	9300      	str	r3, [sp, #0]
 800317e:	2301      	movs	r3, #1
 8003180:	211c      	movs	r1, #28
 8003182:	68f8      	ldr	r0, [r7, #12]
 8003184:	f7ff fd90 	bl	8002ca8 <I2C_Write_Reg>

	// Set the value
    switch (aScale)
 8003188:	79fb      	ldrb	r3, [r7, #7]
 800318a:	2b03      	cmp	r3, #3
 800318c:	d81e      	bhi.n	80031cc <MPU_writeAccFullScaleRange+0x84>
 800318e:	a201      	add	r2, pc, #4	; (adr r2, 8003194 <MPU_writeAccFullScaleRange+0x4c>)
 8003190:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003194:	080031a5 	.word	0x080031a5
 8003198:	080031af 	.word	0x080031af
 800319c:	080031b9 	.word	0x080031b9
 80031a0:	080031c3 	.word	0x080031c3
    {
    case AFSR_2G:{
        imu->aScaleFactor = 16384.0;
 80031a4:	68bb      	ldr	r3, [r7, #8]
 80031a6:	f04f 428d 	mov.w	r2, #1182793728	; 0x46800000
 80031aa:	61da      	str	r2, [r3, #28]
        }
        break;
 80031ac:	e013      	b.n	80031d6 <MPU_writeAccFullScaleRange+0x8e>
    case AFSR_4G:{
        imu->aScaleFactor = 8192.0;
 80031ae:	68bb      	ldr	r3, [r7, #8]
 80031b0:	f04f 428c 	mov.w	r2, #1174405120	; 0x46000000
 80031b4:	61da      	str	r2, [r3, #28]
        }
        break;
 80031b6:	e00e      	b.n	80031d6 <MPU_writeAccFullScaleRange+0x8e>
    case AFSR_8G:{
        imu->aScaleFactor = 4096.0;
 80031b8:	68bb      	ldr	r3, [r7, #8]
 80031ba:	f04f 428b 	mov.w	r2, #1166016512	; 0x45800000
 80031be:	61da      	str	r2, [r3, #28]
        }
        break;
 80031c0:	e009      	b.n	80031d6 <MPU_writeAccFullScaleRange+0x8e>
    case AFSR_16G:{
        imu->aScaleFactor = 2048.0;
 80031c2:	68bb      	ldr	r3, [r7, #8]
 80031c4:	f04f 428a 	mov.w	r2, #1157627904	; 0x45000000
 80031c8:	61da      	str	r2, [r3, #28]
        }
        break;
 80031ca:	e004      	b.n	80031d6 <MPU_writeAccFullScaleRange+0x8e>
    default:{
        imu->aScaleFactor = 8192.0;
 80031cc:	68bb      	ldr	r3, [r7, #8]
 80031ce:	f04f 428c 	mov.w	r2, #1174405120	; 0x46000000
 80031d2:	61da      	str	r2, [r3, #28]
        }
        break;
 80031d4:	bf00      	nop
    }

    data = (aScale<<3U);
 80031d6:	79fb      	ldrb	r3, [r7, #7]
 80031d8:	00db      	lsls	r3, r3, #3
 80031da:	b2db      	uxtb	r3, r3
 80031dc:	75fb      	strb	r3, [r7, #23]
    I2C_Write_Reg(hi2c, REG_ACCEL_CONFIG, &(data), 1,100);
 80031de:	f107 0217 	add.w	r2, r7, #23
 80031e2:	2364      	movs	r3, #100	; 0x64
 80031e4:	9300      	str	r3, [sp, #0]
 80031e6:	2301      	movs	r3, #1
 80031e8:	211c      	movs	r1, #28
 80031ea:	68f8      	ldr	r0, [r7, #12]
 80031ec:	f7ff fd5c 	bl	8002ca8 <I2C_Write_Reg>

}
 80031f0:	bf00      	nop
 80031f2:	3718      	adds	r7, #24
 80031f4:	46bd      	mov	sp, r7
 80031f6:	bd80      	pop	{r7, pc}

080031f8 <MPU_writeGyroFullScaleRange>:

/// @brief Set the gyroscope full scale range.
/// @param I2Cx Pointer to I2C structure config.
/// @param gScale Set 0 for ±250°/s, 1 for ±500°/s, 2 for ±1000°/s, and 3 for ±2000°/s.
void MPU_writeGyroFullScaleRange(I2CHandle_t *hi2c, IMU_t *imu, uint8_t gScale)
{
 80031f8:	b580      	push	{r7, lr}
 80031fa:	b088      	sub	sp, #32
 80031fc:	af02      	add	r7, sp, #8
 80031fe:	60f8      	str	r0, [r7, #12]
 8003200:	60b9      	str	r1, [r7, #8]
 8003202:	4613      	mov	r3, r2
 8003204:	71fb      	strb	r3, [r7, #7]
	//clear scale value
	uint8_t data = 0;
 8003206:	2300      	movs	r3, #0
 8003208:	75fb      	strb	r3, [r7, #23]
	I2C_Read_Reg(hi2c, REG_GYRO_CONFIG, &data, 1,100);
 800320a:	f107 0217 	add.w	r2, r7, #23
 800320e:	2364      	movs	r3, #100	; 0x64
 8003210:	9300      	str	r3, [sp, #0]
 8003212:	2301      	movs	r3, #1
 8003214:	211b      	movs	r1, #27
 8003216:	68f8      	ldr	r0, [r7, #12]
 8003218:	f7ff fb24 	bl	8002864 <I2C_Read_Reg>
	data = data & ~(0x3<<3U);
 800321c:	7dfb      	ldrb	r3, [r7, #23]
 800321e:	f023 0318 	bic.w	r3, r3, #24
 8003222:	b2db      	uxtb	r3, r3
 8003224:	75fb      	strb	r3, [r7, #23]
	I2C_Write_Reg(hi2c, REG_GYRO_CONFIG, &data, 1,100);
 8003226:	f107 0217 	add.w	r2, r7, #23
 800322a:	2364      	movs	r3, #100	; 0x64
 800322c:	9300      	str	r3, [sp, #0]
 800322e:	2301      	movs	r3, #1
 8003230:	211b      	movs	r1, #27
 8003232:	68f8      	ldr	r0, [r7, #12]
 8003234:	f7ff fd38 	bl	8002ca8 <I2C_Write_Reg>

    // Set the value
    switch (gScale)
 8003238:	79fb      	ldrb	r3, [r7, #7]
 800323a:	2b03      	cmp	r3, #3
 800323c:	d81a      	bhi.n	8003274 <MPU_writeGyroFullScaleRange+0x7c>
 800323e:	a201      	add	r2, pc, #4	; (adr r2, 8003244 <MPU_writeGyroFullScaleRange+0x4c>)
 8003240:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003244:	08003255 	.word	0x08003255
 8003248:	0800325d 	.word	0x0800325d
 800324c:	08003265 	.word	0x08003265
 8003250:	0800326d 	.word	0x0800326d
    {
    case GFSR_250DPS:{
        imu->gScaleFactor = 131.0;
 8003254:	68bb      	ldr	r3, [r7, #8]
 8003256:	4a12      	ldr	r2, [pc, #72]	; (80032a0 <MPU_writeGyroFullScaleRange+0xa8>)
 8003258:	621a      	str	r2, [r3, #32]
        }
        break;
 800325a:	e00f      	b.n	800327c <MPU_writeGyroFullScaleRange+0x84>
    case GFSR_500DPS:{
        imu->gScaleFactor = 65.5;
 800325c:	68bb      	ldr	r3, [r7, #8]
 800325e:	4a11      	ldr	r2, [pc, #68]	; (80032a4 <MPU_writeGyroFullScaleRange+0xac>)
 8003260:	621a      	str	r2, [r3, #32]
        }
        break;
 8003262:	e00b      	b.n	800327c <MPU_writeGyroFullScaleRange+0x84>
    case GFSR_1000DPS:{
        imu->gScaleFactor = 32.8;
 8003264:	68bb      	ldr	r3, [r7, #8]
 8003266:	4a10      	ldr	r2, [pc, #64]	; (80032a8 <MPU_writeGyroFullScaleRange+0xb0>)
 8003268:	621a      	str	r2, [r3, #32]
        }
        break;
 800326a:	e007      	b.n	800327c <MPU_writeGyroFullScaleRange+0x84>
    case GFSR_2000DPS:{
        imu->gScaleFactor = 16.4;
 800326c:	68bb      	ldr	r3, [r7, #8]
 800326e:	4a0f      	ldr	r2, [pc, #60]	; (80032ac <MPU_writeGyroFullScaleRange+0xb4>)
 8003270:	621a      	str	r2, [r3, #32]
        }
        break;
 8003272:	e003      	b.n	800327c <MPU_writeGyroFullScaleRange+0x84>
    default:{
        imu->gScaleFactor = 65.5;
 8003274:	68bb      	ldr	r3, [r7, #8]
 8003276:	4a0b      	ldr	r2, [pc, #44]	; (80032a4 <MPU_writeGyroFullScaleRange+0xac>)
 8003278:	621a      	str	r2, [r3, #32]
        }
        break;
 800327a:	bf00      	nop
    }

    data = (gScale<<3U);
 800327c:	79fb      	ldrb	r3, [r7, #7]
 800327e:	00db      	lsls	r3, r3, #3
 8003280:	b2db      	uxtb	r3, r3
 8003282:	75fb      	strb	r3, [r7, #23]
    I2C_Write_Reg(hi2c, REG_GYRO_CONFIG, &(data), 1,100);
 8003284:	f107 0217 	add.w	r2, r7, #23
 8003288:	2364      	movs	r3, #100	; 0x64
 800328a:	9300      	str	r3, [sp, #0]
 800328c:	2301      	movs	r3, #1
 800328e:	211b      	movs	r1, #27
 8003290:	68f8      	ldr	r0, [r7, #12]
 8003292:	f7ff fd09 	bl	8002ca8 <I2C_Write_Reg>
}
 8003296:	bf00      	nop
 8003298:	3718      	adds	r7, #24
 800329a:	46bd      	mov	sp, r7
 800329c:	bd80      	pop	{r7, pc}
 800329e:	bf00      	nop
 80032a0:	43030000 	.word	0x43030000
 80032a4:	42830000 	.word	0x42830000
 80032a8:	42033333 	.word	0x42033333
 80032ac:	41833333 	.word	0x41833333

080032b0 <MPU_readRawData>:

/// @brief Read raw data from IMU.
/// @param I2Cx Pointer to I2C structure config.
void MPU_readRawData(I2CHandle_t *hi2c, IMU_t *imu)
{
 80032b0:	b580      	push	{r7, lr}
 80032b2:	b086      	sub	sp, #24
 80032b4:	af00      	add	r7, sp, #0
 80032b6:	6078      	str	r0, [r7, #4]
 80032b8:	6039      	str	r1, [r7, #0]
    // Init buffer
    uint8_t gyro_buf[6];
    uint8_t accel_buf[6];

    // read gyro raw data
    get_rawgyro(hi2c, gyro_buf);
 80032ba:	f107 0310 	add.w	r3, r7, #16
 80032be:	4619      	mov	r1, r3
 80032c0:	6878      	ldr	r0, [r7, #4]
 80032c2:	f000 f840 	bl	8003346 <get_rawgyro>

    //read accel raw data
    get_rawaccel(hi2c, accel_buf);
 80032c6:	f107 0308 	add.w	r3, r7, #8
 80032ca:	4619      	mov	r1, r3
 80032cc:	6878      	ldr	r0, [r7, #4]
 80032ce:	f000 f861 	bl	8003394 <get_rawaccel>

    // Bit shift the data
    imu->rawax = (accel_buf[0] << 8) | accel_buf[1];
 80032d2:	7a3b      	ldrb	r3, [r7, #8]
 80032d4:	021b      	lsls	r3, r3, #8
 80032d6:	b21a      	sxth	r2, r3
 80032d8:	7a7b      	ldrb	r3, [r7, #9]
 80032da:	b21b      	sxth	r3, r3
 80032dc:	4313      	orrs	r3, r2
 80032de:	b21a      	sxth	r2, r3
 80032e0:	683b      	ldr	r3, [r7, #0]
 80032e2:	805a      	strh	r2, [r3, #2]
    imu->raway = (accel_buf[2] << 8) | accel_buf[3];
 80032e4:	7abb      	ldrb	r3, [r7, #10]
 80032e6:	021b      	lsls	r3, r3, #8
 80032e8:	b21a      	sxth	r2, r3
 80032ea:	7afb      	ldrb	r3, [r7, #11]
 80032ec:	b21b      	sxth	r3, r3
 80032ee:	4313      	orrs	r3, r2
 80032f0:	b21a      	sxth	r2, r3
 80032f2:	683b      	ldr	r3, [r7, #0]
 80032f4:	809a      	strh	r2, [r3, #4]
    imu->rawaz = (accel_buf[4] << 8) | accel_buf[5];
 80032f6:	7b3b      	ldrb	r3, [r7, #12]
 80032f8:	021b      	lsls	r3, r3, #8
 80032fa:	b21a      	sxth	r2, r3
 80032fc:	7b7b      	ldrb	r3, [r7, #13]
 80032fe:	b21b      	sxth	r3, r3
 8003300:	4313      	orrs	r3, r2
 8003302:	b21a      	sxth	r2, r3
 8003304:	683b      	ldr	r3, [r7, #0]
 8003306:	80da      	strh	r2, [r3, #6]

    imu->rawgx = (gyro_buf[0] << 8) | gyro_buf[1];
 8003308:	7c3b      	ldrb	r3, [r7, #16]
 800330a:	021b      	lsls	r3, r3, #8
 800330c:	b21a      	sxth	r2, r3
 800330e:	7c7b      	ldrb	r3, [r7, #17]
 8003310:	b21b      	sxth	r3, r3
 8003312:	4313      	orrs	r3, r2
 8003314:	b21a      	sxth	r2, r3
 8003316:	683b      	ldr	r3, [r7, #0]
 8003318:	811a      	strh	r2, [r3, #8]
    imu->rawgy = (gyro_buf[2] << 8) | gyro_buf[3];
 800331a:	7cbb      	ldrb	r3, [r7, #18]
 800331c:	021b      	lsls	r3, r3, #8
 800331e:	b21a      	sxth	r2, r3
 8003320:	7cfb      	ldrb	r3, [r7, #19]
 8003322:	b21b      	sxth	r3, r3
 8003324:	4313      	orrs	r3, r2
 8003326:	b21a      	sxth	r2, r3
 8003328:	683b      	ldr	r3, [r7, #0]
 800332a:	815a      	strh	r2, [r3, #10]
    imu->rawgz = (gyro_buf[4] << 8) | gyro_buf[5];
 800332c:	7d3b      	ldrb	r3, [r7, #20]
 800332e:	021b      	lsls	r3, r3, #8
 8003330:	b21a      	sxth	r2, r3
 8003332:	7d7b      	ldrb	r3, [r7, #21]
 8003334:	b21b      	sxth	r3, r3
 8003336:	4313      	orrs	r3, r2
 8003338:	b21a      	sxth	r2, r3
 800333a:	683b      	ldr	r3, [r7, #0]
 800333c:	819a      	strh	r2, [r3, #12]
}
 800333e:	bf00      	nop
 8003340:	3718      	adds	r7, #24
 8003342:	46bd      	mov	sp, r7
 8003344:	bd80      	pop	{r7, pc}

08003346 <get_rawgyro>:

void get_rawgyro(I2CHandle_t *hi2c, uint8_t* gyro_buf){
 8003346:	b580      	push	{r7, lr}
 8003348:	b086      	sub	sp, #24
 800334a:	af02      	add	r7, sp, #8
 800334c:	6078      	str	r0, [r7, #4]
 800334e:	6039      	str	r1, [r7, #0]
    memset(gyro_buf,0,6);
 8003350:	2206      	movs	r2, #6
 8003352:	2100      	movs	r1, #0
 8003354:	6838      	ldr	r0, [r7, #0]
 8003356:	f000 f95f 	bl	8003618 <memset>
    uint8_t reg = REG_GYRO_XOUT_H;
 800335a:	2343      	movs	r3, #67	; 0x43
 800335c:	73fb      	strb	r3, [r7, #15]
    for(int index=0;index<6;index++){
 800335e:	2300      	movs	r3, #0
 8003360:	60bb      	str	r3, [r7, #8]
 8003362:	e00f      	b.n	8003384 <get_rawgyro+0x3e>
    	I2C_Read_Reg(hi2c, reg, &gyro_buf[index], 1,100);
 8003364:	68bb      	ldr	r3, [r7, #8]
 8003366:	683a      	ldr	r2, [r7, #0]
 8003368:	441a      	add	r2, r3
 800336a:	7bf9      	ldrb	r1, [r7, #15]
 800336c:	2364      	movs	r3, #100	; 0x64
 800336e:	9300      	str	r3, [sp, #0]
 8003370:	2301      	movs	r3, #1
 8003372:	6878      	ldr	r0, [r7, #4]
 8003374:	f7ff fa76 	bl	8002864 <I2C_Read_Reg>
    	reg++;
 8003378:	7bfb      	ldrb	r3, [r7, #15]
 800337a:	3301      	adds	r3, #1
 800337c:	73fb      	strb	r3, [r7, #15]
    for(int index=0;index<6;index++){
 800337e:	68bb      	ldr	r3, [r7, #8]
 8003380:	3301      	adds	r3, #1
 8003382:	60bb      	str	r3, [r7, #8]
 8003384:	68bb      	ldr	r3, [r7, #8]
 8003386:	2b05      	cmp	r3, #5
 8003388:	ddec      	ble.n	8003364 <get_rawgyro+0x1e>
    }
}
 800338a:	bf00      	nop
 800338c:	bf00      	nop
 800338e:	3710      	adds	r7, #16
 8003390:	46bd      	mov	sp, r7
 8003392:	bd80      	pop	{r7, pc}

08003394 <get_rawaccel>:

void get_rawaccel(I2CHandle_t *hi2c, uint8_t* accel_buf){
 8003394:	b580      	push	{r7, lr}
 8003396:	b086      	sub	sp, #24
 8003398:	af02      	add	r7, sp, #8
 800339a:	6078      	str	r0, [r7, #4]
 800339c:	6039      	str	r1, [r7, #0]
    memset(accel_buf,0,6);
 800339e:	2206      	movs	r2, #6
 80033a0:	2100      	movs	r1, #0
 80033a2:	6838      	ldr	r0, [r7, #0]
 80033a4:	f000 f938 	bl	8003618 <memset>
    uint8_t reg = REG_ACCEL_XOUT_H;
 80033a8:	233b      	movs	r3, #59	; 0x3b
 80033aa:	73fb      	strb	r3, [r7, #15]
    for(int index=0;index<6;index++){
 80033ac:	2300      	movs	r3, #0
 80033ae:	60bb      	str	r3, [r7, #8]
 80033b0:	e00f      	b.n	80033d2 <get_rawaccel+0x3e>
        I2C_Read_Reg(hi2c,reg , &accel_buf[index], 1,100);
 80033b2:	68bb      	ldr	r3, [r7, #8]
 80033b4:	683a      	ldr	r2, [r7, #0]
 80033b6:	441a      	add	r2, r3
 80033b8:	7bf9      	ldrb	r1, [r7, #15]
 80033ba:	2364      	movs	r3, #100	; 0x64
 80033bc:	9300      	str	r3, [sp, #0]
 80033be:	2301      	movs	r3, #1
 80033c0:	6878      	ldr	r0, [r7, #4]
 80033c2:	f7ff fa4f 	bl	8002864 <I2C_Read_Reg>
        reg++;
 80033c6:	7bfb      	ldrb	r3, [r7, #15]
 80033c8:	3301      	adds	r3, #1
 80033ca:	73fb      	strb	r3, [r7, #15]
    for(int index=0;index<6;index++){
 80033cc:	68bb      	ldr	r3, [r7, #8]
 80033ce:	3301      	adds	r3, #1
 80033d0:	60bb      	str	r3, [r7, #8]
 80033d2:	68bb      	ldr	r3, [r7, #8]
 80033d4:	2b05      	cmp	r3, #5
 80033d6:	ddec      	ble.n	80033b2 <get_rawaccel+0x1e>
    }
}
 80033d8:	bf00      	nop
 80033da:	bf00      	nop
 80033dc:	3710      	adds	r7, #16
 80033de:	46bd      	mov	sp, r7
 80033e0:	bd80      	pop	{r7, pc}

080033e2 <MPU_calibrateGyro>:

/// @brief Find offsets for each axis of gyroscope.
/// @param I2Cx Pointer to I2C structure config.
/// @param numCalPoints Number of data points to average.
void MPU_calibrateGyro(I2CHandle_t *hi2c, IMU_t *imu, uint16_t numCalPoints)
{
 80033e2:	b580      	push	{r7, lr}
 80033e4:	b088      	sub	sp, #32
 80033e6:	af00      	add	r7, sp, #0
 80033e8:	60f8      	str	r0, [r7, #12]
 80033ea:	60b9      	str	r1, [r7, #8]
 80033ec:	4613      	mov	r3, r2
 80033ee:	80fb      	strh	r3, [r7, #6]
    // Init
    int32_t x = 0;
 80033f0:	2300      	movs	r3, #0
 80033f2:	61fb      	str	r3, [r7, #28]
    int32_t y = 0;
 80033f4:	2300      	movs	r3, #0
 80033f6:	61bb      	str	r3, [r7, #24]
    int32_t z = 0;
 80033f8:	2300      	movs	r3, #0
 80033fa:	617b      	str	r3, [r7, #20]

    // Zero guard
    if (numCalPoints == 0)
 80033fc:	88fb      	ldrh	r3, [r7, #6]
 80033fe:	2b00      	cmp	r3, #0
 8003400:	d101      	bne.n	8003406 <MPU_calibrateGyro+0x24>
    {
        numCalPoints = 1;
 8003402:	2301      	movs	r3, #1
 8003404:	80fb      	strh	r3, [r7, #6]
    }

    // Save specified number of points
    for (uint16_t ii = 0; ii < numCalPoints; ii++)
 8003406:	2300      	movs	r3, #0
 8003408:	827b      	strh	r3, [r7, #18]
 800340a:	e01e      	b.n	800344a <MPU_calibrateGyro+0x68>
    {
        MPU_readRawData(hi2c, imu);
 800340c:	68b9      	ldr	r1, [r7, #8]
 800340e:	68f8      	ldr	r0, [r7, #12]
 8003410:	f7ff ff4e 	bl	80032b0 <MPU_readRawData>
        x += imu->rawgx;
 8003414:	68bb      	ldr	r3, [r7, #8]
 8003416:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800341a:	461a      	mov	r2, r3
 800341c:	69fb      	ldr	r3, [r7, #28]
 800341e:	4413      	add	r3, r2
 8003420:	61fb      	str	r3, [r7, #28]
        y += imu->rawgy;
 8003422:	68bb      	ldr	r3, [r7, #8]
 8003424:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8003428:	461a      	mov	r2, r3
 800342a:	69bb      	ldr	r3, [r7, #24]
 800342c:	4413      	add	r3, r2
 800342e:	61bb      	str	r3, [r7, #24]
        z += imu->rawgz;
 8003430:	68bb      	ldr	r3, [r7, #8]
 8003432:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 8003436:	461a      	mov	r2, r3
 8003438:	697b      	ldr	r3, [r7, #20]
 800343a:	4413      	add	r3, r2
 800343c:	617b      	str	r3, [r7, #20]
        delay_ms(3);
 800343e:	2003      	movs	r0, #3
 8003440:	f7fe fcde 	bl	8001e00 <delay_ms>
    for (uint16_t ii = 0; ii < numCalPoints; ii++)
 8003444:	8a7b      	ldrh	r3, [r7, #18]
 8003446:	3301      	adds	r3, #1
 8003448:	827b      	strh	r3, [r7, #18]
 800344a:	8a7a      	ldrh	r2, [r7, #18]
 800344c:	88fb      	ldrh	r3, [r7, #6]
 800344e:	429a      	cmp	r2, r3
 8003450:	d3dc      	bcc.n	800340c <MPU_calibrateGyro+0x2a>
    }

    // Average the saved data points to find the gyroscope offset
    imu->gx_cal = (float)x / (float)numCalPoints;
 8003452:	69fb      	ldr	r3, [r7, #28]
 8003454:	ee07 3a90 	vmov	s15, r3
 8003458:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 800345c:	88fb      	ldrh	r3, [r7, #6]
 800345e:	ee07 3a90 	vmov	s15, r3
 8003462:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8003466:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800346a:	68bb      	ldr	r3, [r7, #8]
 800346c:	edc3 7a04 	vstr	s15, [r3, #16]
    imu->gy_cal = (float)y / (float)numCalPoints;
 8003470:	69bb      	ldr	r3, [r7, #24]
 8003472:	ee07 3a90 	vmov	s15, r3
 8003476:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 800347a:	88fb      	ldrh	r3, [r7, #6]
 800347c:	ee07 3a90 	vmov	s15, r3
 8003480:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8003484:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8003488:	68bb      	ldr	r3, [r7, #8]
 800348a:	edc3 7a05 	vstr	s15, [r3, #20]
    imu->gz_cal = (float)z / (float)numCalPoints;
 800348e:	697b      	ldr	r3, [r7, #20]
 8003490:	ee07 3a90 	vmov	s15, r3
 8003494:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8003498:	88fb      	ldrh	r3, [r7, #6]
 800349a:	ee07 3a90 	vmov	s15, r3
 800349e:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80034a2:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80034a6:	68bb      	ldr	r3, [r7, #8]
 80034a8:	edc3 7a06 	vstr	s15, [r3, #24]
}
 80034ac:	bf00      	nop
 80034ae:	3720      	adds	r7, #32
 80034b0:	46bd      	mov	sp, r7
 80034b2:	bd80      	pop	{r7, pc}

080034b4 <MPU_readscaledData>:

/// @brief Calculate the real world sensor values.
/// @param I2Cx Pointer to I2C structure config.
void MPU_readscaledData(I2CHandle_t *hi2c, IMU_t *imu)
{
 80034b4:	b580      	push	{r7, lr}
 80034b6:	b082      	sub	sp, #8
 80034b8:	af00      	add	r7, sp, #0
 80034ba:	6078      	str	r0, [r7, #4]
 80034bc:	6039      	str	r1, [r7, #0]
    // Get raw values from the IMU
    MPU_readRawData(hi2c, imu);
 80034be:	6839      	ldr	r1, [r7, #0]
 80034c0:	6878      	ldr	r0, [r7, #4]
 80034c2:	f7ff fef5 	bl	80032b0 <MPU_readRawData>

    // Convert accelerometer values to g's
    imu->ax = (imu->rawax / imu->aScaleFactor);
 80034c6:	683b      	ldr	r3, [r7, #0]
 80034c8:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80034cc:	ee07 3a90 	vmov	s15, r3
 80034d0:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 80034d4:	683b      	ldr	r3, [r7, #0]
 80034d6:	ed93 7a07 	vldr	s14, [r3, #28]
 80034da:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80034de:	683b      	ldr	r3, [r7, #0]
 80034e0:	edc3 7a09 	vstr	s15, [r3, #36]	; 0x24
    imu->ay = (imu->raway / imu->aScaleFactor);
 80034e4:	683b      	ldr	r3, [r7, #0]
 80034e6:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80034ea:	ee07 3a90 	vmov	s15, r3
 80034ee:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 80034f2:	683b      	ldr	r3, [r7, #0]
 80034f4:	ed93 7a07 	vldr	s14, [r3, #28]
 80034f8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80034fc:	683b      	ldr	r3, [r7, #0]
 80034fe:	edc3 7a0a 	vstr	s15, [r3, #40]	; 0x28
    imu->az = (imu->rawaz / imu->aScaleFactor);
 8003502:	683b      	ldr	r3, [r7, #0]
 8003504:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8003508:	ee07 3a90 	vmov	s15, r3
 800350c:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8003510:	683b      	ldr	r3, [r7, #0]
 8003512:	ed93 7a07 	vldr	s14, [r3, #28]
 8003516:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800351a:	683b      	ldr	r3, [r7, #0]
 800351c:	edc3 7a0b 	vstr	s15, [r3, #44]	; 0x2c

    // Compensate for gyro offset
    imu->gx = (imu->rawgx - imu->gx_cal);
 8003520:	683b      	ldr	r3, [r7, #0]
 8003522:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8003526:	ee07 3a90 	vmov	s15, r3
 800352a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800352e:	683b      	ldr	r3, [r7, #0]
 8003530:	edd3 7a04 	vldr	s15, [r3, #16]
 8003534:	ee77 7a67 	vsub.f32	s15, s14, s15
 8003538:	683b      	ldr	r3, [r7, #0]
 800353a:	edc3 7a0c 	vstr	s15, [r3, #48]	; 0x30
    imu->gy = (imu->rawgy - imu->gy_cal);
 800353e:	683b      	ldr	r3, [r7, #0]
 8003540:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8003544:	ee07 3a90 	vmov	s15, r3
 8003548:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800354c:	683b      	ldr	r3, [r7, #0]
 800354e:	edd3 7a05 	vldr	s15, [r3, #20]
 8003552:	ee77 7a67 	vsub.f32	s15, s14, s15
 8003556:	683b      	ldr	r3, [r7, #0]
 8003558:	edc3 7a0d 	vstr	s15, [r3, #52]	; 0x34
    imu->gz = (imu->rawgz - imu->gz_cal);
 800355c:	683b      	ldr	r3, [r7, #0]
 800355e:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 8003562:	ee07 3a90 	vmov	s15, r3
 8003566:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800356a:	683b      	ldr	r3, [r7, #0]
 800356c:	edd3 7a06 	vldr	s15, [r3, #24]
 8003570:	ee77 7a67 	vsub.f32	s15, s14, s15
 8003574:	683b      	ldr	r3, [r7, #0]
 8003576:	edc3 7a0e 	vstr	s15, [r3, #56]	; 0x38

    // Convert gyro values to deg/s
    imu->gx /= imu->gScaleFactor;
 800357a:	683b      	ldr	r3, [r7, #0]
 800357c:	edd3 6a0c 	vldr	s13, [r3, #48]	; 0x30
 8003580:	683b      	ldr	r3, [r7, #0]
 8003582:	ed93 7a08 	vldr	s14, [r3, #32]
 8003586:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800358a:	683b      	ldr	r3, [r7, #0]
 800358c:	edc3 7a0c 	vstr	s15, [r3, #48]	; 0x30
    imu->gy /= imu->gScaleFactor;
 8003590:	683b      	ldr	r3, [r7, #0]
 8003592:	edd3 6a0d 	vldr	s13, [r3, #52]	; 0x34
 8003596:	683b      	ldr	r3, [r7, #0]
 8003598:	ed93 7a08 	vldr	s14, [r3, #32]
 800359c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80035a0:	683b      	ldr	r3, [r7, #0]
 80035a2:	edc3 7a0d 	vstr	s15, [r3, #52]	; 0x34
    imu->gz /= imu->gScaleFactor;
 80035a6:	683b      	ldr	r3, [r7, #0]
 80035a8:	edd3 6a0e 	vldr	s13, [r3, #56]	; 0x38
 80035ac:	683b      	ldr	r3, [r7, #0]
 80035ae:	ed93 7a08 	vldr	s14, [r3, #32]
 80035b2:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80035b6:	683b      	ldr	r3, [r7, #0]
 80035b8:	edc3 7a0e 	vstr	s15, [r3, #56]	; 0x38
}
 80035bc:	bf00      	nop
 80035be:	3708      	adds	r7, #8
 80035c0:	46bd      	mov	sp, r7
 80035c2:	bd80      	pop	{r7, pc}

080035c4 <__errno>:
 80035c4:	4b01      	ldr	r3, [pc, #4]	; (80035cc <__errno+0x8>)
 80035c6:	6818      	ldr	r0, [r3, #0]
 80035c8:	4770      	bx	lr
 80035ca:	bf00      	nop
 80035cc:	20000000 	.word	0x20000000

080035d0 <__libc_init_array>:
 80035d0:	b570      	push	{r4, r5, r6, lr}
 80035d2:	4d0d      	ldr	r5, [pc, #52]	; (8003608 <__libc_init_array+0x38>)
 80035d4:	4c0d      	ldr	r4, [pc, #52]	; (800360c <__libc_init_array+0x3c>)
 80035d6:	1b64      	subs	r4, r4, r5
 80035d8:	10a4      	asrs	r4, r4, #2
 80035da:	2600      	movs	r6, #0
 80035dc:	42a6      	cmp	r6, r4
 80035de:	d109      	bne.n	80035f4 <__libc_init_array+0x24>
 80035e0:	4d0b      	ldr	r5, [pc, #44]	; (8003610 <__libc_init_array+0x40>)
 80035e2:	4c0c      	ldr	r4, [pc, #48]	; (8003614 <__libc_init_array+0x44>)
 80035e4:	f004 ff0a 	bl	80083fc <_init>
 80035e8:	1b64      	subs	r4, r4, r5
 80035ea:	10a4      	asrs	r4, r4, #2
 80035ec:	2600      	movs	r6, #0
 80035ee:	42a6      	cmp	r6, r4
 80035f0:	d105      	bne.n	80035fe <__libc_init_array+0x2e>
 80035f2:	bd70      	pop	{r4, r5, r6, pc}
 80035f4:	f855 3b04 	ldr.w	r3, [r5], #4
 80035f8:	4798      	blx	r3
 80035fa:	3601      	adds	r6, #1
 80035fc:	e7ee      	b.n	80035dc <__libc_init_array+0xc>
 80035fe:	f855 3b04 	ldr.w	r3, [r5], #4
 8003602:	4798      	blx	r3
 8003604:	3601      	adds	r6, #1
 8003606:	e7f2      	b.n	80035ee <__libc_init_array+0x1e>
 8003608:	08008958 	.word	0x08008958
 800360c:	08008958 	.word	0x08008958
 8003610:	08008958 	.word	0x08008958
 8003614:	0800895c 	.word	0x0800895c

08003618 <memset>:
 8003618:	4402      	add	r2, r0
 800361a:	4603      	mov	r3, r0
 800361c:	4293      	cmp	r3, r2
 800361e:	d100      	bne.n	8003622 <memset+0xa>
 8003620:	4770      	bx	lr
 8003622:	f803 1b01 	strb.w	r1, [r3], #1
 8003626:	e7f9      	b.n	800361c <memset+0x4>

08003628 <__cvt>:
 8003628:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800362c:	ec55 4b10 	vmov	r4, r5, d0
 8003630:	2d00      	cmp	r5, #0
 8003632:	460e      	mov	r6, r1
 8003634:	4619      	mov	r1, r3
 8003636:	462b      	mov	r3, r5
 8003638:	bfbb      	ittet	lt
 800363a:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 800363e:	461d      	movlt	r5, r3
 8003640:	2300      	movge	r3, #0
 8003642:	232d      	movlt	r3, #45	; 0x2d
 8003644:	700b      	strb	r3, [r1, #0]
 8003646:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003648:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800364c:	4691      	mov	r9, r2
 800364e:	f023 0820 	bic.w	r8, r3, #32
 8003652:	bfbc      	itt	lt
 8003654:	4622      	movlt	r2, r4
 8003656:	4614      	movlt	r4, r2
 8003658:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800365c:	d005      	beq.n	800366a <__cvt+0x42>
 800365e:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8003662:	d100      	bne.n	8003666 <__cvt+0x3e>
 8003664:	3601      	adds	r6, #1
 8003666:	2102      	movs	r1, #2
 8003668:	e000      	b.n	800366c <__cvt+0x44>
 800366a:	2103      	movs	r1, #3
 800366c:	ab03      	add	r3, sp, #12
 800366e:	9301      	str	r3, [sp, #4]
 8003670:	ab02      	add	r3, sp, #8
 8003672:	9300      	str	r3, [sp, #0]
 8003674:	ec45 4b10 	vmov	d0, r4, r5
 8003678:	4653      	mov	r3, sl
 800367a:	4632      	mov	r2, r6
 800367c:	f001 fdac 	bl	80051d8 <_dtoa_r>
 8003680:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8003684:	4607      	mov	r7, r0
 8003686:	d102      	bne.n	800368e <__cvt+0x66>
 8003688:	f019 0f01 	tst.w	r9, #1
 800368c:	d022      	beq.n	80036d4 <__cvt+0xac>
 800368e:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8003692:	eb07 0906 	add.w	r9, r7, r6
 8003696:	d110      	bne.n	80036ba <__cvt+0x92>
 8003698:	783b      	ldrb	r3, [r7, #0]
 800369a:	2b30      	cmp	r3, #48	; 0x30
 800369c:	d10a      	bne.n	80036b4 <__cvt+0x8c>
 800369e:	2200      	movs	r2, #0
 80036a0:	2300      	movs	r3, #0
 80036a2:	4620      	mov	r0, r4
 80036a4:	4629      	mov	r1, r5
 80036a6:	f7fd fa2f 	bl	8000b08 <__aeabi_dcmpeq>
 80036aa:	b918      	cbnz	r0, 80036b4 <__cvt+0x8c>
 80036ac:	f1c6 0601 	rsb	r6, r6, #1
 80036b0:	f8ca 6000 	str.w	r6, [sl]
 80036b4:	f8da 3000 	ldr.w	r3, [sl]
 80036b8:	4499      	add	r9, r3
 80036ba:	2200      	movs	r2, #0
 80036bc:	2300      	movs	r3, #0
 80036be:	4620      	mov	r0, r4
 80036c0:	4629      	mov	r1, r5
 80036c2:	f7fd fa21 	bl	8000b08 <__aeabi_dcmpeq>
 80036c6:	b108      	cbz	r0, 80036cc <__cvt+0xa4>
 80036c8:	f8cd 900c 	str.w	r9, [sp, #12]
 80036cc:	2230      	movs	r2, #48	; 0x30
 80036ce:	9b03      	ldr	r3, [sp, #12]
 80036d0:	454b      	cmp	r3, r9
 80036d2:	d307      	bcc.n	80036e4 <__cvt+0xbc>
 80036d4:	9b03      	ldr	r3, [sp, #12]
 80036d6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80036d8:	1bdb      	subs	r3, r3, r7
 80036da:	4638      	mov	r0, r7
 80036dc:	6013      	str	r3, [r2, #0]
 80036de:	b004      	add	sp, #16
 80036e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80036e4:	1c59      	adds	r1, r3, #1
 80036e6:	9103      	str	r1, [sp, #12]
 80036e8:	701a      	strb	r2, [r3, #0]
 80036ea:	e7f0      	b.n	80036ce <__cvt+0xa6>

080036ec <__exponent>:
 80036ec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80036ee:	4603      	mov	r3, r0
 80036f0:	2900      	cmp	r1, #0
 80036f2:	bfb8      	it	lt
 80036f4:	4249      	neglt	r1, r1
 80036f6:	f803 2b02 	strb.w	r2, [r3], #2
 80036fa:	bfb4      	ite	lt
 80036fc:	222d      	movlt	r2, #45	; 0x2d
 80036fe:	222b      	movge	r2, #43	; 0x2b
 8003700:	2909      	cmp	r1, #9
 8003702:	7042      	strb	r2, [r0, #1]
 8003704:	dd2a      	ble.n	800375c <__exponent+0x70>
 8003706:	f10d 0407 	add.w	r4, sp, #7
 800370a:	46a4      	mov	ip, r4
 800370c:	270a      	movs	r7, #10
 800370e:	46a6      	mov	lr, r4
 8003710:	460a      	mov	r2, r1
 8003712:	fb91 f6f7 	sdiv	r6, r1, r7
 8003716:	fb07 1516 	mls	r5, r7, r6, r1
 800371a:	3530      	adds	r5, #48	; 0x30
 800371c:	2a63      	cmp	r2, #99	; 0x63
 800371e:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
 8003722:	f80e 5c01 	strb.w	r5, [lr, #-1]
 8003726:	4631      	mov	r1, r6
 8003728:	dcf1      	bgt.n	800370e <__exponent+0x22>
 800372a:	3130      	adds	r1, #48	; 0x30
 800372c:	f1ae 0502 	sub.w	r5, lr, #2
 8003730:	f804 1c01 	strb.w	r1, [r4, #-1]
 8003734:	1c44      	adds	r4, r0, #1
 8003736:	4629      	mov	r1, r5
 8003738:	4561      	cmp	r1, ip
 800373a:	d30a      	bcc.n	8003752 <__exponent+0x66>
 800373c:	f10d 0209 	add.w	r2, sp, #9
 8003740:	eba2 020e 	sub.w	r2, r2, lr
 8003744:	4565      	cmp	r5, ip
 8003746:	bf88      	it	hi
 8003748:	2200      	movhi	r2, #0
 800374a:	4413      	add	r3, r2
 800374c:	1a18      	subs	r0, r3, r0
 800374e:	b003      	add	sp, #12
 8003750:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003752:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003756:	f804 2f01 	strb.w	r2, [r4, #1]!
 800375a:	e7ed      	b.n	8003738 <__exponent+0x4c>
 800375c:	2330      	movs	r3, #48	; 0x30
 800375e:	3130      	adds	r1, #48	; 0x30
 8003760:	7083      	strb	r3, [r0, #2]
 8003762:	70c1      	strb	r1, [r0, #3]
 8003764:	1d03      	adds	r3, r0, #4
 8003766:	e7f1      	b.n	800374c <__exponent+0x60>

08003768 <_printf_float>:
 8003768:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800376c:	ed2d 8b02 	vpush	{d8}
 8003770:	b08d      	sub	sp, #52	; 0x34
 8003772:	460c      	mov	r4, r1
 8003774:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8003778:	4616      	mov	r6, r2
 800377a:	461f      	mov	r7, r3
 800377c:	4605      	mov	r5, r0
 800377e:	f002 fe89 	bl	8006494 <_localeconv_r>
 8003782:	f8d0 a000 	ldr.w	sl, [r0]
 8003786:	4650      	mov	r0, sl
 8003788:	f7fc fd42 	bl	8000210 <strlen>
 800378c:	2300      	movs	r3, #0
 800378e:	930a      	str	r3, [sp, #40]	; 0x28
 8003790:	6823      	ldr	r3, [r4, #0]
 8003792:	9305      	str	r3, [sp, #20]
 8003794:	f8d8 3000 	ldr.w	r3, [r8]
 8003798:	f894 b018 	ldrb.w	fp, [r4, #24]
 800379c:	3307      	adds	r3, #7
 800379e:	f023 0307 	bic.w	r3, r3, #7
 80037a2:	f103 0208 	add.w	r2, r3, #8
 80037a6:	f8c8 2000 	str.w	r2, [r8]
 80037aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80037ae:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 80037b2:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 80037b6:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 80037ba:	9307      	str	r3, [sp, #28]
 80037bc:	f8cd 8018 	str.w	r8, [sp, #24]
 80037c0:	ee08 0a10 	vmov	s16, r0
 80037c4:	4b9f      	ldr	r3, [pc, #636]	; (8003a44 <_printf_float+0x2dc>)
 80037c6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80037ca:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80037ce:	f7fd f9cd 	bl	8000b6c <__aeabi_dcmpun>
 80037d2:	bb88      	cbnz	r0, 8003838 <_printf_float+0xd0>
 80037d4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80037d8:	4b9a      	ldr	r3, [pc, #616]	; (8003a44 <_printf_float+0x2dc>)
 80037da:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80037de:	f7fd f9a7 	bl	8000b30 <__aeabi_dcmple>
 80037e2:	bb48      	cbnz	r0, 8003838 <_printf_float+0xd0>
 80037e4:	2200      	movs	r2, #0
 80037e6:	2300      	movs	r3, #0
 80037e8:	4640      	mov	r0, r8
 80037ea:	4649      	mov	r1, r9
 80037ec:	f7fd f996 	bl	8000b1c <__aeabi_dcmplt>
 80037f0:	b110      	cbz	r0, 80037f8 <_printf_float+0x90>
 80037f2:	232d      	movs	r3, #45	; 0x2d
 80037f4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80037f8:	4b93      	ldr	r3, [pc, #588]	; (8003a48 <_printf_float+0x2e0>)
 80037fa:	4894      	ldr	r0, [pc, #592]	; (8003a4c <_printf_float+0x2e4>)
 80037fc:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 8003800:	bf94      	ite	ls
 8003802:	4698      	movls	r8, r3
 8003804:	4680      	movhi	r8, r0
 8003806:	2303      	movs	r3, #3
 8003808:	6123      	str	r3, [r4, #16]
 800380a:	9b05      	ldr	r3, [sp, #20]
 800380c:	f023 0204 	bic.w	r2, r3, #4
 8003810:	6022      	str	r2, [r4, #0]
 8003812:	f04f 0900 	mov.w	r9, #0
 8003816:	9700      	str	r7, [sp, #0]
 8003818:	4633      	mov	r3, r6
 800381a:	aa0b      	add	r2, sp, #44	; 0x2c
 800381c:	4621      	mov	r1, r4
 800381e:	4628      	mov	r0, r5
 8003820:	f000 f9d8 	bl	8003bd4 <_printf_common>
 8003824:	3001      	adds	r0, #1
 8003826:	f040 8090 	bne.w	800394a <_printf_float+0x1e2>
 800382a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800382e:	b00d      	add	sp, #52	; 0x34
 8003830:	ecbd 8b02 	vpop	{d8}
 8003834:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003838:	4642      	mov	r2, r8
 800383a:	464b      	mov	r3, r9
 800383c:	4640      	mov	r0, r8
 800383e:	4649      	mov	r1, r9
 8003840:	f7fd f994 	bl	8000b6c <__aeabi_dcmpun>
 8003844:	b140      	cbz	r0, 8003858 <_printf_float+0xf0>
 8003846:	464b      	mov	r3, r9
 8003848:	2b00      	cmp	r3, #0
 800384a:	bfbc      	itt	lt
 800384c:	232d      	movlt	r3, #45	; 0x2d
 800384e:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8003852:	487f      	ldr	r0, [pc, #508]	; (8003a50 <_printf_float+0x2e8>)
 8003854:	4b7f      	ldr	r3, [pc, #508]	; (8003a54 <_printf_float+0x2ec>)
 8003856:	e7d1      	b.n	80037fc <_printf_float+0x94>
 8003858:	6863      	ldr	r3, [r4, #4]
 800385a:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 800385e:	9206      	str	r2, [sp, #24]
 8003860:	1c5a      	adds	r2, r3, #1
 8003862:	d13f      	bne.n	80038e4 <_printf_float+0x17c>
 8003864:	2306      	movs	r3, #6
 8003866:	6063      	str	r3, [r4, #4]
 8003868:	9b05      	ldr	r3, [sp, #20]
 800386a:	6861      	ldr	r1, [r4, #4]
 800386c:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8003870:	2300      	movs	r3, #0
 8003872:	9303      	str	r3, [sp, #12]
 8003874:	ab0a      	add	r3, sp, #40	; 0x28
 8003876:	e9cd b301 	strd	fp, r3, [sp, #4]
 800387a:	ab09      	add	r3, sp, #36	; 0x24
 800387c:	ec49 8b10 	vmov	d0, r8, r9
 8003880:	9300      	str	r3, [sp, #0]
 8003882:	6022      	str	r2, [r4, #0]
 8003884:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8003888:	4628      	mov	r0, r5
 800388a:	f7ff fecd 	bl	8003628 <__cvt>
 800388e:	9b06      	ldr	r3, [sp, #24]
 8003890:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003892:	2b47      	cmp	r3, #71	; 0x47
 8003894:	4680      	mov	r8, r0
 8003896:	d108      	bne.n	80038aa <_printf_float+0x142>
 8003898:	1cc8      	adds	r0, r1, #3
 800389a:	db02      	blt.n	80038a2 <_printf_float+0x13a>
 800389c:	6863      	ldr	r3, [r4, #4]
 800389e:	4299      	cmp	r1, r3
 80038a0:	dd41      	ble.n	8003926 <_printf_float+0x1be>
 80038a2:	f1ab 0b02 	sub.w	fp, fp, #2
 80038a6:	fa5f fb8b 	uxtb.w	fp, fp
 80038aa:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 80038ae:	d820      	bhi.n	80038f2 <_printf_float+0x18a>
 80038b0:	3901      	subs	r1, #1
 80038b2:	465a      	mov	r2, fp
 80038b4:	f104 0050 	add.w	r0, r4, #80	; 0x50
 80038b8:	9109      	str	r1, [sp, #36]	; 0x24
 80038ba:	f7ff ff17 	bl	80036ec <__exponent>
 80038be:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80038c0:	1813      	adds	r3, r2, r0
 80038c2:	2a01      	cmp	r2, #1
 80038c4:	4681      	mov	r9, r0
 80038c6:	6123      	str	r3, [r4, #16]
 80038c8:	dc02      	bgt.n	80038d0 <_printf_float+0x168>
 80038ca:	6822      	ldr	r2, [r4, #0]
 80038cc:	07d2      	lsls	r2, r2, #31
 80038ce:	d501      	bpl.n	80038d4 <_printf_float+0x16c>
 80038d0:	3301      	adds	r3, #1
 80038d2:	6123      	str	r3, [r4, #16]
 80038d4:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 80038d8:	2b00      	cmp	r3, #0
 80038da:	d09c      	beq.n	8003816 <_printf_float+0xae>
 80038dc:	232d      	movs	r3, #45	; 0x2d
 80038de:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80038e2:	e798      	b.n	8003816 <_printf_float+0xae>
 80038e4:	9a06      	ldr	r2, [sp, #24]
 80038e6:	2a47      	cmp	r2, #71	; 0x47
 80038e8:	d1be      	bne.n	8003868 <_printf_float+0x100>
 80038ea:	2b00      	cmp	r3, #0
 80038ec:	d1bc      	bne.n	8003868 <_printf_float+0x100>
 80038ee:	2301      	movs	r3, #1
 80038f0:	e7b9      	b.n	8003866 <_printf_float+0xfe>
 80038f2:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 80038f6:	d118      	bne.n	800392a <_printf_float+0x1c2>
 80038f8:	2900      	cmp	r1, #0
 80038fa:	6863      	ldr	r3, [r4, #4]
 80038fc:	dd0b      	ble.n	8003916 <_printf_float+0x1ae>
 80038fe:	6121      	str	r1, [r4, #16]
 8003900:	b913      	cbnz	r3, 8003908 <_printf_float+0x1a0>
 8003902:	6822      	ldr	r2, [r4, #0]
 8003904:	07d0      	lsls	r0, r2, #31
 8003906:	d502      	bpl.n	800390e <_printf_float+0x1a6>
 8003908:	3301      	adds	r3, #1
 800390a:	440b      	add	r3, r1
 800390c:	6123      	str	r3, [r4, #16]
 800390e:	65a1      	str	r1, [r4, #88]	; 0x58
 8003910:	f04f 0900 	mov.w	r9, #0
 8003914:	e7de      	b.n	80038d4 <_printf_float+0x16c>
 8003916:	b913      	cbnz	r3, 800391e <_printf_float+0x1b6>
 8003918:	6822      	ldr	r2, [r4, #0]
 800391a:	07d2      	lsls	r2, r2, #31
 800391c:	d501      	bpl.n	8003922 <_printf_float+0x1ba>
 800391e:	3302      	adds	r3, #2
 8003920:	e7f4      	b.n	800390c <_printf_float+0x1a4>
 8003922:	2301      	movs	r3, #1
 8003924:	e7f2      	b.n	800390c <_printf_float+0x1a4>
 8003926:	f04f 0b67 	mov.w	fp, #103	; 0x67
 800392a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800392c:	4299      	cmp	r1, r3
 800392e:	db05      	blt.n	800393c <_printf_float+0x1d4>
 8003930:	6823      	ldr	r3, [r4, #0]
 8003932:	6121      	str	r1, [r4, #16]
 8003934:	07d8      	lsls	r0, r3, #31
 8003936:	d5ea      	bpl.n	800390e <_printf_float+0x1a6>
 8003938:	1c4b      	adds	r3, r1, #1
 800393a:	e7e7      	b.n	800390c <_printf_float+0x1a4>
 800393c:	2900      	cmp	r1, #0
 800393e:	bfd4      	ite	le
 8003940:	f1c1 0202 	rsble	r2, r1, #2
 8003944:	2201      	movgt	r2, #1
 8003946:	4413      	add	r3, r2
 8003948:	e7e0      	b.n	800390c <_printf_float+0x1a4>
 800394a:	6823      	ldr	r3, [r4, #0]
 800394c:	055a      	lsls	r2, r3, #21
 800394e:	d407      	bmi.n	8003960 <_printf_float+0x1f8>
 8003950:	6923      	ldr	r3, [r4, #16]
 8003952:	4642      	mov	r2, r8
 8003954:	4631      	mov	r1, r6
 8003956:	4628      	mov	r0, r5
 8003958:	47b8      	blx	r7
 800395a:	3001      	adds	r0, #1
 800395c:	d12c      	bne.n	80039b8 <_printf_float+0x250>
 800395e:	e764      	b.n	800382a <_printf_float+0xc2>
 8003960:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8003964:	f240 80e0 	bls.w	8003b28 <_printf_float+0x3c0>
 8003968:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800396c:	2200      	movs	r2, #0
 800396e:	2300      	movs	r3, #0
 8003970:	f7fd f8ca 	bl	8000b08 <__aeabi_dcmpeq>
 8003974:	2800      	cmp	r0, #0
 8003976:	d034      	beq.n	80039e2 <_printf_float+0x27a>
 8003978:	4a37      	ldr	r2, [pc, #220]	; (8003a58 <_printf_float+0x2f0>)
 800397a:	2301      	movs	r3, #1
 800397c:	4631      	mov	r1, r6
 800397e:	4628      	mov	r0, r5
 8003980:	47b8      	blx	r7
 8003982:	3001      	adds	r0, #1
 8003984:	f43f af51 	beq.w	800382a <_printf_float+0xc2>
 8003988:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800398c:	429a      	cmp	r2, r3
 800398e:	db02      	blt.n	8003996 <_printf_float+0x22e>
 8003990:	6823      	ldr	r3, [r4, #0]
 8003992:	07d8      	lsls	r0, r3, #31
 8003994:	d510      	bpl.n	80039b8 <_printf_float+0x250>
 8003996:	ee18 3a10 	vmov	r3, s16
 800399a:	4652      	mov	r2, sl
 800399c:	4631      	mov	r1, r6
 800399e:	4628      	mov	r0, r5
 80039a0:	47b8      	blx	r7
 80039a2:	3001      	adds	r0, #1
 80039a4:	f43f af41 	beq.w	800382a <_printf_float+0xc2>
 80039a8:	f04f 0800 	mov.w	r8, #0
 80039ac:	f104 091a 	add.w	r9, r4, #26
 80039b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80039b2:	3b01      	subs	r3, #1
 80039b4:	4543      	cmp	r3, r8
 80039b6:	dc09      	bgt.n	80039cc <_printf_float+0x264>
 80039b8:	6823      	ldr	r3, [r4, #0]
 80039ba:	079b      	lsls	r3, r3, #30
 80039bc:	f100 8105 	bmi.w	8003bca <_printf_float+0x462>
 80039c0:	68e0      	ldr	r0, [r4, #12]
 80039c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80039c4:	4298      	cmp	r0, r3
 80039c6:	bfb8      	it	lt
 80039c8:	4618      	movlt	r0, r3
 80039ca:	e730      	b.n	800382e <_printf_float+0xc6>
 80039cc:	2301      	movs	r3, #1
 80039ce:	464a      	mov	r2, r9
 80039d0:	4631      	mov	r1, r6
 80039d2:	4628      	mov	r0, r5
 80039d4:	47b8      	blx	r7
 80039d6:	3001      	adds	r0, #1
 80039d8:	f43f af27 	beq.w	800382a <_printf_float+0xc2>
 80039dc:	f108 0801 	add.w	r8, r8, #1
 80039e0:	e7e6      	b.n	80039b0 <_printf_float+0x248>
 80039e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80039e4:	2b00      	cmp	r3, #0
 80039e6:	dc39      	bgt.n	8003a5c <_printf_float+0x2f4>
 80039e8:	4a1b      	ldr	r2, [pc, #108]	; (8003a58 <_printf_float+0x2f0>)
 80039ea:	2301      	movs	r3, #1
 80039ec:	4631      	mov	r1, r6
 80039ee:	4628      	mov	r0, r5
 80039f0:	47b8      	blx	r7
 80039f2:	3001      	adds	r0, #1
 80039f4:	f43f af19 	beq.w	800382a <_printf_float+0xc2>
 80039f8:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80039fc:	4313      	orrs	r3, r2
 80039fe:	d102      	bne.n	8003a06 <_printf_float+0x29e>
 8003a00:	6823      	ldr	r3, [r4, #0]
 8003a02:	07d9      	lsls	r1, r3, #31
 8003a04:	d5d8      	bpl.n	80039b8 <_printf_float+0x250>
 8003a06:	ee18 3a10 	vmov	r3, s16
 8003a0a:	4652      	mov	r2, sl
 8003a0c:	4631      	mov	r1, r6
 8003a0e:	4628      	mov	r0, r5
 8003a10:	47b8      	blx	r7
 8003a12:	3001      	adds	r0, #1
 8003a14:	f43f af09 	beq.w	800382a <_printf_float+0xc2>
 8003a18:	f04f 0900 	mov.w	r9, #0
 8003a1c:	f104 0a1a 	add.w	sl, r4, #26
 8003a20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003a22:	425b      	negs	r3, r3
 8003a24:	454b      	cmp	r3, r9
 8003a26:	dc01      	bgt.n	8003a2c <_printf_float+0x2c4>
 8003a28:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003a2a:	e792      	b.n	8003952 <_printf_float+0x1ea>
 8003a2c:	2301      	movs	r3, #1
 8003a2e:	4652      	mov	r2, sl
 8003a30:	4631      	mov	r1, r6
 8003a32:	4628      	mov	r0, r5
 8003a34:	47b8      	blx	r7
 8003a36:	3001      	adds	r0, #1
 8003a38:	f43f aef7 	beq.w	800382a <_printf_float+0xc2>
 8003a3c:	f109 0901 	add.w	r9, r9, #1
 8003a40:	e7ee      	b.n	8003a20 <_printf_float+0x2b8>
 8003a42:	bf00      	nop
 8003a44:	7fefffff 	.word	0x7fefffff
 8003a48:	0800843c 	.word	0x0800843c
 8003a4c:	08008440 	.word	0x08008440
 8003a50:	08008448 	.word	0x08008448
 8003a54:	08008444 	.word	0x08008444
 8003a58:	0800844c 	.word	0x0800844c
 8003a5c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8003a5e:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8003a60:	429a      	cmp	r2, r3
 8003a62:	bfa8      	it	ge
 8003a64:	461a      	movge	r2, r3
 8003a66:	2a00      	cmp	r2, #0
 8003a68:	4691      	mov	r9, r2
 8003a6a:	dc37      	bgt.n	8003adc <_printf_float+0x374>
 8003a6c:	f04f 0b00 	mov.w	fp, #0
 8003a70:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8003a74:	f104 021a 	add.w	r2, r4, #26
 8003a78:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8003a7a:	9305      	str	r3, [sp, #20]
 8003a7c:	eba3 0309 	sub.w	r3, r3, r9
 8003a80:	455b      	cmp	r3, fp
 8003a82:	dc33      	bgt.n	8003aec <_printf_float+0x384>
 8003a84:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8003a88:	429a      	cmp	r2, r3
 8003a8a:	db3b      	blt.n	8003b04 <_printf_float+0x39c>
 8003a8c:	6823      	ldr	r3, [r4, #0]
 8003a8e:	07da      	lsls	r2, r3, #31
 8003a90:	d438      	bmi.n	8003b04 <_printf_float+0x39c>
 8003a92:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003a94:	9a05      	ldr	r2, [sp, #20]
 8003a96:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003a98:	1a9a      	subs	r2, r3, r2
 8003a9a:	eba3 0901 	sub.w	r9, r3, r1
 8003a9e:	4591      	cmp	r9, r2
 8003aa0:	bfa8      	it	ge
 8003aa2:	4691      	movge	r9, r2
 8003aa4:	f1b9 0f00 	cmp.w	r9, #0
 8003aa8:	dc35      	bgt.n	8003b16 <_printf_float+0x3ae>
 8003aaa:	f04f 0800 	mov.w	r8, #0
 8003aae:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8003ab2:	f104 0a1a 	add.w	sl, r4, #26
 8003ab6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8003aba:	1a9b      	subs	r3, r3, r2
 8003abc:	eba3 0309 	sub.w	r3, r3, r9
 8003ac0:	4543      	cmp	r3, r8
 8003ac2:	f77f af79 	ble.w	80039b8 <_printf_float+0x250>
 8003ac6:	2301      	movs	r3, #1
 8003ac8:	4652      	mov	r2, sl
 8003aca:	4631      	mov	r1, r6
 8003acc:	4628      	mov	r0, r5
 8003ace:	47b8      	blx	r7
 8003ad0:	3001      	adds	r0, #1
 8003ad2:	f43f aeaa 	beq.w	800382a <_printf_float+0xc2>
 8003ad6:	f108 0801 	add.w	r8, r8, #1
 8003ada:	e7ec      	b.n	8003ab6 <_printf_float+0x34e>
 8003adc:	4613      	mov	r3, r2
 8003ade:	4631      	mov	r1, r6
 8003ae0:	4642      	mov	r2, r8
 8003ae2:	4628      	mov	r0, r5
 8003ae4:	47b8      	blx	r7
 8003ae6:	3001      	adds	r0, #1
 8003ae8:	d1c0      	bne.n	8003a6c <_printf_float+0x304>
 8003aea:	e69e      	b.n	800382a <_printf_float+0xc2>
 8003aec:	2301      	movs	r3, #1
 8003aee:	4631      	mov	r1, r6
 8003af0:	4628      	mov	r0, r5
 8003af2:	9205      	str	r2, [sp, #20]
 8003af4:	47b8      	blx	r7
 8003af6:	3001      	adds	r0, #1
 8003af8:	f43f ae97 	beq.w	800382a <_printf_float+0xc2>
 8003afc:	9a05      	ldr	r2, [sp, #20]
 8003afe:	f10b 0b01 	add.w	fp, fp, #1
 8003b02:	e7b9      	b.n	8003a78 <_printf_float+0x310>
 8003b04:	ee18 3a10 	vmov	r3, s16
 8003b08:	4652      	mov	r2, sl
 8003b0a:	4631      	mov	r1, r6
 8003b0c:	4628      	mov	r0, r5
 8003b0e:	47b8      	blx	r7
 8003b10:	3001      	adds	r0, #1
 8003b12:	d1be      	bne.n	8003a92 <_printf_float+0x32a>
 8003b14:	e689      	b.n	800382a <_printf_float+0xc2>
 8003b16:	9a05      	ldr	r2, [sp, #20]
 8003b18:	464b      	mov	r3, r9
 8003b1a:	4442      	add	r2, r8
 8003b1c:	4631      	mov	r1, r6
 8003b1e:	4628      	mov	r0, r5
 8003b20:	47b8      	blx	r7
 8003b22:	3001      	adds	r0, #1
 8003b24:	d1c1      	bne.n	8003aaa <_printf_float+0x342>
 8003b26:	e680      	b.n	800382a <_printf_float+0xc2>
 8003b28:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8003b2a:	2a01      	cmp	r2, #1
 8003b2c:	dc01      	bgt.n	8003b32 <_printf_float+0x3ca>
 8003b2e:	07db      	lsls	r3, r3, #31
 8003b30:	d538      	bpl.n	8003ba4 <_printf_float+0x43c>
 8003b32:	2301      	movs	r3, #1
 8003b34:	4642      	mov	r2, r8
 8003b36:	4631      	mov	r1, r6
 8003b38:	4628      	mov	r0, r5
 8003b3a:	47b8      	blx	r7
 8003b3c:	3001      	adds	r0, #1
 8003b3e:	f43f ae74 	beq.w	800382a <_printf_float+0xc2>
 8003b42:	ee18 3a10 	vmov	r3, s16
 8003b46:	4652      	mov	r2, sl
 8003b48:	4631      	mov	r1, r6
 8003b4a:	4628      	mov	r0, r5
 8003b4c:	47b8      	blx	r7
 8003b4e:	3001      	adds	r0, #1
 8003b50:	f43f ae6b 	beq.w	800382a <_printf_float+0xc2>
 8003b54:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8003b58:	2200      	movs	r2, #0
 8003b5a:	2300      	movs	r3, #0
 8003b5c:	f7fc ffd4 	bl	8000b08 <__aeabi_dcmpeq>
 8003b60:	b9d8      	cbnz	r0, 8003b9a <_printf_float+0x432>
 8003b62:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003b64:	f108 0201 	add.w	r2, r8, #1
 8003b68:	3b01      	subs	r3, #1
 8003b6a:	4631      	mov	r1, r6
 8003b6c:	4628      	mov	r0, r5
 8003b6e:	47b8      	blx	r7
 8003b70:	3001      	adds	r0, #1
 8003b72:	d10e      	bne.n	8003b92 <_printf_float+0x42a>
 8003b74:	e659      	b.n	800382a <_printf_float+0xc2>
 8003b76:	2301      	movs	r3, #1
 8003b78:	4652      	mov	r2, sl
 8003b7a:	4631      	mov	r1, r6
 8003b7c:	4628      	mov	r0, r5
 8003b7e:	47b8      	blx	r7
 8003b80:	3001      	adds	r0, #1
 8003b82:	f43f ae52 	beq.w	800382a <_printf_float+0xc2>
 8003b86:	f108 0801 	add.w	r8, r8, #1
 8003b8a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003b8c:	3b01      	subs	r3, #1
 8003b8e:	4543      	cmp	r3, r8
 8003b90:	dcf1      	bgt.n	8003b76 <_printf_float+0x40e>
 8003b92:	464b      	mov	r3, r9
 8003b94:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8003b98:	e6dc      	b.n	8003954 <_printf_float+0x1ec>
 8003b9a:	f04f 0800 	mov.w	r8, #0
 8003b9e:	f104 0a1a 	add.w	sl, r4, #26
 8003ba2:	e7f2      	b.n	8003b8a <_printf_float+0x422>
 8003ba4:	2301      	movs	r3, #1
 8003ba6:	4642      	mov	r2, r8
 8003ba8:	e7df      	b.n	8003b6a <_printf_float+0x402>
 8003baa:	2301      	movs	r3, #1
 8003bac:	464a      	mov	r2, r9
 8003bae:	4631      	mov	r1, r6
 8003bb0:	4628      	mov	r0, r5
 8003bb2:	47b8      	blx	r7
 8003bb4:	3001      	adds	r0, #1
 8003bb6:	f43f ae38 	beq.w	800382a <_printf_float+0xc2>
 8003bba:	f108 0801 	add.w	r8, r8, #1
 8003bbe:	68e3      	ldr	r3, [r4, #12]
 8003bc0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003bc2:	1a5b      	subs	r3, r3, r1
 8003bc4:	4543      	cmp	r3, r8
 8003bc6:	dcf0      	bgt.n	8003baa <_printf_float+0x442>
 8003bc8:	e6fa      	b.n	80039c0 <_printf_float+0x258>
 8003bca:	f04f 0800 	mov.w	r8, #0
 8003bce:	f104 0919 	add.w	r9, r4, #25
 8003bd2:	e7f4      	b.n	8003bbe <_printf_float+0x456>

08003bd4 <_printf_common>:
 8003bd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003bd8:	4616      	mov	r6, r2
 8003bda:	4699      	mov	r9, r3
 8003bdc:	688a      	ldr	r2, [r1, #8]
 8003bde:	690b      	ldr	r3, [r1, #16]
 8003be0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8003be4:	4293      	cmp	r3, r2
 8003be6:	bfb8      	it	lt
 8003be8:	4613      	movlt	r3, r2
 8003bea:	6033      	str	r3, [r6, #0]
 8003bec:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8003bf0:	4607      	mov	r7, r0
 8003bf2:	460c      	mov	r4, r1
 8003bf4:	b10a      	cbz	r2, 8003bfa <_printf_common+0x26>
 8003bf6:	3301      	adds	r3, #1
 8003bf8:	6033      	str	r3, [r6, #0]
 8003bfa:	6823      	ldr	r3, [r4, #0]
 8003bfc:	0699      	lsls	r1, r3, #26
 8003bfe:	bf42      	ittt	mi
 8003c00:	6833      	ldrmi	r3, [r6, #0]
 8003c02:	3302      	addmi	r3, #2
 8003c04:	6033      	strmi	r3, [r6, #0]
 8003c06:	6825      	ldr	r5, [r4, #0]
 8003c08:	f015 0506 	ands.w	r5, r5, #6
 8003c0c:	d106      	bne.n	8003c1c <_printf_common+0x48>
 8003c0e:	f104 0a19 	add.w	sl, r4, #25
 8003c12:	68e3      	ldr	r3, [r4, #12]
 8003c14:	6832      	ldr	r2, [r6, #0]
 8003c16:	1a9b      	subs	r3, r3, r2
 8003c18:	42ab      	cmp	r3, r5
 8003c1a:	dc26      	bgt.n	8003c6a <_printf_common+0x96>
 8003c1c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8003c20:	1e13      	subs	r3, r2, #0
 8003c22:	6822      	ldr	r2, [r4, #0]
 8003c24:	bf18      	it	ne
 8003c26:	2301      	movne	r3, #1
 8003c28:	0692      	lsls	r2, r2, #26
 8003c2a:	d42b      	bmi.n	8003c84 <_printf_common+0xb0>
 8003c2c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8003c30:	4649      	mov	r1, r9
 8003c32:	4638      	mov	r0, r7
 8003c34:	47c0      	blx	r8
 8003c36:	3001      	adds	r0, #1
 8003c38:	d01e      	beq.n	8003c78 <_printf_common+0xa4>
 8003c3a:	6823      	ldr	r3, [r4, #0]
 8003c3c:	68e5      	ldr	r5, [r4, #12]
 8003c3e:	6832      	ldr	r2, [r6, #0]
 8003c40:	f003 0306 	and.w	r3, r3, #6
 8003c44:	2b04      	cmp	r3, #4
 8003c46:	bf08      	it	eq
 8003c48:	1aad      	subeq	r5, r5, r2
 8003c4a:	68a3      	ldr	r3, [r4, #8]
 8003c4c:	6922      	ldr	r2, [r4, #16]
 8003c4e:	bf0c      	ite	eq
 8003c50:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8003c54:	2500      	movne	r5, #0
 8003c56:	4293      	cmp	r3, r2
 8003c58:	bfc4      	itt	gt
 8003c5a:	1a9b      	subgt	r3, r3, r2
 8003c5c:	18ed      	addgt	r5, r5, r3
 8003c5e:	2600      	movs	r6, #0
 8003c60:	341a      	adds	r4, #26
 8003c62:	42b5      	cmp	r5, r6
 8003c64:	d11a      	bne.n	8003c9c <_printf_common+0xc8>
 8003c66:	2000      	movs	r0, #0
 8003c68:	e008      	b.n	8003c7c <_printf_common+0xa8>
 8003c6a:	2301      	movs	r3, #1
 8003c6c:	4652      	mov	r2, sl
 8003c6e:	4649      	mov	r1, r9
 8003c70:	4638      	mov	r0, r7
 8003c72:	47c0      	blx	r8
 8003c74:	3001      	adds	r0, #1
 8003c76:	d103      	bne.n	8003c80 <_printf_common+0xac>
 8003c78:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003c7c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003c80:	3501      	adds	r5, #1
 8003c82:	e7c6      	b.n	8003c12 <_printf_common+0x3e>
 8003c84:	18e1      	adds	r1, r4, r3
 8003c86:	1c5a      	adds	r2, r3, #1
 8003c88:	2030      	movs	r0, #48	; 0x30
 8003c8a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8003c8e:	4422      	add	r2, r4
 8003c90:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8003c94:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8003c98:	3302      	adds	r3, #2
 8003c9a:	e7c7      	b.n	8003c2c <_printf_common+0x58>
 8003c9c:	2301      	movs	r3, #1
 8003c9e:	4622      	mov	r2, r4
 8003ca0:	4649      	mov	r1, r9
 8003ca2:	4638      	mov	r0, r7
 8003ca4:	47c0      	blx	r8
 8003ca6:	3001      	adds	r0, #1
 8003ca8:	d0e6      	beq.n	8003c78 <_printf_common+0xa4>
 8003caa:	3601      	adds	r6, #1
 8003cac:	e7d9      	b.n	8003c62 <_printf_common+0x8e>
	...

08003cb0 <_printf_i>:
 8003cb0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003cb4:	7e0f      	ldrb	r7, [r1, #24]
 8003cb6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8003cb8:	2f78      	cmp	r7, #120	; 0x78
 8003cba:	4691      	mov	r9, r2
 8003cbc:	4680      	mov	r8, r0
 8003cbe:	460c      	mov	r4, r1
 8003cc0:	469a      	mov	sl, r3
 8003cc2:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8003cc6:	d807      	bhi.n	8003cd8 <_printf_i+0x28>
 8003cc8:	2f62      	cmp	r7, #98	; 0x62
 8003cca:	d80a      	bhi.n	8003ce2 <_printf_i+0x32>
 8003ccc:	2f00      	cmp	r7, #0
 8003cce:	f000 80d8 	beq.w	8003e82 <_printf_i+0x1d2>
 8003cd2:	2f58      	cmp	r7, #88	; 0x58
 8003cd4:	f000 80a3 	beq.w	8003e1e <_printf_i+0x16e>
 8003cd8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8003cdc:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8003ce0:	e03a      	b.n	8003d58 <_printf_i+0xa8>
 8003ce2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8003ce6:	2b15      	cmp	r3, #21
 8003ce8:	d8f6      	bhi.n	8003cd8 <_printf_i+0x28>
 8003cea:	a101      	add	r1, pc, #4	; (adr r1, 8003cf0 <_printf_i+0x40>)
 8003cec:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8003cf0:	08003d49 	.word	0x08003d49
 8003cf4:	08003d5d 	.word	0x08003d5d
 8003cf8:	08003cd9 	.word	0x08003cd9
 8003cfc:	08003cd9 	.word	0x08003cd9
 8003d00:	08003cd9 	.word	0x08003cd9
 8003d04:	08003cd9 	.word	0x08003cd9
 8003d08:	08003d5d 	.word	0x08003d5d
 8003d0c:	08003cd9 	.word	0x08003cd9
 8003d10:	08003cd9 	.word	0x08003cd9
 8003d14:	08003cd9 	.word	0x08003cd9
 8003d18:	08003cd9 	.word	0x08003cd9
 8003d1c:	08003e69 	.word	0x08003e69
 8003d20:	08003d8d 	.word	0x08003d8d
 8003d24:	08003e4b 	.word	0x08003e4b
 8003d28:	08003cd9 	.word	0x08003cd9
 8003d2c:	08003cd9 	.word	0x08003cd9
 8003d30:	08003e8b 	.word	0x08003e8b
 8003d34:	08003cd9 	.word	0x08003cd9
 8003d38:	08003d8d 	.word	0x08003d8d
 8003d3c:	08003cd9 	.word	0x08003cd9
 8003d40:	08003cd9 	.word	0x08003cd9
 8003d44:	08003e53 	.word	0x08003e53
 8003d48:	682b      	ldr	r3, [r5, #0]
 8003d4a:	1d1a      	adds	r2, r3, #4
 8003d4c:	681b      	ldr	r3, [r3, #0]
 8003d4e:	602a      	str	r2, [r5, #0]
 8003d50:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8003d54:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8003d58:	2301      	movs	r3, #1
 8003d5a:	e0a3      	b.n	8003ea4 <_printf_i+0x1f4>
 8003d5c:	6820      	ldr	r0, [r4, #0]
 8003d5e:	6829      	ldr	r1, [r5, #0]
 8003d60:	0606      	lsls	r6, r0, #24
 8003d62:	f101 0304 	add.w	r3, r1, #4
 8003d66:	d50a      	bpl.n	8003d7e <_printf_i+0xce>
 8003d68:	680e      	ldr	r6, [r1, #0]
 8003d6a:	602b      	str	r3, [r5, #0]
 8003d6c:	2e00      	cmp	r6, #0
 8003d6e:	da03      	bge.n	8003d78 <_printf_i+0xc8>
 8003d70:	232d      	movs	r3, #45	; 0x2d
 8003d72:	4276      	negs	r6, r6
 8003d74:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003d78:	485e      	ldr	r0, [pc, #376]	; (8003ef4 <_printf_i+0x244>)
 8003d7a:	230a      	movs	r3, #10
 8003d7c:	e019      	b.n	8003db2 <_printf_i+0x102>
 8003d7e:	680e      	ldr	r6, [r1, #0]
 8003d80:	602b      	str	r3, [r5, #0]
 8003d82:	f010 0f40 	tst.w	r0, #64	; 0x40
 8003d86:	bf18      	it	ne
 8003d88:	b236      	sxthne	r6, r6
 8003d8a:	e7ef      	b.n	8003d6c <_printf_i+0xbc>
 8003d8c:	682b      	ldr	r3, [r5, #0]
 8003d8e:	6820      	ldr	r0, [r4, #0]
 8003d90:	1d19      	adds	r1, r3, #4
 8003d92:	6029      	str	r1, [r5, #0]
 8003d94:	0601      	lsls	r1, r0, #24
 8003d96:	d501      	bpl.n	8003d9c <_printf_i+0xec>
 8003d98:	681e      	ldr	r6, [r3, #0]
 8003d9a:	e002      	b.n	8003da2 <_printf_i+0xf2>
 8003d9c:	0646      	lsls	r6, r0, #25
 8003d9e:	d5fb      	bpl.n	8003d98 <_printf_i+0xe8>
 8003da0:	881e      	ldrh	r6, [r3, #0]
 8003da2:	4854      	ldr	r0, [pc, #336]	; (8003ef4 <_printf_i+0x244>)
 8003da4:	2f6f      	cmp	r7, #111	; 0x6f
 8003da6:	bf0c      	ite	eq
 8003da8:	2308      	moveq	r3, #8
 8003daa:	230a      	movne	r3, #10
 8003dac:	2100      	movs	r1, #0
 8003dae:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8003db2:	6865      	ldr	r5, [r4, #4]
 8003db4:	60a5      	str	r5, [r4, #8]
 8003db6:	2d00      	cmp	r5, #0
 8003db8:	bfa2      	ittt	ge
 8003dba:	6821      	ldrge	r1, [r4, #0]
 8003dbc:	f021 0104 	bicge.w	r1, r1, #4
 8003dc0:	6021      	strge	r1, [r4, #0]
 8003dc2:	b90e      	cbnz	r6, 8003dc8 <_printf_i+0x118>
 8003dc4:	2d00      	cmp	r5, #0
 8003dc6:	d04d      	beq.n	8003e64 <_printf_i+0x1b4>
 8003dc8:	4615      	mov	r5, r2
 8003dca:	fbb6 f1f3 	udiv	r1, r6, r3
 8003dce:	fb03 6711 	mls	r7, r3, r1, r6
 8003dd2:	5dc7      	ldrb	r7, [r0, r7]
 8003dd4:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8003dd8:	4637      	mov	r7, r6
 8003dda:	42bb      	cmp	r3, r7
 8003ddc:	460e      	mov	r6, r1
 8003dde:	d9f4      	bls.n	8003dca <_printf_i+0x11a>
 8003de0:	2b08      	cmp	r3, #8
 8003de2:	d10b      	bne.n	8003dfc <_printf_i+0x14c>
 8003de4:	6823      	ldr	r3, [r4, #0]
 8003de6:	07de      	lsls	r6, r3, #31
 8003de8:	d508      	bpl.n	8003dfc <_printf_i+0x14c>
 8003dea:	6923      	ldr	r3, [r4, #16]
 8003dec:	6861      	ldr	r1, [r4, #4]
 8003dee:	4299      	cmp	r1, r3
 8003df0:	bfde      	ittt	le
 8003df2:	2330      	movle	r3, #48	; 0x30
 8003df4:	f805 3c01 	strble.w	r3, [r5, #-1]
 8003df8:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8003dfc:	1b52      	subs	r2, r2, r5
 8003dfe:	6122      	str	r2, [r4, #16]
 8003e00:	f8cd a000 	str.w	sl, [sp]
 8003e04:	464b      	mov	r3, r9
 8003e06:	aa03      	add	r2, sp, #12
 8003e08:	4621      	mov	r1, r4
 8003e0a:	4640      	mov	r0, r8
 8003e0c:	f7ff fee2 	bl	8003bd4 <_printf_common>
 8003e10:	3001      	adds	r0, #1
 8003e12:	d14c      	bne.n	8003eae <_printf_i+0x1fe>
 8003e14:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003e18:	b004      	add	sp, #16
 8003e1a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003e1e:	4835      	ldr	r0, [pc, #212]	; (8003ef4 <_printf_i+0x244>)
 8003e20:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8003e24:	6829      	ldr	r1, [r5, #0]
 8003e26:	6823      	ldr	r3, [r4, #0]
 8003e28:	f851 6b04 	ldr.w	r6, [r1], #4
 8003e2c:	6029      	str	r1, [r5, #0]
 8003e2e:	061d      	lsls	r5, r3, #24
 8003e30:	d514      	bpl.n	8003e5c <_printf_i+0x1ac>
 8003e32:	07df      	lsls	r7, r3, #31
 8003e34:	bf44      	itt	mi
 8003e36:	f043 0320 	orrmi.w	r3, r3, #32
 8003e3a:	6023      	strmi	r3, [r4, #0]
 8003e3c:	b91e      	cbnz	r6, 8003e46 <_printf_i+0x196>
 8003e3e:	6823      	ldr	r3, [r4, #0]
 8003e40:	f023 0320 	bic.w	r3, r3, #32
 8003e44:	6023      	str	r3, [r4, #0]
 8003e46:	2310      	movs	r3, #16
 8003e48:	e7b0      	b.n	8003dac <_printf_i+0xfc>
 8003e4a:	6823      	ldr	r3, [r4, #0]
 8003e4c:	f043 0320 	orr.w	r3, r3, #32
 8003e50:	6023      	str	r3, [r4, #0]
 8003e52:	2378      	movs	r3, #120	; 0x78
 8003e54:	4828      	ldr	r0, [pc, #160]	; (8003ef8 <_printf_i+0x248>)
 8003e56:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8003e5a:	e7e3      	b.n	8003e24 <_printf_i+0x174>
 8003e5c:	0659      	lsls	r1, r3, #25
 8003e5e:	bf48      	it	mi
 8003e60:	b2b6      	uxthmi	r6, r6
 8003e62:	e7e6      	b.n	8003e32 <_printf_i+0x182>
 8003e64:	4615      	mov	r5, r2
 8003e66:	e7bb      	b.n	8003de0 <_printf_i+0x130>
 8003e68:	682b      	ldr	r3, [r5, #0]
 8003e6a:	6826      	ldr	r6, [r4, #0]
 8003e6c:	6961      	ldr	r1, [r4, #20]
 8003e6e:	1d18      	adds	r0, r3, #4
 8003e70:	6028      	str	r0, [r5, #0]
 8003e72:	0635      	lsls	r5, r6, #24
 8003e74:	681b      	ldr	r3, [r3, #0]
 8003e76:	d501      	bpl.n	8003e7c <_printf_i+0x1cc>
 8003e78:	6019      	str	r1, [r3, #0]
 8003e7a:	e002      	b.n	8003e82 <_printf_i+0x1d2>
 8003e7c:	0670      	lsls	r0, r6, #25
 8003e7e:	d5fb      	bpl.n	8003e78 <_printf_i+0x1c8>
 8003e80:	8019      	strh	r1, [r3, #0]
 8003e82:	2300      	movs	r3, #0
 8003e84:	6123      	str	r3, [r4, #16]
 8003e86:	4615      	mov	r5, r2
 8003e88:	e7ba      	b.n	8003e00 <_printf_i+0x150>
 8003e8a:	682b      	ldr	r3, [r5, #0]
 8003e8c:	1d1a      	adds	r2, r3, #4
 8003e8e:	602a      	str	r2, [r5, #0]
 8003e90:	681d      	ldr	r5, [r3, #0]
 8003e92:	6862      	ldr	r2, [r4, #4]
 8003e94:	2100      	movs	r1, #0
 8003e96:	4628      	mov	r0, r5
 8003e98:	f7fc f9c2 	bl	8000220 <memchr>
 8003e9c:	b108      	cbz	r0, 8003ea2 <_printf_i+0x1f2>
 8003e9e:	1b40      	subs	r0, r0, r5
 8003ea0:	6060      	str	r0, [r4, #4]
 8003ea2:	6863      	ldr	r3, [r4, #4]
 8003ea4:	6123      	str	r3, [r4, #16]
 8003ea6:	2300      	movs	r3, #0
 8003ea8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003eac:	e7a8      	b.n	8003e00 <_printf_i+0x150>
 8003eae:	6923      	ldr	r3, [r4, #16]
 8003eb0:	462a      	mov	r2, r5
 8003eb2:	4649      	mov	r1, r9
 8003eb4:	4640      	mov	r0, r8
 8003eb6:	47d0      	blx	sl
 8003eb8:	3001      	adds	r0, #1
 8003eba:	d0ab      	beq.n	8003e14 <_printf_i+0x164>
 8003ebc:	6823      	ldr	r3, [r4, #0]
 8003ebe:	079b      	lsls	r3, r3, #30
 8003ec0:	d413      	bmi.n	8003eea <_printf_i+0x23a>
 8003ec2:	68e0      	ldr	r0, [r4, #12]
 8003ec4:	9b03      	ldr	r3, [sp, #12]
 8003ec6:	4298      	cmp	r0, r3
 8003ec8:	bfb8      	it	lt
 8003eca:	4618      	movlt	r0, r3
 8003ecc:	e7a4      	b.n	8003e18 <_printf_i+0x168>
 8003ece:	2301      	movs	r3, #1
 8003ed0:	4632      	mov	r2, r6
 8003ed2:	4649      	mov	r1, r9
 8003ed4:	4640      	mov	r0, r8
 8003ed6:	47d0      	blx	sl
 8003ed8:	3001      	adds	r0, #1
 8003eda:	d09b      	beq.n	8003e14 <_printf_i+0x164>
 8003edc:	3501      	adds	r5, #1
 8003ede:	68e3      	ldr	r3, [r4, #12]
 8003ee0:	9903      	ldr	r1, [sp, #12]
 8003ee2:	1a5b      	subs	r3, r3, r1
 8003ee4:	42ab      	cmp	r3, r5
 8003ee6:	dcf2      	bgt.n	8003ece <_printf_i+0x21e>
 8003ee8:	e7eb      	b.n	8003ec2 <_printf_i+0x212>
 8003eea:	2500      	movs	r5, #0
 8003eec:	f104 0619 	add.w	r6, r4, #25
 8003ef0:	e7f5      	b.n	8003ede <_printf_i+0x22e>
 8003ef2:	bf00      	nop
 8003ef4:	0800844e 	.word	0x0800844e
 8003ef8:	0800845f 	.word	0x0800845f

08003efc <_scanf_float>:
 8003efc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003f00:	b087      	sub	sp, #28
 8003f02:	4617      	mov	r7, r2
 8003f04:	9303      	str	r3, [sp, #12]
 8003f06:	688b      	ldr	r3, [r1, #8]
 8003f08:	1e5a      	subs	r2, r3, #1
 8003f0a:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8003f0e:	bf83      	ittte	hi
 8003f10:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8003f14:	195b      	addhi	r3, r3, r5
 8003f16:	9302      	strhi	r3, [sp, #8]
 8003f18:	2300      	movls	r3, #0
 8003f1a:	bf86      	itte	hi
 8003f1c:	f240 135d 	movwhi	r3, #349	; 0x15d
 8003f20:	608b      	strhi	r3, [r1, #8]
 8003f22:	9302      	strls	r3, [sp, #8]
 8003f24:	680b      	ldr	r3, [r1, #0]
 8003f26:	468b      	mov	fp, r1
 8003f28:	2500      	movs	r5, #0
 8003f2a:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 8003f2e:	f84b 3b1c 	str.w	r3, [fp], #28
 8003f32:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8003f36:	4680      	mov	r8, r0
 8003f38:	460c      	mov	r4, r1
 8003f3a:	465e      	mov	r6, fp
 8003f3c:	46aa      	mov	sl, r5
 8003f3e:	46a9      	mov	r9, r5
 8003f40:	9501      	str	r5, [sp, #4]
 8003f42:	68a2      	ldr	r2, [r4, #8]
 8003f44:	b152      	cbz	r2, 8003f5c <_scanf_float+0x60>
 8003f46:	683b      	ldr	r3, [r7, #0]
 8003f48:	781b      	ldrb	r3, [r3, #0]
 8003f4a:	2b4e      	cmp	r3, #78	; 0x4e
 8003f4c:	d864      	bhi.n	8004018 <_scanf_float+0x11c>
 8003f4e:	2b40      	cmp	r3, #64	; 0x40
 8003f50:	d83c      	bhi.n	8003fcc <_scanf_float+0xd0>
 8003f52:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 8003f56:	b2c8      	uxtb	r0, r1
 8003f58:	280e      	cmp	r0, #14
 8003f5a:	d93a      	bls.n	8003fd2 <_scanf_float+0xd6>
 8003f5c:	f1b9 0f00 	cmp.w	r9, #0
 8003f60:	d003      	beq.n	8003f6a <_scanf_float+0x6e>
 8003f62:	6823      	ldr	r3, [r4, #0]
 8003f64:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8003f68:	6023      	str	r3, [r4, #0]
 8003f6a:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8003f6e:	f1ba 0f01 	cmp.w	sl, #1
 8003f72:	f200 8113 	bhi.w	800419c <_scanf_float+0x2a0>
 8003f76:	455e      	cmp	r6, fp
 8003f78:	f200 8105 	bhi.w	8004186 <_scanf_float+0x28a>
 8003f7c:	2501      	movs	r5, #1
 8003f7e:	4628      	mov	r0, r5
 8003f80:	b007      	add	sp, #28
 8003f82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003f86:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8003f8a:	2a0d      	cmp	r2, #13
 8003f8c:	d8e6      	bhi.n	8003f5c <_scanf_float+0x60>
 8003f8e:	a101      	add	r1, pc, #4	; (adr r1, 8003f94 <_scanf_float+0x98>)
 8003f90:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8003f94:	080040d3 	.word	0x080040d3
 8003f98:	08003f5d 	.word	0x08003f5d
 8003f9c:	08003f5d 	.word	0x08003f5d
 8003fa0:	08003f5d 	.word	0x08003f5d
 8003fa4:	08004133 	.word	0x08004133
 8003fa8:	0800410b 	.word	0x0800410b
 8003fac:	08003f5d 	.word	0x08003f5d
 8003fb0:	08003f5d 	.word	0x08003f5d
 8003fb4:	080040e1 	.word	0x080040e1
 8003fb8:	08003f5d 	.word	0x08003f5d
 8003fbc:	08003f5d 	.word	0x08003f5d
 8003fc0:	08003f5d 	.word	0x08003f5d
 8003fc4:	08003f5d 	.word	0x08003f5d
 8003fc8:	08004099 	.word	0x08004099
 8003fcc:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003fd0:	e7db      	b.n	8003f8a <_scanf_float+0x8e>
 8003fd2:	290e      	cmp	r1, #14
 8003fd4:	d8c2      	bhi.n	8003f5c <_scanf_float+0x60>
 8003fd6:	a001      	add	r0, pc, #4	; (adr r0, 8003fdc <_scanf_float+0xe0>)
 8003fd8:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8003fdc:	0800408b 	.word	0x0800408b
 8003fe0:	08003f5d 	.word	0x08003f5d
 8003fe4:	0800408b 	.word	0x0800408b
 8003fe8:	0800411f 	.word	0x0800411f
 8003fec:	08003f5d 	.word	0x08003f5d
 8003ff0:	08004039 	.word	0x08004039
 8003ff4:	08004075 	.word	0x08004075
 8003ff8:	08004075 	.word	0x08004075
 8003ffc:	08004075 	.word	0x08004075
 8004000:	08004075 	.word	0x08004075
 8004004:	08004075 	.word	0x08004075
 8004008:	08004075 	.word	0x08004075
 800400c:	08004075 	.word	0x08004075
 8004010:	08004075 	.word	0x08004075
 8004014:	08004075 	.word	0x08004075
 8004018:	2b6e      	cmp	r3, #110	; 0x6e
 800401a:	d809      	bhi.n	8004030 <_scanf_float+0x134>
 800401c:	2b60      	cmp	r3, #96	; 0x60
 800401e:	d8b2      	bhi.n	8003f86 <_scanf_float+0x8a>
 8004020:	2b54      	cmp	r3, #84	; 0x54
 8004022:	d077      	beq.n	8004114 <_scanf_float+0x218>
 8004024:	2b59      	cmp	r3, #89	; 0x59
 8004026:	d199      	bne.n	8003f5c <_scanf_float+0x60>
 8004028:	2d07      	cmp	r5, #7
 800402a:	d197      	bne.n	8003f5c <_scanf_float+0x60>
 800402c:	2508      	movs	r5, #8
 800402e:	e029      	b.n	8004084 <_scanf_float+0x188>
 8004030:	2b74      	cmp	r3, #116	; 0x74
 8004032:	d06f      	beq.n	8004114 <_scanf_float+0x218>
 8004034:	2b79      	cmp	r3, #121	; 0x79
 8004036:	e7f6      	b.n	8004026 <_scanf_float+0x12a>
 8004038:	6821      	ldr	r1, [r4, #0]
 800403a:	05c8      	lsls	r0, r1, #23
 800403c:	d51a      	bpl.n	8004074 <_scanf_float+0x178>
 800403e:	9b02      	ldr	r3, [sp, #8]
 8004040:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8004044:	6021      	str	r1, [r4, #0]
 8004046:	f109 0901 	add.w	r9, r9, #1
 800404a:	b11b      	cbz	r3, 8004054 <_scanf_float+0x158>
 800404c:	3b01      	subs	r3, #1
 800404e:	3201      	adds	r2, #1
 8004050:	9302      	str	r3, [sp, #8]
 8004052:	60a2      	str	r2, [r4, #8]
 8004054:	68a3      	ldr	r3, [r4, #8]
 8004056:	3b01      	subs	r3, #1
 8004058:	60a3      	str	r3, [r4, #8]
 800405a:	6923      	ldr	r3, [r4, #16]
 800405c:	3301      	adds	r3, #1
 800405e:	6123      	str	r3, [r4, #16]
 8004060:	687b      	ldr	r3, [r7, #4]
 8004062:	3b01      	subs	r3, #1
 8004064:	2b00      	cmp	r3, #0
 8004066:	607b      	str	r3, [r7, #4]
 8004068:	f340 8084 	ble.w	8004174 <_scanf_float+0x278>
 800406c:	683b      	ldr	r3, [r7, #0]
 800406e:	3301      	adds	r3, #1
 8004070:	603b      	str	r3, [r7, #0]
 8004072:	e766      	b.n	8003f42 <_scanf_float+0x46>
 8004074:	eb1a 0f05 	cmn.w	sl, r5
 8004078:	f47f af70 	bne.w	8003f5c <_scanf_float+0x60>
 800407c:	6822      	ldr	r2, [r4, #0]
 800407e:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 8004082:	6022      	str	r2, [r4, #0]
 8004084:	f806 3b01 	strb.w	r3, [r6], #1
 8004088:	e7e4      	b.n	8004054 <_scanf_float+0x158>
 800408a:	6822      	ldr	r2, [r4, #0]
 800408c:	0610      	lsls	r0, r2, #24
 800408e:	f57f af65 	bpl.w	8003f5c <_scanf_float+0x60>
 8004092:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004096:	e7f4      	b.n	8004082 <_scanf_float+0x186>
 8004098:	f1ba 0f00 	cmp.w	sl, #0
 800409c:	d10e      	bne.n	80040bc <_scanf_float+0x1c0>
 800409e:	f1b9 0f00 	cmp.w	r9, #0
 80040a2:	d10e      	bne.n	80040c2 <_scanf_float+0x1c6>
 80040a4:	6822      	ldr	r2, [r4, #0]
 80040a6:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 80040aa:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 80040ae:	d108      	bne.n	80040c2 <_scanf_float+0x1c6>
 80040b0:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 80040b4:	6022      	str	r2, [r4, #0]
 80040b6:	f04f 0a01 	mov.w	sl, #1
 80040ba:	e7e3      	b.n	8004084 <_scanf_float+0x188>
 80040bc:	f1ba 0f02 	cmp.w	sl, #2
 80040c0:	d055      	beq.n	800416e <_scanf_float+0x272>
 80040c2:	2d01      	cmp	r5, #1
 80040c4:	d002      	beq.n	80040cc <_scanf_float+0x1d0>
 80040c6:	2d04      	cmp	r5, #4
 80040c8:	f47f af48 	bne.w	8003f5c <_scanf_float+0x60>
 80040cc:	3501      	adds	r5, #1
 80040ce:	b2ed      	uxtb	r5, r5
 80040d0:	e7d8      	b.n	8004084 <_scanf_float+0x188>
 80040d2:	f1ba 0f01 	cmp.w	sl, #1
 80040d6:	f47f af41 	bne.w	8003f5c <_scanf_float+0x60>
 80040da:	f04f 0a02 	mov.w	sl, #2
 80040de:	e7d1      	b.n	8004084 <_scanf_float+0x188>
 80040e0:	b97d      	cbnz	r5, 8004102 <_scanf_float+0x206>
 80040e2:	f1b9 0f00 	cmp.w	r9, #0
 80040e6:	f47f af3c 	bne.w	8003f62 <_scanf_float+0x66>
 80040ea:	6822      	ldr	r2, [r4, #0]
 80040ec:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 80040f0:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 80040f4:	f47f af39 	bne.w	8003f6a <_scanf_float+0x6e>
 80040f8:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 80040fc:	6022      	str	r2, [r4, #0]
 80040fe:	2501      	movs	r5, #1
 8004100:	e7c0      	b.n	8004084 <_scanf_float+0x188>
 8004102:	2d03      	cmp	r5, #3
 8004104:	d0e2      	beq.n	80040cc <_scanf_float+0x1d0>
 8004106:	2d05      	cmp	r5, #5
 8004108:	e7de      	b.n	80040c8 <_scanf_float+0x1cc>
 800410a:	2d02      	cmp	r5, #2
 800410c:	f47f af26 	bne.w	8003f5c <_scanf_float+0x60>
 8004110:	2503      	movs	r5, #3
 8004112:	e7b7      	b.n	8004084 <_scanf_float+0x188>
 8004114:	2d06      	cmp	r5, #6
 8004116:	f47f af21 	bne.w	8003f5c <_scanf_float+0x60>
 800411a:	2507      	movs	r5, #7
 800411c:	e7b2      	b.n	8004084 <_scanf_float+0x188>
 800411e:	6822      	ldr	r2, [r4, #0]
 8004120:	0591      	lsls	r1, r2, #22
 8004122:	f57f af1b 	bpl.w	8003f5c <_scanf_float+0x60>
 8004126:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 800412a:	6022      	str	r2, [r4, #0]
 800412c:	f8cd 9004 	str.w	r9, [sp, #4]
 8004130:	e7a8      	b.n	8004084 <_scanf_float+0x188>
 8004132:	6822      	ldr	r2, [r4, #0]
 8004134:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 8004138:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 800413c:	d006      	beq.n	800414c <_scanf_float+0x250>
 800413e:	0550      	lsls	r0, r2, #21
 8004140:	f57f af0c 	bpl.w	8003f5c <_scanf_float+0x60>
 8004144:	f1b9 0f00 	cmp.w	r9, #0
 8004148:	f43f af0f 	beq.w	8003f6a <_scanf_float+0x6e>
 800414c:	0591      	lsls	r1, r2, #22
 800414e:	bf58      	it	pl
 8004150:	9901      	ldrpl	r1, [sp, #4]
 8004152:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8004156:	bf58      	it	pl
 8004158:	eba9 0101 	subpl.w	r1, r9, r1
 800415c:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 8004160:	bf58      	it	pl
 8004162:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8004166:	6022      	str	r2, [r4, #0]
 8004168:	f04f 0900 	mov.w	r9, #0
 800416c:	e78a      	b.n	8004084 <_scanf_float+0x188>
 800416e:	f04f 0a03 	mov.w	sl, #3
 8004172:	e787      	b.n	8004084 <_scanf_float+0x188>
 8004174:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8004178:	4639      	mov	r1, r7
 800417a:	4640      	mov	r0, r8
 800417c:	4798      	blx	r3
 800417e:	2800      	cmp	r0, #0
 8004180:	f43f aedf 	beq.w	8003f42 <_scanf_float+0x46>
 8004184:	e6ea      	b.n	8003f5c <_scanf_float+0x60>
 8004186:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800418a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800418e:	463a      	mov	r2, r7
 8004190:	4640      	mov	r0, r8
 8004192:	4798      	blx	r3
 8004194:	6923      	ldr	r3, [r4, #16]
 8004196:	3b01      	subs	r3, #1
 8004198:	6123      	str	r3, [r4, #16]
 800419a:	e6ec      	b.n	8003f76 <_scanf_float+0x7a>
 800419c:	1e6b      	subs	r3, r5, #1
 800419e:	2b06      	cmp	r3, #6
 80041a0:	d825      	bhi.n	80041ee <_scanf_float+0x2f2>
 80041a2:	2d02      	cmp	r5, #2
 80041a4:	d836      	bhi.n	8004214 <_scanf_float+0x318>
 80041a6:	455e      	cmp	r6, fp
 80041a8:	f67f aee8 	bls.w	8003f7c <_scanf_float+0x80>
 80041ac:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80041b0:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80041b4:	463a      	mov	r2, r7
 80041b6:	4640      	mov	r0, r8
 80041b8:	4798      	blx	r3
 80041ba:	6923      	ldr	r3, [r4, #16]
 80041bc:	3b01      	subs	r3, #1
 80041be:	6123      	str	r3, [r4, #16]
 80041c0:	e7f1      	b.n	80041a6 <_scanf_float+0x2aa>
 80041c2:	9802      	ldr	r0, [sp, #8]
 80041c4:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80041c8:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 80041cc:	9002      	str	r0, [sp, #8]
 80041ce:	463a      	mov	r2, r7
 80041d0:	4640      	mov	r0, r8
 80041d2:	4798      	blx	r3
 80041d4:	6923      	ldr	r3, [r4, #16]
 80041d6:	3b01      	subs	r3, #1
 80041d8:	6123      	str	r3, [r4, #16]
 80041da:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 80041de:	fa5f fa8a 	uxtb.w	sl, sl
 80041e2:	f1ba 0f02 	cmp.w	sl, #2
 80041e6:	d1ec      	bne.n	80041c2 <_scanf_float+0x2c6>
 80041e8:	3d03      	subs	r5, #3
 80041ea:	b2ed      	uxtb	r5, r5
 80041ec:	1b76      	subs	r6, r6, r5
 80041ee:	6823      	ldr	r3, [r4, #0]
 80041f0:	05da      	lsls	r2, r3, #23
 80041f2:	d52f      	bpl.n	8004254 <_scanf_float+0x358>
 80041f4:	055b      	lsls	r3, r3, #21
 80041f6:	d510      	bpl.n	800421a <_scanf_float+0x31e>
 80041f8:	455e      	cmp	r6, fp
 80041fa:	f67f aebf 	bls.w	8003f7c <_scanf_float+0x80>
 80041fe:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8004202:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8004206:	463a      	mov	r2, r7
 8004208:	4640      	mov	r0, r8
 800420a:	4798      	blx	r3
 800420c:	6923      	ldr	r3, [r4, #16]
 800420e:	3b01      	subs	r3, #1
 8004210:	6123      	str	r3, [r4, #16]
 8004212:	e7f1      	b.n	80041f8 <_scanf_float+0x2fc>
 8004214:	46aa      	mov	sl, r5
 8004216:	9602      	str	r6, [sp, #8]
 8004218:	e7df      	b.n	80041da <_scanf_float+0x2de>
 800421a:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 800421e:	6923      	ldr	r3, [r4, #16]
 8004220:	2965      	cmp	r1, #101	; 0x65
 8004222:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 8004226:	f106 35ff 	add.w	r5, r6, #4294967295	; 0xffffffff
 800422a:	6123      	str	r3, [r4, #16]
 800422c:	d00c      	beq.n	8004248 <_scanf_float+0x34c>
 800422e:	2945      	cmp	r1, #69	; 0x45
 8004230:	d00a      	beq.n	8004248 <_scanf_float+0x34c>
 8004232:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8004236:	463a      	mov	r2, r7
 8004238:	4640      	mov	r0, r8
 800423a:	4798      	blx	r3
 800423c:	6923      	ldr	r3, [r4, #16]
 800423e:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8004242:	3b01      	subs	r3, #1
 8004244:	1eb5      	subs	r5, r6, #2
 8004246:	6123      	str	r3, [r4, #16]
 8004248:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800424c:	463a      	mov	r2, r7
 800424e:	4640      	mov	r0, r8
 8004250:	4798      	blx	r3
 8004252:	462e      	mov	r6, r5
 8004254:	6825      	ldr	r5, [r4, #0]
 8004256:	f015 0510 	ands.w	r5, r5, #16
 800425a:	d159      	bne.n	8004310 <_scanf_float+0x414>
 800425c:	7035      	strb	r5, [r6, #0]
 800425e:	6823      	ldr	r3, [r4, #0]
 8004260:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8004264:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8004268:	d11b      	bne.n	80042a2 <_scanf_float+0x3a6>
 800426a:	9b01      	ldr	r3, [sp, #4]
 800426c:	454b      	cmp	r3, r9
 800426e:	eba3 0209 	sub.w	r2, r3, r9
 8004272:	d123      	bne.n	80042bc <_scanf_float+0x3c0>
 8004274:	2200      	movs	r2, #0
 8004276:	4659      	mov	r1, fp
 8004278:	4640      	mov	r0, r8
 800427a:	f000 fe97 	bl	8004fac <_strtod_r>
 800427e:	6822      	ldr	r2, [r4, #0]
 8004280:	9b03      	ldr	r3, [sp, #12]
 8004282:	f012 0f02 	tst.w	r2, #2
 8004286:	ec57 6b10 	vmov	r6, r7, d0
 800428a:	681b      	ldr	r3, [r3, #0]
 800428c:	d021      	beq.n	80042d2 <_scanf_float+0x3d6>
 800428e:	9903      	ldr	r1, [sp, #12]
 8004290:	1d1a      	adds	r2, r3, #4
 8004292:	600a      	str	r2, [r1, #0]
 8004294:	681b      	ldr	r3, [r3, #0]
 8004296:	e9c3 6700 	strd	r6, r7, [r3]
 800429a:	68e3      	ldr	r3, [r4, #12]
 800429c:	3301      	adds	r3, #1
 800429e:	60e3      	str	r3, [r4, #12]
 80042a0:	e66d      	b.n	8003f7e <_scanf_float+0x82>
 80042a2:	9b04      	ldr	r3, [sp, #16]
 80042a4:	2b00      	cmp	r3, #0
 80042a6:	d0e5      	beq.n	8004274 <_scanf_float+0x378>
 80042a8:	9905      	ldr	r1, [sp, #20]
 80042aa:	230a      	movs	r3, #10
 80042ac:	462a      	mov	r2, r5
 80042ae:	3101      	adds	r1, #1
 80042b0:	4640      	mov	r0, r8
 80042b2:	f000 ff03 	bl	80050bc <_strtol_r>
 80042b6:	9b04      	ldr	r3, [sp, #16]
 80042b8:	9e05      	ldr	r6, [sp, #20]
 80042ba:	1ac2      	subs	r2, r0, r3
 80042bc:	f204 136f 	addw	r3, r4, #367	; 0x16f
 80042c0:	429e      	cmp	r6, r3
 80042c2:	bf28      	it	cs
 80042c4:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 80042c8:	4912      	ldr	r1, [pc, #72]	; (8004314 <_scanf_float+0x418>)
 80042ca:	4630      	mov	r0, r6
 80042cc:	f000 f82c 	bl	8004328 <siprintf>
 80042d0:	e7d0      	b.n	8004274 <_scanf_float+0x378>
 80042d2:	9903      	ldr	r1, [sp, #12]
 80042d4:	f012 0f04 	tst.w	r2, #4
 80042d8:	f103 0204 	add.w	r2, r3, #4
 80042dc:	600a      	str	r2, [r1, #0]
 80042de:	d1d9      	bne.n	8004294 <_scanf_float+0x398>
 80042e0:	f8d3 8000 	ldr.w	r8, [r3]
 80042e4:	ee10 2a10 	vmov	r2, s0
 80042e8:	ee10 0a10 	vmov	r0, s0
 80042ec:	463b      	mov	r3, r7
 80042ee:	4639      	mov	r1, r7
 80042f0:	f7fc fc3c 	bl	8000b6c <__aeabi_dcmpun>
 80042f4:	b128      	cbz	r0, 8004302 <_scanf_float+0x406>
 80042f6:	4808      	ldr	r0, [pc, #32]	; (8004318 <_scanf_float+0x41c>)
 80042f8:	f000 f810 	bl	800431c <nanf>
 80042fc:	ed88 0a00 	vstr	s0, [r8]
 8004300:	e7cb      	b.n	800429a <_scanf_float+0x39e>
 8004302:	4630      	mov	r0, r6
 8004304:	4639      	mov	r1, r7
 8004306:	f7fc fc8f 	bl	8000c28 <__aeabi_d2f>
 800430a:	f8c8 0000 	str.w	r0, [r8]
 800430e:	e7c4      	b.n	800429a <_scanf_float+0x39e>
 8004310:	2500      	movs	r5, #0
 8004312:	e634      	b.n	8003f7e <_scanf_float+0x82>
 8004314:	08008470 	.word	0x08008470
 8004318:	08008878 	.word	0x08008878

0800431c <nanf>:
 800431c:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8004324 <nanf+0x8>
 8004320:	4770      	bx	lr
 8004322:	bf00      	nop
 8004324:	7fc00000 	.word	0x7fc00000

08004328 <siprintf>:
 8004328:	b40e      	push	{r1, r2, r3}
 800432a:	b500      	push	{lr}
 800432c:	b09c      	sub	sp, #112	; 0x70
 800432e:	ab1d      	add	r3, sp, #116	; 0x74
 8004330:	9002      	str	r0, [sp, #8]
 8004332:	9006      	str	r0, [sp, #24]
 8004334:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8004338:	4809      	ldr	r0, [pc, #36]	; (8004360 <siprintf+0x38>)
 800433a:	9107      	str	r1, [sp, #28]
 800433c:	9104      	str	r1, [sp, #16]
 800433e:	4909      	ldr	r1, [pc, #36]	; (8004364 <siprintf+0x3c>)
 8004340:	f853 2b04 	ldr.w	r2, [r3], #4
 8004344:	9105      	str	r1, [sp, #20]
 8004346:	6800      	ldr	r0, [r0, #0]
 8004348:	9301      	str	r3, [sp, #4]
 800434a:	a902      	add	r1, sp, #8
 800434c:	f002 fee2 	bl	8007114 <_svfiprintf_r>
 8004350:	9b02      	ldr	r3, [sp, #8]
 8004352:	2200      	movs	r2, #0
 8004354:	701a      	strb	r2, [r3, #0]
 8004356:	b01c      	add	sp, #112	; 0x70
 8004358:	f85d eb04 	ldr.w	lr, [sp], #4
 800435c:	b003      	add	sp, #12
 800435e:	4770      	bx	lr
 8004360:	20000000 	.word	0x20000000
 8004364:	ffff0208 	.word	0xffff0208

08004368 <sulp>:
 8004368:	b570      	push	{r4, r5, r6, lr}
 800436a:	4604      	mov	r4, r0
 800436c:	460d      	mov	r5, r1
 800436e:	ec45 4b10 	vmov	d0, r4, r5
 8004372:	4616      	mov	r6, r2
 8004374:	f002 fc2c 	bl	8006bd0 <__ulp>
 8004378:	ec51 0b10 	vmov	r0, r1, d0
 800437c:	b17e      	cbz	r6, 800439e <sulp+0x36>
 800437e:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8004382:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8004386:	2b00      	cmp	r3, #0
 8004388:	dd09      	ble.n	800439e <sulp+0x36>
 800438a:	051b      	lsls	r3, r3, #20
 800438c:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 8004390:	2400      	movs	r4, #0
 8004392:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 8004396:	4622      	mov	r2, r4
 8004398:	462b      	mov	r3, r5
 800439a:	f7fc f94d 	bl	8000638 <__aeabi_dmul>
 800439e:	bd70      	pop	{r4, r5, r6, pc}

080043a0 <_strtod_l>:
 80043a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80043a4:	ed2d 8b02 	vpush	{d8}
 80043a8:	b09d      	sub	sp, #116	; 0x74
 80043aa:	461f      	mov	r7, r3
 80043ac:	2300      	movs	r3, #0
 80043ae:	9318      	str	r3, [sp, #96]	; 0x60
 80043b0:	4ba2      	ldr	r3, [pc, #648]	; (800463c <_strtod_l+0x29c>)
 80043b2:	9213      	str	r2, [sp, #76]	; 0x4c
 80043b4:	681b      	ldr	r3, [r3, #0]
 80043b6:	9305      	str	r3, [sp, #20]
 80043b8:	4604      	mov	r4, r0
 80043ba:	4618      	mov	r0, r3
 80043bc:	4688      	mov	r8, r1
 80043be:	f7fb ff27 	bl	8000210 <strlen>
 80043c2:	f04f 0a00 	mov.w	sl, #0
 80043c6:	4605      	mov	r5, r0
 80043c8:	f04f 0b00 	mov.w	fp, #0
 80043cc:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 80043d0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80043d2:	781a      	ldrb	r2, [r3, #0]
 80043d4:	2a2b      	cmp	r2, #43	; 0x2b
 80043d6:	d04e      	beq.n	8004476 <_strtod_l+0xd6>
 80043d8:	d83b      	bhi.n	8004452 <_strtod_l+0xb2>
 80043da:	2a0d      	cmp	r2, #13
 80043dc:	d834      	bhi.n	8004448 <_strtod_l+0xa8>
 80043de:	2a08      	cmp	r2, #8
 80043e0:	d834      	bhi.n	800444c <_strtod_l+0xac>
 80043e2:	2a00      	cmp	r2, #0
 80043e4:	d03e      	beq.n	8004464 <_strtod_l+0xc4>
 80043e6:	2300      	movs	r3, #0
 80043e8:	930a      	str	r3, [sp, #40]	; 0x28
 80043ea:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 80043ec:	7833      	ldrb	r3, [r6, #0]
 80043ee:	2b30      	cmp	r3, #48	; 0x30
 80043f0:	f040 80b0 	bne.w	8004554 <_strtod_l+0x1b4>
 80043f4:	7873      	ldrb	r3, [r6, #1]
 80043f6:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 80043fa:	2b58      	cmp	r3, #88	; 0x58
 80043fc:	d168      	bne.n	80044d0 <_strtod_l+0x130>
 80043fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004400:	9301      	str	r3, [sp, #4]
 8004402:	ab18      	add	r3, sp, #96	; 0x60
 8004404:	9702      	str	r7, [sp, #8]
 8004406:	9300      	str	r3, [sp, #0]
 8004408:	4a8d      	ldr	r2, [pc, #564]	; (8004640 <_strtod_l+0x2a0>)
 800440a:	ab19      	add	r3, sp, #100	; 0x64
 800440c:	a917      	add	r1, sp, #92	; 0x5c
 800440e:	4620      	mov	r0, r4
 8004410:	f001 fd38 	bl	8005e84 <__gethex>
 8004414:	f010 0707 	ands.w	r7, r0, #7
 8004418:	4605      	mov	r5, r0
 800441a:	d005      	beq.n	8004428 <_strtod_l+0x88>
 800441c:	2f06      	cmp	r7, #6
 800441e:	d12c      	bne.n	800447a <_strtod_l+0xda>
 8004420:	3601      	adds	r6, #1
 8004422:	2300      	movs	r3, #0
 8004424:	9617      	str	r6, [sp, #92]	; 0x5c
 8004426:	930a      	str	r3, [sp, #40]	; 0x28
 8004428:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800442a:	2b00      	cmp	r3, #0
 800442c:	f040 8590 	bne.w	8004f50 <_strtod_l+0xbb0>
 8004430:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004432:	b1eb      	cbz	r3, 8004470 <_strtod_l+0xd0>
 8004434:	4652      	mov	r2, sl
 8004436:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800443a:	ec43 2b10 	vmov	d0, r2, r3
 800443e:	b01d      	add	sp, #116	; 0x74
 8004440:	ecbd 8b02 	vpop	{d8}
 8004444:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004448:	2a20      	cmp	r2, #32
 800444a:	d1cc      	bne.n	80043e6 <_strtod_l+0x46>
 800444c:	3301      	adds	r3, #1
 800444e:	9317      	str	r3, [sp, #92]	; 0x5c
 8004450:	e7be      	b.n	80043d0 <_strtod_l+0x30>
 8004452:	2a2d      	cmp	r2, #45	; 0x2d
 8004454:	d1c7      	bne.n	80043e6 <_strtod_l+0x46>
 8004456:	2201      	movs	r2, #1
 8004458:	920a      	str	r2, [sp, #40]	; 0x28
 800445a:	1c5a      	adds	r2, r3, #1
 800445c:	9217      	str	r2, [sp, #92]	; 0x5c
 800445e:	785b      	ldrb	r3, [r3, #1]
 8004460:	2b00      	cmp	r3, #0
 8004462:	d1c2      	bne.n	80043ea <_strtod_l+0x4a>
 8004464:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004466:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 800446a:	2b00      	cmp	r3, #0
 800446c:	f040 856e 	bne.w	8004f4c <_strtod_l+0xbac>
 8004470:	4652      	mov	r2, sl
 8004472:	465b      	mov	r3, fp
 8004474:	e7e1      	b.n	800443a <_strtod_l+0x9a>
 8004476:	2200      	movs	r2, #0
 8004478:	e7ee      	b.n	8004458 <_strtod_l+0xb8>
 800447a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800447c:	b13a      	cbz	r2, 800448e <_strtod_l+0xee>
 800447e:	2135      	movs	r1, #53	; 0x35
 8004480:	a81a      	add	r0, sp, #104	; 0x68
 8004482:	f002 fcb0 	bl	8006de6 <__copybits>
 8004486:	9918      	ldr	r1, [sp, #96]	; 0x60
 8004488:	4620      	mov	r0, r4
 800448a:	f002 f86f 	bl	800656c <_Bfree>
 800448e:	3f01      	subs	r7, #1
 8004490:	2f04      	cmp	r7, #4
 8004492:	d806      	bhi.n	80044a2 <_strtod_l+0x102>
 8004494:	e8df f007 	tbb	[pc, r7]
 8004498:	1714030a 	.word	0x1714030a
 800449c:	0a          	.byte	0x0a
 800449d:	00          	.byte	0x00
 800449e:	e9dd ab1a 	ldrd	sl, fp, [sp, #104]	; 0x68
 80044a2:	0728      	lsls	r0, r5, #28
 80044a4:	d5c0      	bpl.n	8004428 <_strtod_l+0x88>
 80044a6:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
 80044aa:	e7bd      	b.n	8004428 <_strtod_l+0x88>
 80044ac:	e9dd a31a 	ldrd	sl, r3, [sp, #104]	; 0x68
 80044b0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80044b2:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80044b6:	f202 4233 	addw	r2, r2, #1075	; 0x433
 80044ba:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 80044be:	e7f0      	b.n	80044a2 <_strtod_l+0x102>
 80044c0:	f8df b180 	ldr.w	fp, [pc, #384]	; 8004644 <_strtod_l+0x2a4>
 80044c4:	e7ed      	b.n	80044a2 <_strtod_l+0x102>
 80044c6:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 80044ca:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
 80044ce:	e7e8      	b.n	80044a2 <_strtod_l+0x102>
 80044d0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80044d2:	1c5a      	adds	r2, r3, #1
 80044d4:	9217      	str	r2, [sp, #92]	; 0x5c
 80044d6:	785b      	ldrb	r3, [r3, #1]
 80044d8:	2b30      	cmp	r3, #48	; 0x30
 80044da:	d0f9      	beq.n	80044d0 <_strtod_l+0x130>
 80044dc:	2b00      	cmp	r3, #0
 80044de:	d0a3      	beq.n	8004428 <_strtod_l+0x88>
 80044e0:	2301      	movs	r3, #1
 80044e2:	f04f 0900 	mov.w	r9, #0
 80044e6:	9304      	str	r3, [sp, #16]
 80044e8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80044ea:	9308      	str	r3, [sp, #32]
 80044ec:	f8cd 901c 	str.w	r9, [sp, #28]
 80044f0:	464f      	mov	r7, r9
 80044f2:	220a      	movs	r2, #10
 80044f4:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80044f6:	7806      	ldrb	r6, [r0, #0]
 80044f8:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 80044fc:	b2d9      	uxtb	r1, r3
 80044fe:	2909      	cmp	r1, #9
 8004500:	d92a      	bls.n	8004558 <_strtod_l+0x1b8>
 8004502:	9905      	ldr	r1, [sp, #20]
 8004504:	462a      	mov	r2, r5
 8004506:	f002 ff1f 	bl	8007348 <strncmp>
 800450a:	b398      	cbz	r0, 8004574 <_strtod_l+0x1d4>
 800450c:	2000      	movs	r0, #0
 800450e:	4632      	mov	r2, r6
 8004510:	463d      	mov	r5, r7
 8004512:	9005      	str	r0, [sp, #20]
 8004514:	4603      	mov	r3, r0
 8004516:	2a65      	cmp	r2, #101	; 0x65
 8004518:	d001      	beq.n	800451e <_strtod_l+0x17e>
 800451a:	2a45      	cmp	r2, #69	; 0x45
 800451c:	d118      	bne.n	8004550 <_strtod_l+0x1b0>
 800451e:	b91d      	cbnz	r5, 8004528 <_strtod_l+0x188>
 8004520:	9a04      	ldr	r2, [sp, #16]
 8004522:	4302      	orrs	r2, r0
 8004524:	d09e      	beq.n	8004464 <_strtod_l+0xc4>
 8004526:	2500      	movs	r5, #0
 8004528:	f8dd 805c 	ldr.w	r8, [sp, #92]	; 0x5c
 800452c:	f108 0201 	add.w	r2, r8, #1
 8004530:	9217      	str	r2, [sp, #92]	; 0x5c
 8004532:	f898 2001 	ldrb.w	r2, [r8, #1]
 8004536:	2a2b      	cmp	r2, #43	; 0x2b
 8004538:	d075      	beq.n	8004626 <_strtod_l+0x286>
 800453a:	2a2d      	cmp	r2, #45	; 0x2d
 800453c:	d07b      	beq.n	8004636 <_strtod_l+0x296>
 800453e:	f04f 0c00 	mov.w	ip, #0
 8004542:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8004546:	2909      	cmp	r1, #9
 8004548:	f240 8082 	bls.w	8004650 <_strtod_l+0x2b0>
 800454c:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 8004550:	2600      	movs	r6, #0
 8004552:	e09d      	b.n	8004690 <_strtod_l+0x2f0>
 8004554:	2300      	movs	r3, #0
 8004556:	e7c4      	b.n	80044e2 <_strtod_l+0x142>
 8004558:	2f08      	cmp	r7, #8
 800455a:	bfd8      	it	le
 800455c:	9907      	ldrle	r1, [sp, #28]
 800455e:	f100 0001 	add.w	r0, r0, #1
 8004562:	bfda      	itte	le
 8004564:	fb02 3301 	mlale	r3, r2, r1, r3
 8004568:	9307      	strle	r3, [sp, #28]
 800456a:	fb02 3909 	mlagt	r9, r2, r9, r3
 800456e:	3701      	adds	r7, #1
 8004570:	9017      	str	r0, [sp, #92]	; 0x5c
 8004572:	e7bf      	b.n	80044f4 <_strtod_l+0x154>
 8004574:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004576:	195a      	adds	r2, r3, r5
 8004578:	9217      	str	r2, [sp, #92]	; 0x5c
 800457a:	5d5a      	ldrb	r2, [r3, r5]
 800457c:	2f00      	cmp	r7, #0
 800457e:	d037      	beq.n	80045f0 <_strtod_l+0x250>
 8004580:	9005      	str	r0, [sp, #20]
 8004582:	463d      	mov	r5, r7
 8004584:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8004588:	2b09      	cmp	r3, #9
 800458a:	d912      	bls.n	80045b2 <_strtod_l+0x212>
 800458c:	2301      	movs	r3, #1
 800458e:	e7c2      	b.n	8004516 <_strtod_l+0x176>
 8004590:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004592:	1c5a      	adds	r2, r3, #1
 8004594:	9217      	str	r2, [sp, #92]	; 0x5c
 8004596:	785a      	ldrb	r2, [r3, #1]
 8004598:	3001      	adds	r0, #1
 800459a:	2a30      	cmp	r2, #48	; 0x30
 800459c:	d0f8      	beq.n	8004590 <_strtod_l+0x1f0>
 800459e:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 80045a2:	2b08      	cmp	r3, #8
 80045a4:	f200 84d9 	bhi.w	8004f5a <_strtod_l+0xbba>
 80045a8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80045aa:	9005      	str	r0, [sp, #20]
 80045ac:	2000      	movs	r0, #0
 80045ae:	9308      	str	r3, [sp, #32]
 80045b0:	4605      	mov	r5, r0
 80045b2:	3a30      	subs	r2, #48	; 0x30
 80045b4:	f100 0301 	add.w	r3, r0, #1
 80045b8:	d014      	beq.n	80045e4 <_strtod_l+0x244>
 80045ba:	9905      	ldr	r1, [sp, #20]
 80045bc:	4419      	add	r1, r3
 80045be:	9105      	str	r1, [sp, #20]
 80045c0:	462b      	mov	r3, r5
 80045c2:	eb00 0e05 	add.w	lr, r0, r5
 80045c6:	210a      	movs	r1, #10
 80045c8:	4573      	cmp	r3, lr
 80045ca:	d113      	bne.n	80045f4 <_strtod_l+0x254>
 80045cc:	182b      	adds	r3, r5, r0
 80045ce:	2b08      	cmp	r3, #8
 80045d0:	f105 0501 	add.w	r5, r5, #1
 80045d4:	4405      	add	r5, r0
 80045d6:	dc1c      	bgt.n	8004612 <_strtod_l+0x272>
 80045d8:	9907      	ldr	r1, [sp, #28]
 80045da:	230a      	movs	r3, #10
 80045dc:	fb03 2301 	mla	r3, r3, r1, r2
 80045e0:	9307      	str	r3, [sp, #28]
 80045e2:	2300      	movs	r3, #0
 80045e4:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80045e6:	1c51      	adds	r1, r2, #1
 80045e8:	9117      	str	r1, [sp, #92]	; 0x5c
 80045ea:	7852      	ldrb	r2, [r2, #1]
 80045ec:	4618      	mov	r0, r3
 80045ee:	e7c9      	b.n	8004584 <_strtod_l+0x1e4>
 80045f0:	4638      	mov	r0, r7
 80045f2:	e7d2      	b.n	800459a <_strtod_l+0x1fa>
 80045f4:	2b08      	cmp	r3, #8
 80045f6:	dc04      	bgt.n	8004602 <_strtod_l+0x262>
 80045f8:	9e07      	ldr	r6, [sp, #28]
 80045fa:	434e      	muls	r6, r1
 80045fc:	9607      	str	r6, [sp, #28]
 80045fe:	3301      	adds	r3, #1
 8004600:	e7e2      	b.n	80045c8 <_strtod_l+0x228>
 8004602:	f103 0c01 	add.w	ip, r3, #1
 8004606:	f1bc 0f10 	cmp.w	ip, #16
 800460a:	bfd8      	it	le
 800460c:	fb01 f909 	mulle.w	r9, r1, r9
 8004610:	e7f5      	b.n	80045fe <_strtod_l+0x25e>
 8004612:	2d10      	cmp	r5, #16
 8004614:	bfdc      	itt	le
 8004616:	230a      	movle	r3, #10
 8004618:	fb03 2909 	mlale	r9, r3, r9, r2
 800461c:	e7e1      	b.n	80045e2 <_strtod_l+0x242>
 800461e:	2300      	movs	r3, #0
 8004620:	9305      	str	r3, [sp, #20]
 8004622:	2301      	movs	r3, #1
 8004624:	e77c      	b.n	8004520 <_strtod_l+0x180>
 8004626:	f04f 0c00 	mov.w	ip, #0
 800462a:	f108 0202 	add.w	r2, r8, #2
 800462e:	9217      	str	r2, [sp, #92]	; 0x5c
 8004630:	f898 2002 	ldrb.w	r2, [r8, #2]
 8004634:	e785      	b.n	8004542 <_strtod_l+0x1a2>
 8004636:	f04f 0c01 	mov.w	ip, #1
 800463a:	e7f6      	b.n	800462a <_strtod_l+0x28a>
 800463c:	080086c0 	.word	0x080086c0
 8004640:	08008478 	.word	0x08008478
 8004644:	7ff00000 	.word	0x7ff00000
 8004648:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800464a:	1c51      	adds	r1, r2, #1
 800464c:	9117      	str	r1, [sp, #92]	; 0x5c
 800464e:	7852      	ldrb	r2, [r2, #1]
 8004650:	2a30      	cmp	r2, #48	; 0x30
 8004652:	d0f9      	beq.n	8004648 <_strtod_l+0x2a8>
 8004654:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 8004658:	2908      	cmp	r1, #8
 800465a:	f63f af79 	bhi.w	8004550 <_strtod_l+0x1b0>
 800465e:	f1a2 0e30 	sub.w	lr, r2, #48	; 0x30
 8004662:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8004664:	9206      	str	r2, [sp, #24]
 8004666:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8004668:	1c51      	adds	r1, r2, #1
 800466a:	9117      	str	r1, [sp, #92]	; 0x5c
 800466c:	7852      	ldrb	r2, [r2, #1]
 800466e:	f1a2 0630 	sub.w	r6, r2, #48	; 0x30
 8004672:	2e09      	cmp	r6, #9
 8004674:	d937      	bls.n	80046e6 <_strtod_l+0x346>
 8004676:	9e06      	ldr	r6, [sp, #24]
 8004678:	1b89      	subs	r1, r1, r6
 800467a:	2908      	cmp	r1, #8
 800467c:	f644 661f 	movw	r6, #19999	; 0x4e1f
 8004680:	dc02      	bgt.n	8004688 <_strtod_l+0x2e8>
 8004682:	4576      	cmp	r6, lr
 8004684:	bfa8      	it	ge
 8004686:	4676      	movge	r6, lr
 8004688:	f1bc 0f00 	cmp.w	ip, #0
 800468c:	d000      	beq.n	8004690 <_strtod_l+0x2f0>
 800468e:	4276      	negs	r6, r6
 8004690:	2d00      	cmp	r5, #0
 8004692:	d14d      	bne.n	8004730 <_strtod_l+0x390>
 8004694:	9904      	ldr	r1, [sp, #16]
 8004696:	4301      	orrs	r1, r0
 8004698:	f47f aec6 	bne.w	8004428 <_strtod_l+0x88>
 800469c:	2b00      	cmp	r3, #0
 800469e:	f47f aee1 	bne.w	8004464 <_strtod_l+0xc4>
 80046a2:	2a69      	cmp	r2, #105	; 0x69
 80046a4:	d027      	beq.n	80046f6 <_strtod_l+0x356>
 80046a6:	dc24      	bgt.n	80046f2 <_strtod_l+0x352>
 80046a8:	2a49      	cmp	r2, #73	; 0x49
 80046aa:	d024      	beq.n	80046f6 <_strtod_l+0x356>
 80046ac:	2a4e      	cmp	r2, #78	; 0x4e
 80046ae:	f47f aed9 	bne.w	8004464 <_strtod_l+0xc4>
 80046b2:	499f      	ldr	r1, [pc, #636]	; (8004930 <_strtod_l+0x590>)
 80046b4:	a817      	add	r0, sp, #92	; 0x5c
 80046b6:	f001 fe3d 	bl	8006334 <__match>
 80046ba:	2800      	cmp	r0, #0
 80046bc:	f43f aed2 	beq.w	8004464 <_strtod_l+0xc4>
 80046c0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80046c2:	781b      	ldrb	r3, [r3, #0]
 80046c4:	2b28      	cmp	r3, #40	; 0x28
 80046c6:	d12d      	bne.n	8004724 <_strtod_l+0x384>
 80046c8:	499a      	ldr	r1, [pc, #616]	; (8004934 <_strtod_l+0x594>)
 80046ca:	aa1a      	add	r2, sp, #104	; 0x68
 80046cc:	a817      	add	r0, sp, #92	; 0x5c
 80046ce:	f001 fe45 	bl	800635c <__hexnan>
 80046d2:	2805      	cmp	r0, #5
 80046d4:	d126      	bne.n	8004724 <_strtod_l+0x384>
 80046d6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80046d8:	f8dd a068 	ldr.w	sl, [sp, #104]	; 0x68
 80046dc:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
 80046e0:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
 80046e4:	e6a0      	b.n	8004428 <_strtod_l+0x88>
 80046e6:	210a      	movs	r1, #10
 80046e8:	fb01 2e0e 	mla	lr, r1, lr, r2
 80046ec:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 80046f0:	e7b9      	b.n	8004666 <_strtod_l+0x2c6>
 80046f2:	2a6e      	cmp	r2, #110	; 0x6e
 80046f4:	e7db      	b.n	80046ae <_strtod_l+0x30e>
 80046f6:	4990      	ldr	r1, [pc, #576]	; (8004938 <_strtod_l+0x598>)
 80046f8:	a817      	add	r0, sp, #92	; 0x5c
 80046fa:	f001 fe1b 	bl	8006334 <__match>
 80046fe:	2800      	cmp	r0, #0
 8004700:	f43f aeb0 	beq.w	8004464 <_strtod_l+0xc4>
 8004704:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004706:	498d      	ldr	r1, [pc, #564]	; (800493c <_strtod_l+0x59c>)
 8004708:	3b01      	subs	r3, #1
 800470a:	a817      	add	r0, sp, #92	; 0x5c
 800470c:	9317      	str	r3, [sp, #92]	; 0x5c
 800470e:	f001 fe11 	bl	8006334 <__match>
 8004712:	b910      	cbnz	r0, 800471a <_strtod_l+0x37a>
 8004714:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004716:	3301      	adds	r3, #1
 8004718:	9317      	str	r3, [sp, #92]	; 0x5c
 800471a:	f8df b230 	ldr.w	fp, [pc, #560]	; 800494c <_strtod_l+0x5ac>
 800471e:	f04f 0a00 	mov.w	sl, #0
 8004722:	e681      	b.n	8004428 <_strtod_l+0x88>
 8004724:	4886      	ldr	r0, [pc, #536]	; (8004940 <_strtod_l+0x5a0>)
 8004726:	f002 fdf7 	bl	8007318 <nan>
 800472a:	ec5b ab10 	vmov	sl, fp, d0
 800472e:	e67b      	b.n	8004428 <_strtod_l+0x88>
 8004730:	9b05      	ldr	r3, [sp, #20]
 8004732:	9807      	ldr	r0, [sp, #28]
 8004734:	1af3      	subs	r3, r6, r3
 8004736:	2f00      	cmp	r7, #0
 8004738:	bf08      	it	eq
 800473a:	462f      	moveq	r7, r5
 800473c:	2d10      	cmp	r5, #16
 800473e:	9306      	str	r3, [sp, #24]
 8004740:	46a8      	mov	r8, r5
 8004742:	bfa8      	it	ge
 8004744:	f04f 0810 	movge.w	r8, #16
 8004748:	f7fb fefc 	bl	8000544 <__aeabi_ui2d>
 800474c:	2d09      	cmp	r5, #9
 800474e:	4682      	mov	sl, r0
 8004750:	468b      	mov	fp, r1
 8004752:	dd13      	ble.n	800477c <_strtod_l+0x3dc>
 8004754:	4b7b      	ldr	r3, [pc, #492]	; (8004944 <_strtod_l+0x5a4>)
 8004756:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 800475a:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 800475e:	f7fb ff6b 	bl	8000638 <__aeabi_dmul>
 8004762:	4682      	mov	sl, r0
 8004764:	4648      	mov	r0, r9
 8004766:	468b      	mov	fp, r1
 8004768:	f7fb feec 	bl	8000544 <__aeabi_ui2d>
 800476c:	4602      	mov	r2, r0
 800476e:	460b      	mov	r3, r1
 8004770:	4650      	mov	r0, sl
 8004772:	4659      	mov	r1, fp
 8004774:	f7fb fdaa 	bl	80002cc <__adddf3>
 8004778:	4682      	mov	sl, r0
 800477a:	468b      	mov	fp, r1
 800477c:	2d0f      	cmp	r5, #15
 800477e:	dc38      	bgt.n	80047f2 <_strtod_l+0x452>
 8004780:	9b06      	ldr	r3, [sp, #24]
 8004782:	2b00      	cmp	r3, #0
 8004784:	f43f ae50 	beq.w	8004428 <_strtod_l+0x88>
 8004788:	dd24      	ble.n	80047d4 <_strtod_l+0x434>
 800478a:	2b16      	cmp	r3, #22
 800478c:	dc0b      	bgt.n	80047a6 <_strtod_l+0x406>
 800478e:	496d      	ldr	r1, [pc, #436]	; (8004944 <_strtod_l+0x5a4>)
 8004790:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004794:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004798:	4652      	mov	r2, sl
 800479a:	465b      	mov	r3, fp
 800479c:	f7fb ff4c 	bl	8000638 <__aeabi_dmul>
 80047a0:	4682      	mov	sl, r0
 80047a2:	468b      	mov	fp, r1
 80047a4:	e640      	b.n	8004428 <_strtod_l+0x88>
 80047a6:	9a06      	ldr	r2, [sp, #24]
 80047a8:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
 80047ac:	4293      	cmp	r3, r2
 80047ae:	db20      	blt.n	80047f2 <_strtod_l+0x452>
 80047b0:	4c64      	ldr	r4, [pc, #400]	; (8004944 <_strtod_l+0x5a4>)
 80047b2:	f1c5 050f 	rsb	r5, r5, #15
 80047b6:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 80047ba:	4652      	mov	r2, sl
 80047bc:	465b      	mov	r3, fp
 80047be:	e9d1 0100 	ldrd	r0, r1, [r1]
 80047c2:	f7fb ff39 	bl	8000638 <__aeabi_dmul>
 80047c6:	9b06      	ldr	r3, [sp, #24]
 80047c8:	1b5d      	subs	r5, r3, r5
 80047ca:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 80047ce:	e9d4 2300 	ldrd	r2, r3, [r4]
 80047d2:	e7e3      	b.n	800479c <_strtod_l+0x3fc>
 80047d4:	9b06      	ldr	r3, [sp, #24]
 80047d6:	3316      	adds	r3, #22
 80047d8:	db0b      	blt.n	80047f2 <_strtod_l+0x452>
 80047da:	9b05      	ldr	r3, [sp, #20]
 80047dc:	1b9e      	subs	r6, r3, r6
 80047de:	4b59      	ldr	r3, [pc, #356]	; (8004944 <_strtod_l+0x5a4>)
 80047e0:	eb03 06c6 	add.w	r6, r3, r6, lsl #3
 80047e4:	e9d6 2300 	ldrd	r2, r3, [r6]
 80047e8:	4650      	mov	r0, sl
 80047ea:	4659      	mov	r1, fp
 80047ec:	f7fc f84e 	bl	800088c <__aeabi_ddiv>
 80047f0:	e7d6      	b.n	80047a0 <_strtod_l+0x400>
 80047f2:	9b06      	ldr	r3, [sp, #24]
 80047f4:	eba5 0808 	sub.w	r8, r5, r8
 80047f8:	4498      	add	r8, r3
 80047fa:	f1b8 0f00 	cmp.w	r8, #0
 80047fe:	dd74      	ble.n	80048ea <_strtod_l+0x54a>
 8004800:	f018 030f 	ands.w	r3, r8, #15
 8004804:	d00a      	beq.n	800481c <_strtod_l+0x47c>
 8004806:	494f      	ldr	r1, [pc, #316]	; (8004944 <_strtod_l+0x5a4>)
 8004808:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800480c:	4652      	mov	r2, sl
 800480e:	465b      	mov	r3, fp
 8004810:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004814:	f7fb ff10 	bl	8000638 <__aeabi_dmul>
 8004818:	4682      	mov	sl, r0
 800481a:	468b      	mov	fp, r1
 800481c:	f038 080f 	bics.w	r8, r8, #15
 8004820:	d04f      	beq.n	80048c2 <_strtod_l+0x522>
 8004822:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 8004826:	dd22      	ble.n	800486e <_strtod_l+0x4ce>
 8004828:	2500      	movs	r5, #0
 800482a:	462e      	mov	r6, r5
 800482c:	9507      	str	r5, [sp, #28]
 800482e:	9505      	str	r5, [sp, #20]
 8004830:	2322      	movs	r3, #34	; 0x22
 8004832:	f8df b118 	ldr.w	fp, [pc, #280]	; 800494c <_strtod_l+0x5ac>
 8004836:	6023      	str	r3, [r4, #0]
 8004838:	f04f 0a00 	mov.w	sl, #0
 800483c:	9b07      	ldr	r3, [sp, #28]
 800483e:	2b00      	cmp	r3, #0
 8004840:	f43f adf2 	beq.w	8004428 <_strtod_l+0x88>
 8004844:	9918      	ldr	r1, [sp, #96]	; 0x60
 8004846:	4620      	mov	r0, r4
 8004848:	f001 fe90 	bl	800656c <_Bfree>
 800484c:	9905      	ldr	r1, [sp, #20]
 800484e:	4620      	mov	r0, r4
 8004850:	f001 fe8c 	bl	800656c <_Bfree>
 8004854:	4631      	mov	r1, r6
 8004856:	4620      	mov	r0, r4
 8004858:	f001 fe88 	bl	800656c <_Bfree>
 800485c:	9907      	ldr	r1, [sp, #28]
 800485e:	4620      	mov	r0, r4
 8004860:	f001 fe84 	bl	800656c <_Bfree>
 8004864:	4629      	mov	r1, r5
 8004866:	4620      	mov	r0, r4
 8004868:	f001 fe80 	bl	800656c <_Bfree>
 800486c:	e5dc      	b.n	8004428 <_strtod_l+0x88>
 800486e:	4b36      	ldr	r3, [pc, #216]	; (8004948 <_strtod_l+0x5a8>)
 8004870:	9304      	str	r3, [sp, #16]
 8004872:	2300      	movs	r3, #0
 8004874:	ea4f 1828 	mov.w	r8, r8, asr #4
 8004878:	4650      	mov	r0, sl
 800487a:	4659      	mov	r1, fp
 800487c:	4699      	mov	r9, r3
 800487e:	f1b8 0f01 	cmp.w	r8, #1
 8004882:	dc21      	bgt.n	80048c8 <_strtod_l+0x528>
 8004884:	b10b      	cbz	r3, 800488a <_strtod_l+0x4ea>
 8004886:	4682      	mov	sl, r0
 8004888:	468b      	mov	fp, r1
 800488a:	4b2f      	ldr	r3, [pc, #188]	; (8004948 <_strtod_l+0x5a8>)
 800488c:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
 8004890:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
 8004894:	4652      	mov	r2, sl
 8004896:	465b      	mov	r3, fp
 8004898:	e9d9 0100 	ldrd	r0, r1, [r9]
 800489c:	f7fb fecc 	bl	8000638 <__aeabi_dmul>
 80048a0:	4b2a      	ldr	r3, [pc, #168]	; (800494c <_strtod_l+0x5ac>)
 80048a2:	460a      	mov	r2, r1
 80048a4:	400b      	ands	r3, r1
 80048a6:	492a      	ldr	r1, [pc, #168]	; (8004950 <_strtod_l+0x5b0>)
 80048a8:	428b      	cmp	r3, r1
 80048aa:	4682      	mov	sl, r0
 80048ac:	d8bc      	bhi.n	8004828 <_strtod_l+0x488>
 80048ae:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 80048b2:	428b      	cmp	r3, r1
 80048b4:	bf86      	itte	hi
 80048b6:	f8df b09c 	ldrhi.w	fp, [pc, #156]	; 8004954 <_strtod_l+0x5b4>
 80048ba:	f04f 3aff 	movhi.w	sl, #4294967295	; 0xffffffff
 80048be:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
 80048c2:	2300      	movs	r3, #0
 80048c4:	9304      	str	r3, [sp, #16]
 80048c6:	e084      	b.n	80049d2 <_strtod_l+0x632>
 80048c8:	f018 0f01 	tst.w	r8, #1
 80048cc:	d005      	beq.n	80048da <_strtod_l+0x53a>
 80048ce:	9b04      	ldr	r3, [sp, #16]
 80048d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80048d4:	f7fb feb0 	bl	8000638 <__aeabi_dmul>
 80048d8:	2301      	movs	r3, #1
 80048da:	9a04      	ldr	r2, [sp, #16]
 80048dc:	3208      	adds	r2, #8
 80048de:	f109 0901 	add.w	r9, r9, #1
 80048e2:	ea4f 0868 	mov.w	r8, r8, asr #1
 80048e6:	9204      	str	r2, [sp, #16]
 80048e8:	e7c9      	b.n	800487e <_strtod_l+0x4de>
 80048ea:	d0ea      	beq.n	80048c2 <_strtod_l+0x522>
 80048ec:	f1c8 0800 	rsb	r8, r8, #0
 80048f0:	f018 020f 	ands.w	r2, r8, #15
 80048f4:	d00a      	beq.n	800490c <_strtod_l+0x56c>
 80048f6:	4b13      	ldr	r3, [pc, #76]	; (8004944 <_strtod_l+0x5a4>)
 80048f8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80048fc:	4650      	mov	r0, sl
 80048fe:	4659      	mov	r1, fp
 8004900:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004904:	f7fb ffc2 	bl	800088c <__aeabi_ddiv>
 8004908:	4682      	mov	sl, r0
 800490a:	468b      	mov	fp, r1
 800490c:	ea5f 1828 	movs.w	r8, r8, asr #4
 8004910:	d0d7      	beq.n	80048c2 <_strtod_l+0x522>
 8004912:	f1b8 0f1f 	cmp.w	r8, #31
 8004916:	dd1f      	ble.n	8004958 <_strtod_l+0x5b8>
 8004918:	2500      	movs	r5, #0
 800491a:	462e      	mov	r6, r5
 800491c:	9507      	str	r5, [sp, #28]
 800491e:	9505      	str	r5, [sp, #20]
 8004920:	2322      	movs	r3, #34	; 0x22
 8004922:	f04f 0a00 	mov.w	sl, #0
 8004926:	f04f 0b00 	mov.w	fp, #0
 800492a:	6023      	str	r3, [r4, #0]
 800492c:	e786      	b.n	800483c <_strtod_l+0x49c>
 800492e:	bf00      	nop
 8004930:	08008449 	.word	0x08008449
 8004934:	0800848c 	.word	0x0800848c
 8004938:	08008441 	.word	0x08008441
 800493c:	080085cc 	.word	0x080085cc
 8004940:	08008878 	.word	0x08008878
 8004944:	08008758 	.word	0x08008758
 8004948:	08008730 	.word	0x08008730
 800494c:	7ff00000 	.word	0x7ff00000
 8004950:	7ca00000 	.word	0x7ca00000
 8004954:	7fefffff 	.word	0x7fefffff
 8004958:	f018 0310 	ands.w	r3, r8, #16
 800495c:	bf18      	it	ne
 800495e:	236a      	movne	r3, #106	; 0x6a
 8004960:	f8df 93ac 	ldr.w	r9, [pc, #940]	; 8004d10 <_strtod_l+0x970>
 8004964:	9304      	str	r3, [sp, #16]
 8004966:	4650      	mov	r0, sl
 8004968:	4659      	mov	r1, fp
 800496a:	2300      	movs	r3, #0
 800496c:	f018 0f01 	tst.w	r8, #1
 8004970:	d004      	beq.n	800497c <_strtod_l+0x5dc>
 8004972:	e9d9 2300 	ldrd	r2, r3, [r9]
 8004976:	f7fb fe5f 	bl	8000638 <__aeabi_dmul>
 800497a:	2301      	movs	r3, #1
 800497c:	ea5f 0868 	movs.w	r8, r8, asr #1
 8004980:	f109 0908 	add.w	r9, r9, #8
 8004984:	d1f2      	bne.n	800496c <_strtod_l+0x5cc>
 8004986:	b10b      	cbz	r3, 800498c <_strtod_l+0x5ec>
 8004988:	4682      	mov	sl, r0
 800498a:	468b      	mov	fp, r1
 800498c:	9b04      	ldr	r3, [sp, #16]
 800498e:	b1c3      	cbz	r3, 80049c2 <_strtod_l+0x622>
 8004990:	f3cb 520a 	ubfx	r2, fp, #20, #11
 8004994:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8004998:	2b00      	cmp	r3, #0
 800499a:	4659      	mov	r1, fp
 800499c:	dd11      	ble.n	80049c2 <_strtod_l+0x622>
 800499e:	2b1f      	cmp	r3, #31
 80049a0:	f340 8124 	ble.w	8004bec <_strtod_l+0x84c>
 80049a4:	2b34      	cmp	r3, #52	; 0x34
 80049a6:	bfde      	ittt	le
 80049a8:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 80049ac:	f04f 33ff 	movle.w	r3, #4294967295	; 0xffffffff
 80049b0:	fa03 f202 	lslle.w	r2, r3, r2
 80049b4:	f04f 0a00 	mov.w	sl, #0
 80049b8:	bfcc      	ite	gt
 80049ba:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
 80049be:	ea02 0b01 	andle.w	fp, r2, r1
 80049c2:	2200      	movs	r2, #0
 80049c4:	2300      	movs	r3, #0
 80049c6:	4650      	mov	r0, sl
 80049c8:	4659      	mov	r1, fp
 80049ca:	f7fc f89d 	bl	8000b08 <__aeabi_dcmpeq>
 80049ce:	2800      	cmp	r0, #0
 80049d0:	d1a2      	bne.n	8004918 <_strtod_l+0x578>
 80049d2:	9b07      	ldr	r3, [sp, #28]
 80049d4:	9300      	str	r3, [sp, #0]
 80049d6:	9908      	ldr	r1, [sp, #32]
 80049d8:	462b      	mov	r3, r5
 80049da:	463a      	mov	r2, r7
 80049dc:	4620      	mov	r0, r4
 80049de:	f001 fe2d 	bl	800663c <__s2b>
 80049e2:	9007      	str	r0, [sp, #28]
 80049e4:	2800      	cmp	r0, #0
 80049e6:	f43f af1f 	beq.w	8004828 <_strtod_l+0x488>
 80049ea:	9b05      	ldr	r3, [sp, #20]
 80049ec:	1b9e      	subs	r6, r3, r6
 80049ee:	9b06      	ldr	r3, [sp, #24]
 80049f0:	2b00      	cmp	r3, #0
 80049f2:	bfb4      	ite	lt
 80049f4:	4633      	movlt	r3, r6
 80049f6:	2300      	movge	r3, #0
 80049f8:	930c      	str	r3, [sp, #48]	; 0x30
 80049fa:	9b06      	ldr	r3, [sp, #24]
 80049fc:	2500      	movs	r5, #0
 80049fe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8004a02:	9312      	str	r3, [sp, #72]	; 0x48
 8004a04:	462e      	mov	r6, r5
 8004a06:	9b07      	ldr	r3, [sp, #28]
 8004a08:	4620      	mov	r0, r4
 8004a0a:	6859      	ldr	r1, [r3, #4]
 8004a0c:	f001 fd6e 	bl	80064ec <_Balloc>
 8004a10:	9005      	str	r0, [sp, #20]
 8004a12:	2800      	cmp	r0, #0
 8004a14:	f43f af0c 	beq.w	8004830 <_strtod_l+0x490>
 8004a18:	9b07      	ldr	r3, [sp, #28]
 8004a1a:	691a      	ldr	r2, [r3, #16]
 8004a1c:	3202      	adds	r2, #2
 8004a1e:	f103 010c 	add.w	r1, r3, #12
 8004a22:	0092      	lsls	r2, r2, #2
 8004a24:	300c      	adds	r0, #12
 8004a26:	f001 fd53 	bl	80064d0 <memcpy>
 8004a2a:	ec4b ab10 	vmov	d0, sl, fp
 8004a2e:	aa1a      	add	r2, sp, #104	; 0x68
 8004a30:	a919      	add	r1, sp, #100	; 0x64
 8004a32:	4620      	mov	r0, r4
 8004a34:	f002 f948 	bl	8006cc8 <__d2b>
 8004a38:	ec4b ab18 	vmov	d8, sl, fp
 8004a3c:	9018      	str	r0, [sp, #96]	; 0x60
 8004a3e:	2800      	cmp	r0, #0
 8004a40:	f43f aef6 	beq.w	8004830 <_strtod_l+0x490>
 8004a44:	2101      	movs	r1, #1
 8004a46:	4620      	mov	r0, r4
 8004a48:	f001 fe92 	bl	8006770 <__i2b>
 8004a4c:	4606      	mov	r6, r0
 8004a4e:	2800      	cmp	r0, #0
 8004a50:	f43f aeee 	beq.w	8004830 <_strtod_l+0x490>
 8004a54:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004a56:	9904      	ldr	r1, [sp, #16]
 8004a58:	2b00      	cmp	r3, #0
 8004a5a:	bfab      	itete	ge
 8004a5c:	9a0c      	ldrge	r2, [sp, #48]	; 0x30
 8004a5e:	9a12      	ldrlt	r2, [sp, #72]	; 0x48
 8004a60:	9f12      	ldrge	r7, [sp, #72]	; 0x48
 8004a62:	f8dd 9030 	ldrlt.w	r9, [sp, #48]	; 0x30
 8004a66:	bfac      	ite	ge
 8004a68:	eb03 0902 	addge.w	r9, r3, r2
 8004a6c:	1ad7      	sublt	r7, r2, r3
 8004a6e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8004a70:	eba3 0801 	sub.w	r8, r3, r1
 8004a74:	4490      	add	r8, r2
 8004a76:	4ba1      	ldr	r3, [pc, #644]	; (8004cfc <_strtod_l+0x95c>)
 8004a78:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 8004a7c:	4598      	cmp	r8, r3
 8004a7e:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8004a82:	f280 80c7 	bge.w	8004c14 <_strtod_l+0x874>
 8004a86:	eba3 0308 	sub.w	r3, r3, r8
 8004a8a:	2b1f      	cmp	r3, #31
 8004a8c:	eba2 0203 	sub.w	r2, r2, r3
 8004a90:	f04f 0101 	mov.w	r1, #1
 8004a94:	f300 80b1 	bgt.w	8004bfa <_strtod_l+0x85a>
 8004a98:	fa01 f303 	lsl.w	r3, r1, r3
 8004a9c:	930d      	str	r3, [sp, #52]	; 0x34
 8004a9e:	2300      	movs	r3, #0
 8004aa0:	9308      	str	r3, [sp, #32]
 8004aa2:	eb09 0802 	add.w	r8, r9, r2
 8004aa6:	9b04      	ldr	r3, [sp, #16]
 8004aa8:	45c1      	cmp	r9, r8
 8004aaa:	4417      	add	r7, r2
 8004aac:	441f      	add	r7, r3
 8004aae:	464b      	mov	r3, r9
 8004ab0:	bfa8      	it	ge
 8004ab2:	4643      	movge	r3, r8
 8004ab4:	42bb      	cmp	r3, r7
 8004ab6:	bfa8      	it	ge
 8004ab8:	463b      	movge	r3, r7
 8004aba:	2b00      	cmp	r3, #0
 8004abc:	bfc2      	ittt	gt
 8004abe:	eba8 0803 	subgt.w	r8, r8, r3
 8004ac2:	1aff      	subgt	r7, r7, r3
 8004ac4:	eba9 0903 	subgt.w	r9, r9, r3
 8004ac8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004aca:	2b00      	cmp	r3, #0
 8004acc:	dd17      	ble.n	8004afe <_strtod_l+0x75e>
 8004ace:	4631      	mov	r1, r6
 8004ad0:	461a      	mov	r2, r3
 8004ad2:	4620      	mov	r0, r4
 8004ad4:	f001 ff0c 	bl	80068f0 <__pow5mult>
 8004ad8:	4606      	mov	r6, r0
 8004ada:	2800      	cmp	r0, #0
 8004adc:	f43f aea8 	beq.w	8004830 <_strtod_l+0x490>
 8004ae0:	4601      	mov	r1, r0
 8004ae2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8004ae4:	4620      	mov	r0, r4
 8004ae6:	f001 fe59 	bl	800679c <__multiply>
 8004aea:	900b      	str	r0, [sp, #44]	; 0x2c
 8004aec:	2800      	cmp	r0, #0
 8004aee:	f43f ae9f 	beq.w	8004830 <_strtod_l+0x490>
 8004af2:	9918      	ldr	r1, [sp, #96]	; 0x60
 8004af4:	4620      	mov	r0, r4
 8004af6:	f001 fd39 	bl	800656c <_Bfree>
 8004afa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004afc:	9318      	str	r3, [sp, #96]	; 0x60
 8004afe:	f1b8 0f00 	cmp.w	r8, #0
 8004b02:	f300 808c 	bgt.w	8004c1e <_strtod_l+0x87e>
 8004b06:	9b06      	ldr	r3, [sp, #24]
 8004b08:	2b00      	cmp	r3, #0
 8004b0a:	dd08      	ble.n	8004b1e <_strtod_l+0x77e>
 8004b0c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004b0e:	9905      	ldr	r1, [sp, #20]
 8004b10:	4620      	mov	r0, r4
 8004b12:	f001 feed 	bl	80068f0 <__pow5mult>
 8004b16:	9005      	str	r0, [sp, #20]
 8004b18:	2800      	cmp	r0, #0
 8004b1a:	f43f ae89 	beq.w	8004830 <_strtod_l+0x490>
 8004b1e:	2f00      	cmp	r7, #0
 8004b20:	dd08      	ble.n	8004b34 <_strtod_l+0x794>
 8004b22:	9905      	ldr	r1, [sp, #20]
 8004b24:	463a      	mov	r2, r7
 8004b26:	4620      	mov	r0, r4
 8004b28:	f001 ff3c 	bl	80069a4 <__lshift>
 8004b2c:	9005      	str	r0, [sp, #20]
 8004b2e:	2800      	cmp	r0, #0
 8004b30:	f43f ae7e 	beq.w	8004830 <_strtod_l+0x490>
 8004b34:	f1b9 0f00 	cmp.w	r9, #0
 8004b38:	dd08      	ble.n	8004b4c <_strtod_l+0x7ac>
 8004b3a:	4631      	mov	r1, r6
 8004b3c:	464a      	mov	r2, r9
 8004b3e:	4620      	mov	r0, r4
 8004b40:	f001 ff30 	bl	80069a4 <__lshift>
 8004b44:	4606      	mov	r6, r0
 8004b46:	2800      	cmp	r0, #0
 8004b48:	f43f ae72 	beq.w	8004830 <_strtod_l+0x490>
 8004b4c:	9a05      	ldr	r2, [sp, #20]
 8004b4e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8004b50:	4620      	mov	r0, r4
 8004b52:	f001 ffb3 	bl	8006abc <__mdiff>
 8004b56:	4605      	mov	r5, r0
 8004b58:	2800      	cmp	r0, #0
 8004b5a:	f43f ae69 	beq.w	8004830 <_strtod_l+0x490>
 8004b5e:	68c3      	ldr	r3, [r0, #12]
 8004b60:	930b      	str	r3, [sp, #44]	; 0x2c
 8004b62:	2300      	movs	r3, #0
 8004b64:	60c3      	str	r3, [r0, #12]
 8004b66:	4631      	mov	r1, r6
 8004b68:	f001 ff8c 	bl	8006a84 <__mcmp>
 8004b6c:	2800      	cmp	r0, #0
 8004b6e:	da60      	bge.n	8004c32 <_strtod_l+0x892>
 8004b70:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004b72:	ea53 030a 	orrs.w	r3, r3, sl
 8004b76:	f040 8082 	bne.w	8004c7e <_strtod_l+0x8de>
 8004b7a:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8004b7e:	2b00      	cmp	r3, #0
 8004b80:	d17d      	bne.n	8004c7e <_strtod_l+0x8de>
 8004b82:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8004b86:	0d1b      	lsrs	r3, r3, #20
 8004b88:	051b      	lsls	r3, r3, #20
 8004b8a:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8004b8e:	d976      	bls.n	8004c7e <_strtod_l+0x8de>
 8004b90:	696b      	ldr	r3, [r5, #20]
 8004b92:	b913      	cbnz	r3, 8004b9a <_strtod_l+0x7fa>
 8004b94:	692b      	ldr	r3, [r5, #16]
 8004b96:	2b01      	cmp	r3, #1
 8004b98:	dd71      	ble.n	8004c7e <_strtod_l+0x8de>
 8004b9a:	4629      	mov	r1, r5
 8004b9c:	2201      	movs	r2, #1
 8004b9e:	4620      	mov	r0, r4
 8004ba0:	f001 ff00 	bl	80069a4 <__lshift>
 8004ba4:	4631      	mov	r1, r6
 8004ba6:	4605      	mov	r5, r0
 8004ba8:	f001 ff6c 	bl	8006a84 <__mcmp>
 8004bac:	2800      	cmp	r0, #0
 8004bae:	dd66      	ble.n	8004c7e <_strtod_l+0x8de>
 8004bb0:	9904      	ldr	r1, [sp, #16]
 8004bb2:	4a53      	ldr	r2, [pc, #332]	; (8004d00 <_strtod_l+0x960>)
 8004bb4:	465b      	mov	r3, fp
 8004bb6:	2900      	cmp	r1, #0
 8004bb8:	f000 8081 	beq.w	8004cbe <_strtod_l+0x91e>
 8004bbc:	ea02 010b 	and.w	r1, r2, fp
 8004bc0:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8004bc4:	dc7b      	bgt.n	8004cbe <_strtod_l+0x91e>
 8004bc6:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8004bca:	f77f aea9 	ble.w	8004920 <_strtod_l+0x580>
 8004bce:	4b4d      	ldr	r3, [pc, #308]	; (8004d04 <_strtod_l+0x964>)
 8004bd0:	4650      	mov	r0, sl
 8004bd2:	4659      	mov	r1, fp
 8004bd4:	2200      	movs	r2, #0
 8004bd6:	f7fb fd2f 	bl	8000638 <__aeabi_dmul>
 8004bda:	460b      	mov	r3, r1
 8004bdc:	4303      	orrs	r3, r0
 8004bde:	bf08      	it	eq
 8004be0:	2322      	moveq	r3, #34	; 0x22
 8004be2:	4682      	mov	sl, r0
 8004be4:	468b      	mov	fp, r1
 8004be6:	bf08      	it	eq
 8004be8:	6023      	streq	r3, [r4, #0]
 8004bea:	e62b      	b.n	8004844 <_strtod_l+0x4a4>
 8004bec:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8004bf0:	fa02 f303 	lsl.w	r3, r2, r3
 8004bf4:	ea03 0a0a 	and.w	sl, r3, sl
 8004bf8:	e6e3      	b.n	80049c2 <_strtod_l+0x622>
 8004bfa:	f1c8 487f 	rsb	r8, r8, #4278190080	; 0xff000000
 8004bfe:	f508 087f 	add.w	r8, r8, #16711680	; 0xff0000
 8004c02:	f508 487b 	add.w	r8, r8, #64256	; 0xfb00
 8004c06:	f108 08e2 	add.w	r8, r8, #226	; 0xe2
 8004c0a:	fa01 f308 	lsl.w	r3, r1, r8
 8004c0e:	9308      	str	r3, [sp, #32]
 8004c10:	910d      	str	r1, [sp, #52]	; 0x34
 8004c12:	e746      	b.n	8004aa2 <_strtod_l+0x702>
 8004c14:	2300      	movs	r3, #0
 8004c16:	9308      	str	r3, [sp, #32]
 8004c18:	2301      	movs	r3, #1
 8004c1a:	930d      	str	r3, [sp, #52]	; 0x34
 8004c1c:	e741      	b.n	8004aa2 <_strtod_l+0x702>
 8004c1e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8004c20:	4642      	mov	r2, r8
 8004c22:	4620      	mov	r0, r4
 8004c24:	f001 febe 	bl	80069a4 <__lshift>
 8004c28:	9018      	str	r0, [sp, #96]	; 0x60
 8004c2a:	2800      	cmp	r0, #0
 8004c2c:	f47f af6b 	bne.w	8004b06 <_strtod_l+0x766>
 8004c30:	e5fe      	b.n	8004830 <_strtod_l+0x490>
 8004c32:	465f      	mov	r7, fp
 8004c34:	d16e      	bne.n	8004d14 <_strtod_l+0x974>
 8004c36:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004c38:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8004c3c:	b342      	cbz	r2, 8004c90 <_strtod_l+0x8f0>
 8004c3e:	4a32      	ldr	r2, [pc, #200]	; (8004d08 <_strtod_l+0x968>)
 8004c40:	4293      	cmp	r3, r2
 8004c42:	d128      	bne.n	8004c96 <_strtod_l+0x8f6>
 8004c44:	9b04      	ldr	r3, [sp, #16]
 8004c46:	4651      	mov	r1, sl
 8004c48:	b1eb      	cbz	r3, 8004c86 <_strtod_l+0x8e6>
 8004c4a:	4b2d      	ldr	r3, [pc, #180]	; (8004d00 <_strtod_l+0x960>)
 8004c4c:	403b      	ands	r3, r7
 8004c4e:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8004c52:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8004c56:	d819      	bhi.n	8004c8c <_strtod_l+0x8ec>
 8004c58:	0d1b      	lsrs	r3, r3, #20
 8004c5a:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8004c5e:	fa02 f303 	lsl.w	r3, r2, r3
 8004c62:	4299      	cmp	r1, r3
 8004c64:	d117      	bne.n	8004c96 <_strtod_l+0x8f6>
 8004c66:	4b29      	ldr	r3, [pc, #164]	; (8004d0c <_strtod_l+0x96c>)
 8004c68:	429f      	cmp	r7, r3
 8004c6a:	d102      	bne.n	8004c72 <_strtod_l+0x8d2>
 8004c6c:	3101      	adds	r1, #1
 8004c6e:	f43f addf 	beq.w	8004830 <_strtod_l+0x490>
 8004c72:	4b23      	ldr	r3, [pc, #140]	; (8004d00 <_strtod_l+0x960>)
 8004c74:	403b      	ands	r3, r7
 8004c76:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
 8004c7a:	f04f 0a00 	mov.w	sl, #0
 8004c7e:	9b04      	ldr	r3, [sp, #16]
 8004c80:	2b00      	cmp	r3, #0
 8004c82:	d1a4      	bne.n	8004bce <_strtod_l+0x82e>
 8004c84:	e5de      	b.n	8004844 <_strtod_l+0x4a4>
 8004c86:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8004c8a:	e7ea      	b.n	8004c62 <_strtod_l+0x8c2>
 8004c8c:	4613      	mov	r3, r2
 8004c8e:	e7e8      	b.n	8004c62 <_strtod_l+0x8c2>
 8004c90:	ea53 030a 	orrs.w	r3, r3, sl
 8004c94:	d08c      	beq.n	8004bb0 <_strtod_l+0x810>
 8004c96:	9b08      	ldr	r3, [sp, #32]
 8004c98:	b1db      	cbz	r3, 8004cd2 <_strtod_l+0x932>
 8004c9a:	423b      	tst	r3, r7
 8004c9c:	d0ef      	beq.n	8004c7e <_strtod_l+0x8de>
 8004c9e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004ca0:	9a04      	ldr	r2, [sp, #16]
 8004ca2:	4650      	mov	r0, sl
 8004ca4:	4659      	mov	r1, fp
 8004ca6:	b1c3      	cbz	r3, 8004cda <_strtod_l+0x93a>
 8004ca8:	f7ff fb5e 	bl	8004368 <sulp>
 8004cac:	4602      	mov	r2, r0
 8004cae:	460b      	mov	r3, r1
 8004cb0:	ec51 0b18 	vmov	r0, r1, d8
 8004cb4:	f7fb fb0a 	bl	80002cc <__adddf3>
 8004cb8:	4682      	mov	sl, r0
 8004cba:	468b      	mov	fp, r1
 8004cbc:	e7df      	b.n	8004c7e <_strtod_l+0x8de>
 8004cbe:	4013      	ands	r3, r2
 8004cc0:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8004cc4:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 8004cc8:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 8004ccc:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
 8004cd0:	e7d5      	b.n	8004c7e <_strtod_l+0x8de>
 8004cd2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004cd4:	ea13 0f0a 	tst.w	r3, sl
 8004cd8:	e7e0      	b.n	8004c9c <_strtod_l+0x8fc>
 8004cda:	f7ff fb45 	bl	8004368 <sulp>
 8004cde:	4602      	mov	r2, r0
 8004ce0:	460b      	mov	r3, r1
 8004ce2:	ec51 0b18 	vmov	r0, r1, d8
 8004ce6:	f7fb faef 	bl	80002c8 <__aeabi_dsub>
 8004cea:	2200      	movs	r2, #0
 8004cec:	2300      	movs	r3, #0
 8004cee:	4682      	mov	sl, r0
 8004cf0:	468b      	mov	fp, r1
 8004cf2:	f7fb ff09 	bl	8000b08 <__aeabi_dcmpeq>
 8004cf6:	2800      	cmp	r0, #0
 8004cf8:	d0c1      	beq.n	8004c7e <_strtod_l+0x8de>
 8004cfa:	e611      	b.n	8004920 <_strtod_l+0x580>
 8004cfc:	fffffc02 	.word	0xfffffc02
 8004d00:	7ff00000 	.word	0x7ff00000
 8004d04:	39500000 	.word	0x39500000
 8004d08:	000fffff 	.word	0x000fffff
 8004d0c:	7fefffff 	.word	0x7fefffff
 8004d10:	080084a0 	.word	0x080084a0
 8004d14:	4631      	mov	r1, r6
 8004d16:	4628      	mov	r0, r5
 8004d18:	f002 f832 	bl	8006d80 <__ratio>
 8004d1c:	ec59 8b10 	vmov	r8, r9, d0
 8004d20:	ee10 0a10 	vmov	r0, s0
 8004d24:	2200      	movs	r2, #0
 8004d26:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004d2a:	4649      	mov	r1, r9
 8004d2c:	f7fb ff00 	bl	8000b30 <__aeabi_dcmple>
 8004d30:	2800      	cmp	r0, #0
 8004d32:	d07a      	beq.n	8004e2a <_strtod_l+0xa8a>
 8004d34:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004d36:	2b00      	cmp	r3, #0
 8004d38:	d04a      	beq.n	8004dd0 <_strtod_l+0xa30>
 8004d3a:	4b95      	ldr	r3, [pc, #596]	; (8004f90 <_strtod_l+0xbf0>)
 8004d3c:	2200      	movs	r2, #0
 8004d3e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8004d42:	f8df 924c 	ldr.w	r9, [pc, #588]	; 8004f90 <_strtod_l+0xbf0>
 8004d46:	f04f 0800 	mov.w	r8, #0
 8004d4a:	4b92      	ldr	r3, [pc, #584]	; (8004f94 <_strtod_l+0xbf4>)
 8004d4c:	403b      	ands	r3, r7
 8004d4e:	930d      	str	r3, [sp, #52]	; 0x34
 8004d50:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004d52:	4b91      	ldr	r3, [pc, #580]	; (8004f98 <_strtod_l+0xbf8>)
 8004d54:	429a      	cmp	r2, r3
 8004d56:	f040 80b0 	bne.w	8004eba <_strtod_l+0xb1a>
 8004d5a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8004d5e:	f1a7 7b54 	sub.w	fp, r7, #55574528	; 0x3500000
 8004d62:	ec4b ab10 	vmov	d0, sl, fp
 8004d66:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8004d6a:	f001 ff31 	bl	8006bd0 <__ulp>
 8004d6e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8004d72:	ec53 2b10 	vmov	r2, r3, d0
 8004d76:	f7fb fc5f 	bl	8000638 <__aeabi_dmul>
 8004d7a:	4652      	mov	r2, sl
 8004d7c:	465b      	mov	r3, fp
 8004d7e:	f7fb faa5 	bl	80002cc <__adddf3>
 8004d82:	460b      	mov	r3, r1
 8004d84:	4983      	ldr	r1, [pc, #524]	; (8004f94 <_strtod_l+0xbf4>)
 8004d86:	4a85      	ldr	r2, [pc, #532]	; (8004f9c <_strtod_l+0xbfc>)
 8004d88:	4019      	ands	r1, r3
 8004d8a:	4291      	cmp	r1, r2
 8004d8c:	4682      	mov	sl, r0
 8004d8e:	d960      	bls.n	8004e52 <_strtod_l+0xab2>
 8004d90:	ee18 3a90 	vmov	r3, s17
 8004d94:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 8004d98:	4293      	cmp	r3, r2
 8004d9a:	d104      	bne.n	8004da6 <_strtod_l+0xa06>
 8004d9c:	ee18 3a10 	vmov	r3, s16
 8004da0:	3301      	adds	r3, #1
 8004da2:	f43f ad45 	beq.w	8004830 <_strtod_l+0x490>
 8004da6:	f8df b200 	ldr.w	fp, [pc, #512]	; 8004fa8 <_strtod_l+0xc08>
 8004daa:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
 8004dae:	9918      	ldr	r1, [sp, #96]	; 0x60
 8004db0:	4620      	mov	r0, r4
 8004db2:	f001 fbdb 	bl	800656c <_Bfree>
 8004db6:	9905      	ldr	r1, [sp, #20]
 8004db8:	4620      	mov	r0, r4
 8004dba:	f001 fbd7 	bl	800656c <_Bfree>
 8004dbe:	4631      	mov	r1, r6
 8004dc0:	4620      	mov	r0, r4
 8004dc2:	f001 fbd3 	bl	800656c <_Bfree>
 8004dc6:	4629      	mov	r1, r5
 8004dc8:	4620      	mov	r0, r4
 8004dca:	f001 fbcf 	bl	800656c <_Bfree>
 8004dce:	e61a      	b.n	8004a06 <_strtod_l+0x666>
 8004dd0:	f1ba 0f00 	cmp.w	sl, #0
 8004dd4:	d11b      	bne.n	8004e0e <_strtod_l+0xa6e>
 8004dd6:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8004dda:	b9f3      	cbnz	r3, 8004e1a <_strtod_l+0xa7a>
 8004ddc:	4b6c      	ldr	r3, [pc, #432]	; (8004f90 <_strtod_l+0xbf0>)
 8004dde:	2200      	movs	r2, #0
 8004de0:	4640      	mov	r0, r8
 8004de2:	4649      	mov	r1, r9
 8004de4:	f7fb fe9a 	bl	8000b1c <__aeabi_dcmplt>
 8004de8:	b9d0      	cbnz	r0, 8004e20 <_strtod_l+0xa80>
 8004dea:	4640      	mov	r0, r8
 8004dec:	4649      	mov	r1, r9
 8004dee:	4b6c      	ldr	r3, [pc, #432]	; (8004fa0 <_strtod_l+0xc00>)
 8004df0:	2200      	movs	r2, #0
 8004df2:	f7fb fc21 	bl	8000638 <__aeabi_dmul>
 8004df6:	4680      	mov	r8, r0
 8004df8:	4689      	mov	r9, r1
 8004dfa:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8004dfe:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
 8004e02:	9315      	str	r3, [sp, #84]	; 0x54
 8004e04:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 8004e08:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8004e0c:	e79d      	b.n	8004d4a <_strtod_l+0x9aa>
 8004e0e:	f1ba 0f01 	cmp.w	sl, #1
 8004e12:	d102      	bne.n	8004e1a <_strtod_l+0xa7a>
 8004e14:	2f00      	cmp	r7, #0
 8004e16:	f43f ad83 	beq.w	8004920 <_strtod_l+0x580>
 8004e1a:	4b62      	ldr	r3, [pc, #392]	; (8004fa4 <_strtod_l+0xc04>)
 8004e1c:	2200      	movs	r2, #0
 8004e1e:	e78e      	b.n	8004d3e <_strtod_l+0x99e>
 8004e20:	f8df 917c 	ldr.w	r9, [pc, #380]	; 8004fa0 <_strtod_l+0xc00>
 8004e24:	f04f 0800 	mov.w	r8, #0
 8004e28:	e7e7      	b.n	8004dfa <_strtod_l+0xa5a>
 8004e2a:	4b5d      	ldr	r3, [pc, #372]	; (8004fa0 <_strtod_l+0xc00>)
 8004e2c:	4640      	mov	r0, r8
 8004e2e:	4649      	mov	r1, r9
 8004e30:	2200      	movs	r2, #0
 8004e32:	f7fb fc01 	bl	8000638 <__aeabi_dmul>
 8004e36:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004e38:	4680      	mov	r8, r0
 8004e3a:	4689      	mov	r9, r1
 8004e3c:	b933      	cbnz	r3, 8004e4c <_strtod_l+0xaac>
 8004e3e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8004e42:	900e      	str	r0, [sp, #56]	; 0x38
 8004e44:	930f      	str	r3, [sp, #60]	; 0x3c
 8004e46:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 8004e4a:	e7dd      	b.n	8004e08 <_strtod_l+0xa68>
 8004e4c:	e9cd 890e 	strd	r8, r9, [sp, #56]	; 0x38
 8004e50:	e7f9      	b.n	8004e46 <_strtod_l+0xaa6>
 8004e52:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
 8004e56:	9b04      	ldr	r3, [sp, #16]
 8004e58:	2b00      	cmp	r3, #0
 8004e5a:	d1a8      	bne.n	8004dae <_strtod_l+0xa0e>
 8004e5c:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8004e60:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004e62:	0d1b      	lsrs	r3, r3, #20
 8004e64:	051b      	lsls	r3, r3, #20
 8004e66:	429a      	cmp	r2, r3
 8004e68:	d1a1      	bne.n	8004dae <_strtod_l+0xa0e>
 8004e6a:	4640      	mov	r0, r8
 8004e6c:	4649      	mov	r1, r9
 8004e6e:	f7fb ff43 	bl	8000cf8 <__aeabi_d2lz>
 8004e72:	f7fb fbb3 	bl	80005dc <__aeabi_l2d>
 8004e76:	4602      	mov	r2, r0
 8004e78:	460b      	mov	r3, r1
 8004e7a:	4640      	mov	r0, r8
 8004e7c:	4649      	mov	r1, r9
 8004e7e:	f7fb fa23 	bl	80002c8 <__aeabi_dsub>
 8004e82:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004e84:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8004e88:	ea43 030a 	orr.w	r3, r3, sl
 8004e8c:	4313      	orrs	r3, r2
 8004e8e:	4680      	mov	r8, r0
 8004e90:	4689      	mov	r9, r1
 8004e92:	d055      	beq.n	8004f40 <_strtod_l+0xba0>
 8004e94:	a336      	add	r3, pc, #216	; (adr r3, 8004f70 <_strtod_l+0xbd0>)
 8004e96:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004e9a:	f7fb fe3f 	bl	8000b1c <__aeabi_dcmplt>
 8004e9e:	2800      	cmp	r0, #0
 8004ea0:	f47f acd0 	bne.w	8004844 <_strtod_l+0x4a4>
 8004ea4:	a334      	add	r3, pc, #208	; (adr r3, 8004f78 <_strtod_l+0xbd8>)
 8004ea6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004eaa:	4640      	mov	r0, r8
 8004eac:	4649      	mov	r1, r9
 8004eae:	f7fb fe53 	bl	8000b58 <__aeabi_dcmpgt>
 8004eb2:	2800      	cmp	r0, #0
 8004eb4:	f43f af7b 	beq.w	8004dae <_strtod_l+0xa0e>
 8004eb8:	e4c4      	b.n	8004844 <_strtod_l+0x4a4>
 8004eba:	9b04      	ldr	r3, [sp, #16]
 8004ebc:	b333      	cbz	r3, 8004f0c <_strtod_l+0xb6c>
 8004ebe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004ec0:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8004ec4:	d822      	bhi.n	8004f0c <_strtod_l+0xb6c>
 8004ec6:	a32e      	add	r3, pc, #184	; (adr r3, 8004f80 <_strtod_l+0xbe0>)
 8004ec8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004ecc:	4640      	mov	r0, r8
 8004ece:	4649      	mov	r1, r9
 8004ed0:	f7fb fe2e 	bl	8000b30 <__aeabi_dcmple>
 8004ed4:	b1a0      	cbz	r0, 8004f00 <_strtod_l+0xb60>
 8004ed6:	4649      	mov	r1, r9
 8004ed8:	4640      	mov	r0, r8
 8004eda:	f7fb fe85 	bl	8000be8 <__aeabi_d2uiz>
 8004ede:	2801      	cmp	r0, #1
 8004ee0:	bf38      	it	cc
 8004ee2:	2001      	movcc	r0, #1
 8004ee4:	f7fb fb2e 	bl	8000544 <__aeabi_ui2d>
 8004ee8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004eea:	4680      	mov	r8, r0
 8004eec:	4689      	mov	r9, r1
 8004eee:	bb23      	cbnz	r3, 8004f3a <_strtod_l+0xb9a>
 8004ef0:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8004ef4:	9010      	str	r0, [sp, #64]	; 0x40
 8004ef6:	9311      	str	r3, [sp, #68]	; 0x44
 8004ef8:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8004efc:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8004f00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004f02:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004f04:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 8004f08:	1a9b      	subs	r3, r3, r2
 8004f0a:	9309      	str	r3, [sp, #36]	; 0x24
 8004f0c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8004f10:	eeb0 0a48 	vmov.f32	s0, s16
 8004f14:	eef0 0a68 	vmov.f32	s1, s17
 8004f18:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8004f1c:	f001 fe58 	bl	8006bd0 <__ulp>
 8004f20:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8004f24:	ec53 2b10 	vmov	r2, r3, d0
 8004f28:	f7fb fb86 	bl	8000638 <__aeabi_dmul>
 8004f2c:	ec53 2b18 	vmov	r2, r3, d8
 8004f30:	f7fb f9cc 	bl	80002cc <__adddf3>
 8004f34:	4682      	mov	sl, r0
 8004f36:	468b      	mov	fp, r1
 8004f38:	e78d      	b.n	8004e56 <_strtod_l+0xab6>
 8004f3a:	e9cd 8910 	strd	r8, r9, [sp, #64]	; 0x40
 8004f3e:	e7db      	b.n	8004ef8 <_strtod_l+0xb58>
 8004f40:	a311      	add	r3, pc, #68	; (adr r3, 8004f88 <_strtod_l+0xbe8>)
 8004f42:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004f46:	f7fb fde9 	bl	8000b1c <__aeabi_dcmplt>
 8004f4a:	e7b2      	b.n	8004eb2 <_strtod_l+0xb12>
 8004f4c:	2300      	movs	r3, #0
 8004f4e:	930a      	str	r3, [sp, #40]	; 0x28
 8004f50:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8004f52:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004f54:	6013      	str	r3, [r2, #0]
 8004f56:	f7ff ba6b 	b.w	8004430 <_strtod_l+0x90>
 8004f5a:	2a65      	cmp	r2, #101	; 0x65
 8004f5c:	f43f ab5f 	beq.w	800461e <_strtod_l+0x27e>
 8004f60:	2a45      	cmp	r2, #69	; 0x45
 8004f62:	f43f ab5c 	beq.w	800461e <_strtod_l+0x27e>
 8004f66:	2301      	movs	r3, #1
 8004f68:	f7ff bb94 	b.w	8004694 <_strtod_l+0x2f4>
 8004f6c:	f3af 8000 	nop.w
 8004f70:	94a03595 	.word	0x94a03595
 8004f74:	3fdfffff 	.word	0x3fdfffff
 8004f78:	35afe535 	.word	0x35afe535
 8004f7c:	3fe00000 	.word	0x3fe00000
 8004f80:	ffc00000 	.word	0xffc00000
 8004f84:	41dfffff 	.word	0x41dfffff
 8004f88:	94a03595 	.word	0x94a03595
 8004f8c:	3fcfffff 	.word	0x3fcfffff
 8004f90:	3ff00000 	.word	0x3ff00000
 8004f94:	7ff00000 	.word	0x7ff00000
 8004f98:	7fe00000 	.word	0x7fe00000
 8004f9c:	7c9fffff 	.word	0x7c9fffff
 8004fa0:	3fe00000 	.word	0x3fe00000
 8004fa4:	bff00000 	.word	0xbff00000
 8004fa8:	7fefffff 	.word	0x7fefffff

08004fac <_strtod_r>:
 8004fac:	4b01      	ldr	r3, [pc, #4]	; (8004fb4 <_strtod_r+0x8>)
 8004fae:	f7ff b9f7 	b.w	80043a0 <_strtod_l>
 8004fb2:	bf00      	nop
 8004fb4:	20000068 	.word	0x20000068

08004fb8 <_strtol_l.constprop.0>:
 8004fb8:	2b01      	cmp	r3, #1
 8004fba:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004fbe:	d001      	beq.n	8004fc4 <_strtol_l.constprop.0+0xc>
 8004fc0:	2b24      	cmp	r3, #36	; 0x24
 8004fc2:	d906      	bls.n	8004fd2 <_strtol_l.constprop.0+0x1a>
 8004fc4:	f7fe fafe 	bl	80035c4 <__errno>
 8004fc8:	2316      	movs	r3, #22
 8004fca:	6003      	str	r3, [r0, #0]
 8004fcc:	2000      	movs	r0, #0
 8004fce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004fd2:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 80050b8 <_strtol_l.constprop.0+0x100>
 8004fd6:	460d      	mov	r5, r1
 8004fd8:	462e      	mov	r6, r5
 8004fda:	f815 4b01 	ldrb.w	r4, [r5], #1
 8004fde:	f814 700c 	ldrb.w	r7, [r4, ip]
 8004fe2:	f017 0708 	ands.w	r7, r7, #8
 8004fe6:	d1f7      	bne.n	8004fd8 <_strtol_l.constprop.0+0x20>
 8004fe8:	2c2d      	cmp	r4, #45	; 0x2d
 8004fea:	d132      	bne.n	8005052 <_strtol_l.constprop.0+0x9a>
 8004fec:	782c      	ldrb	r4, [r5, #0]
 8004fee:	2701      	movs	r7, #1
 8004ff0:	1cb5      	adds	r5, r6, #2
 8004ff2:	2b00      	cmp	r3, #0
 8004ff4:	d05b      	beq.n	80050ae <_strtol_l.constprop.0+0xf6>
 8004ff6:	2b10      	cmp	r3, #16
 8004ff8:	d109      	bne.n	800500e <_strtol_l.constprop.0+0x56>
 8004ffa:	2c30      	cmp	r4, #48	; 0x30
 8004ffc:	d107      	bne.n	800500e <_strtol_l.constprop.0+0x56>
 8004ffe:	782c      	ldrb	r4, [r5, #0]
 8005000:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 8005004:	2c58      	cmp	r4, #88	; 0x58
 8005006:	d14d      	bne.n	80050a4 <_strtol_l.constprop.0+0xec>
 8005008:	786c      	ldrb	r4, [r5, #1]
 800500a:	2310      	movs	r3, #16
 800500c:	3502      	adds	r5, #2
 800500e:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 8005012:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 8005016:	f04f 0c00 	mov.w	ip, #0
 800501a:	fbb8 f9f3 	udiv	r9, r8, r3
 800501e:	4666      	mov	r6, ip
 8005020:	fb03 8a19 	mls	sl, r3, r9, r8
 8005024:	f1a4 0e30 	sub.w	lr, r4, #48	; 0x30
 8005028:	f1be 0f09 	cmp.w	lr, #9
 800502c:	d816      	bhi.n	800505c <_strtol_l.constprop.0+0xa4>
 800502e:	4674      	mov	r4, lr
 8005030:	42a3      	cmp	r3, r4
 8005032:	dd24      	ble.n	800507e <_strtol_l.constprop.0+0xc6>
 8005034:	f1bc 0f00 	cmp.w	ip, #0
 8005038:	db1e      	blt.n	8005078 <_strtol_l.constprop.0+0xc0>
 800503a:	45b1      	cmp	r9, r6
 800503c:	d31c      	bcc.n	8005078 <_strtol_l.constprop.0+0xc0>
 800503e:	d101      	bne.n	8005044 <_strtol_l.constprop.0+0x8c>
 8005040:	45a2      	cmp	sl, r4
 8005042:	db19      	blt.n	8005078 <_strtol_l.constprop.0+0xc0>
 8005044:	fb06 4603 	mla	r6, r6, r3, r4
 8005048:	f04f 0c01 	mov.w	ip, #1
 800504c:	f815 4b01 	ldrb.w	r4, [r5], #1
 8005050:	e7e8      	b.n	8005024 <_strtol_l.constprop.0+0x6c>
 8005052:	2c2b      	cmp	r4, #43	; 0x2b
 8005054:	bf04      	itt	eq
 8005056:	782c      	ldrbeq	r4, [r5, #0]
 8005058:	1cb5      	addeq	r5, r6, #2
 800505a:	e7ca      	b.n	8004ff2 <_strtol_l.constprop.0+0x3a>
 800505c:	f1a4 0e41 	sub.w	lr, r4, #65	; 0x41
 8005060:	f1be 0f19 	cmp.w	lr, #25
 8005064:	d801      	bhi.n	800506a <_strtol_l.constprop.0+0xb2>
 8005066:	3c37      	subs	r4, #55	; 0x37
 8005068:	e7e2      	b.n	8005030 <_strtol_l.constprop.0+0x78>
 800506a:	f1a4 0e61 	sub.w	lr, r4, #97	; 0x61
 800506e:	f1be 0f19 	cmp.w	lr, #25
 8005072:	d804      	bhi.n	800507e <_strtol_l.constprop.0+0xc6>
 8005074:	3c57      	subs	r4, #87	; 0x57
 8005076:	e7db      	b.n	8005030 <_strtol_l.constprop.0+0x78>
 8005078:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 800507c:	e7e6      	b.n	800504c <_strtol_l.constprop.0+0x94>
 800507e:	f1bc 0f00 	cmp.w	ip, #0
 8005082:	da05      	bge.n	8005090 <_strtol_l.constprop.0+0xd8>
 8005084:	2322      	movs	r3, #34	; 0x22
 8005086:	6003      	str	r3, [r0, #0]
 8005088:	4646      	mov	r6, r8
 800508a:	b942      	cbnz	r2, 800509e <_strtol_l.constprop.0+0xe6>
 800508c:	4630      	mov	r0, r6
 800508e:	e79e      	b.n	8004fce <_strtol_l.constprop.0+0x16>
 8005090:	b107      	cbz	r7, 8005094 <_strtol_l.constprop.0+0xdc>
 8005092:	4276      	negs	r6, r6
 8005094:	2a00      	cmp	r2, #0
 8005096:	d0f9      	beq.n	800508c <_strtol_l.constprop.0+0xd4>
 8005098:	f1bc 0f00 	cmp.w	ip, #0
 800509c:	d000      	beq.n	80050a0 <_strtol_l.constprop.0+0xe8>
 800509e:	1e69      	subs	r1, r5, #1
 80050a0:	6011      	str	r1, [r2, #0]
 80050a2:	e7f3      	b.n	800508c <_strtol_l.constprop.0+0xd4>
 80050a4:	2430      	movs	r4, #48	; 0x30
 80050a6:	2b00      	cmp	r3, #0
 80050a8:	d1b1      	bne.n	800500e <_strtol_l.constprop.0+0x56>
 80050aa:	2308      	movs	r3, #8
 80050ac:	e7af      	b.n	800500e <_strtol_l.constprop.0+0x56>
 80050ae:	2c30      	cmp	r4, #48	; 0x30
 80050b0:	d0a5      	beq.n	8004ffe <_strtol_l.constprop.0+0x46>
 80050b2:	230a      	movs	r3, #10
 80050b4:	e7ab      	b.n	800500e <_strtol_l.constprop.0+0x56>
 80050b6:	bf00      	nop
 80050b8:	080084c9 	.word	0x080084c9

080050bc <_strtol_r>:
 80050bc:	f7ff bf7c 	b.w	8004fb8 <_strtol_l.constprop.0>

080050c0 <quorem>:
 80050c0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80050c4:	6903      	ldr	r3, [r0, #16]
 80050c6:	690c      	ldr	r4, [r1, #16]
 80050c8:	42a3      	cmp	r3, r4
 80050ca:	4607      	mov	r7, r0
 80050cc:	f2c0 8081 	blt.w	80051d2 <quorem+0x112>
 80050d0:	3c01      	subs	r4, #1
 80050d2:	f101 0814 	add.w	r8, r1, #20
 80050d6:	f100 0514 	add.w	r5, r0, #20
 80050da:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80050de:	9301      	str	r3, [sp, #4]
 80050e0:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80050e4:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80050e8:	3301      	adds	r3, #1
 80050ea:	429a      	cmp	r2, r3
 80050ec:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 80050f0:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80050f4:	fbb2 f6f3 	udiv	r6, r2, r3
 80050f8:	d331      	bcc.n	800515e <quorem+0x9e>
 80050fa:	f04f 0e00 	mov.w	lr, #0
 80050fe:	4640      	mov	r0, r8
 8005100:	46ac      	mov	ip, r5
 8005102:	46f2      	mov	sl, lr
 8005104:	f850 2b04 	ldr.w	r2, [r0], #4
 8005108:	b293      	uxth	r3, r2
 800510a:	fb06 e303 	mla	r3, r6, r3, lr
 800510e:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 8005112:	b29b      	uxth	r3, r3
 8005114:	ebaa 0303 	sub.w	r3, sl, r3
 8005118:	f8dc a000 	ldr.w	sl, [ip]
 800511c:	0c12      	lsrs	r2, r2, #16
 800511e:	fa13 f38a 	uxtah	r3, r3, sl
 8005122:	fb06 e202 	mla	r2, r6, r2, lr
 8005126:	9300      	str	r3, [sp, #0]
 8005128:	9b00      	ldr	r3, [sp, #0]
 800512a:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800512e:	b292      	uxth	r2, r2
 8005130:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8005134:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8005138:	f8bd 3000 	ldrh.w	r3, [sp]
 800513c:	4581      	cmp	r9, r0
 800513e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005142:	f84c 3b04 	str.w	r3, [ip], #4
 8005146:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800514a:	d2db      	bcs.n	8005104 <quorem+0x44>
 800514c:	f855 300b 	ldr.w	r3, [r5, fp]
 8005150:	b92b      	cbnz	r3, 800515e <quorem+0x9e>
 8005152:	9b01      	ldr	r3, [sp, #4]
 8005154:	3b04      	subs	r3, #4
 8005156:	429d      	cmp	r5, r3
 8005158:	461a      	mov	r2, r3
 800515a:	d32e      	bcc.n	80051ba <quorem+0xfa>
 800515c:	613c      	str	r4, [r7, #16]
 800515e:	4638      	mov	r0, r7
 8005160:	f001 fc90 	bl	8006a84 <__mcmp>
 8005164:	2800      	cmp	r0, #0
 8005166:	db24      	blt.n	80051b2 <quorem+0xf2>
 8005168:	3601      	adds	r6, #1
 800516a:	4628      	mov	r0, r5
 800516c:	f04f 0c00 	mov.w	ip, #0
 8005170:	f858 2b04 	ldr.w	r2, [r8], #4
 8005174:	f8d0 e000 	ldr.w	lr, [r0]
 8005178:	b293      	uxth	r3, r2
 800517a:	ebac 0303 	sub.w	r3, ip, r3
 800517e:	0c12      	lsrs	r2, r2, #16
 8005180:	fa13 f38e 	uxtah	r3, r3, lr
 8005184:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8005188:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800518c:	b29b      	uxth	r3, r3
 800518e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005192:	45c1      	cmp	r9, r8
 8005194:	f840 3b04 	str.w	r3, [r0], #4
 8005198:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800519c:	d2e8      	bcs.n	8005170 <quorem+0xb0>
 800519e:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80051a2:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80051a6:	b922      	cbnz	r2, 80051b2 <quorem+0xf2>
 80051a8:	3b04      	subs	r3, #4
 80051aa:	429d      	cmp	r5, r3
 80051ac:	461a      	mov	r2, r3
 80051ae:	d30a      	bcc.n	80051c6 <quorem+0x106>
 80051b0:	613c      	str	r4, [r7, #16]
 80051b2:	4630      	mov	r0, r6
 80051b4:	b003      	add	sp, #12
 80051b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80051ba:	6812      	ldr	r2, [r2, #0]
 80051bc:	3b04      	subs	r3, #4
 80051be:	2a00      	cmp	r2, #0
 80051c0:	d1cc      	bne.n	800515c <quorem+0x9c>
 80051c2:	3c01      	subs	r4, #1
 80051c4:	e7c7      	b.n	8005156 <quorem+0x96>
 80051c6:	6812      	ldr	r2, [r2, #0]
 80051c8:	3b04      	subs	r3, #4
 80051ca:	2a00      	cmp	r2, #0
 80051cc:	d1f0      	bne.n	80051b0 <quorem+0xf0>
 80051ce:	3c01      	subs	r4, #1
 80051d0:	e7eb      	b.n	80051aa <quorem+0xea>
 80051d2:	2000      	movs	r0, #0
 80051d4:	e7ee      	b.n	80051b4 <quorem+0xf4>
	...

080051d8 <_dtoa_r>:
 80051d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80051dc:	ed2d 8b04 	vpush	{d8-d9}
 80051e0:	ec57 6b10 	vmov	r6, r7, d0
 80051e4:	b093      	sub	sp, #76	; 0x4c
 80051e6:	6a45      	ldr	r5, [r0, #36]	; 0x24
 80051e8:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 80051ec:	9106      	str	r1, [sp, #24]
 80051ee:	ee10 aa10 	vmov	sl, s0
 80051f2:	4604      	mov	r4, r0
 80051f4:	9209      	str	r2, [sp, #36]	; 0x24
 80051f6:	930c      	str	r3, [sp, #48]	; 0x30
 80051f8:	46bb      	mov	fp, r7
 80051fa:	b975      	cbnz	r5, 800521a <_dtoa_r+0x42>
 80051fc:	2010      	movs	r0, #16
 80051fe:	f001 f94d 	bl	800649c <malloc>
 8005202:	4602      	mov	r2, r0
 8005204:	6260      	str	r0, [r4, #36]	; 0x24
 8005206:	b920      	cbnz	r0, 8005212 <_dtoa_r+0x3a>
 8005208:	4ba7      	ldr	r3, [pc, #668]	; (80054a8 <_dtoa_r+0x2d0>)
 800520a:	21ea      	movs	r1, #234	; 0xea
 800520c:	48a7      	ldr	r0, [pc, #668]	; (80054ac <_dtoa_r+0x2d4>)
 800520e:	f002 f8bd 	bl	800738c <__assert_func>
 8005212:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8005216:	6005      	str	r5, [r0, #0]
 8005218:	60c5      	str	r5, [r0, #12]
 800521a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800521c:	6819      	ldr	r1, [r3, #0]
 800521e:	b151      	cbz	r1, 8005236 <_dtoa_r+0x5e>
 8005220:	685a      	ldr	r2, [r3, #4]
 8005222:	604a      	str	r2, [r1, #4]
 8005224:	2301      	movs	r3, #1
 8005226:	4093      	lsls	r3, r2
 8005228:	608b      	str	r3, [r1, #8]
 800522a:	4620      	mov	r0, r4
 800522c:	f001 f99e 	bl	800656c <_Bfree>
 8005230:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005232:	2200      	movs	r2, #0
 8005234:	601a      	str	r2, [r3, #0]
 8005236:	1e3b      	subs	r3, r7, #0
 8005238:	bfaa      	itet	ge
 800523a:	2300      	movge	r3, #0
 800523c:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 8005240:	f8c8 3000 	strge.w	r3, [r8]
 8005244:	4b9a      	ldr	r3, [pc, #616]	; (80054b0 <_dtoa_r+0x2d8>)
 8005246:	bfbc      	itt	lt
 8005248:	2201      	movlt	r2, #1
 800524a:	f8c8 2000 	strlt.w	r2, [r8]
 800524e:	ea33 030b 	bics.w	r3, r3, fp
 8005252:	d11b      	bne.n	800528c <_dtoa_r+0xb4>
 8005254:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005256:	f242 730f 	movw	r3, #9999	; 0x270f
 800525a:	6013      	str	r3, [r2, #0]
 800525c:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8005260:	4333      	orrs	r3, r6
 8005262:	f000 8592 	beq.w	8005d8a <_dtoa_r+0xbb2>
 8005266:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8005268:	b963      	cbnz	r3, 8005284 <_dtoa_r+0xac>
 800526a:	4b92      	ldr	r3, [pc, #584]	; (80054b4 <_dtoa_r+0x2dc>)
 800526c:	e022      	b.n	80052b4 <_dtoa_r+0xdc>
 800526e:	4b92      	ldr	r3, [pc, #584]	; (80054b8 <_dtoa_r+0x2e0>)
 8005270:	9301      	str	r3, [sp, #4]
 8005272:	3308      	adds	r3, #8
 8005274:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8005276:	6013      	str	r3, [r2, #0]
 8005278:	9801      	ldr	r0, [sp, #4]
 800527a:	b013      	add	sp, #76	; 0x4c
 800527c:	ecbd 8b04 	vpop	{d8-d9}
 8005280:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005284:	4b8b      	ldr	r3, [pc, #556]	; (80054b4 <_dtoa_r+0x2dc>)
 8005286:	9301      	str	r3, [sp, #4]
 8005288:	3303      	adds	r3, #3
 800528a:	e7f3      	b.n	8005274 <_dtoa_r+0x9c>
 800528c:	2200      	movs	r2, #0
 800528e:	2300      	movs	r3, #0
 8005290:	4650      	mov	r0, sl
 8005292:	4659      	mov	r1, fp
 8005294:	f7fb fc38 	bl	8000b08 <__aeabi_dcmpeq>
 8005298:	ec4b ab19 	vmov	d9, sl, fp
 800529c:	4680      	mov	r8, r0
 800529e:	b158      	cbz	r0, 80052b8 <_dtoa_r+0xe0>
 80052a0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80052a2:	2301      	movs	r3, #1
 80052a4:	6013      	str	r3, [r2, #0]
 80052a6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80052a8:	2b00      	cmp	r3, #0
 80052aa:	f000 856b 	beq.w	8005d84 <_dtoa_r+0xbac>
 80052ae:	4883      	ldr	r0, [pc, #524]	; (80054bc <_dtoa_r+0x2e4>)
 80052b0:	6018      	str	r0, [r3, #0]
 80052b2:	1e43      	subs	r3, r0, #1
 80052b4:	9301      	str	r3, [sp, #4]
 80052b6:	e7df      	b.n	8005278 <_dtoa_r+0xa0>
 80052b8:	ec4b ab10 	vmov	d0, sl, fp
 80052bc:	aa10      	add	r2, sp, #64	; 0x40
 80052be:	a911      	add	r1, sp, #68	; 0x44
 80052c0:	4620      	mov	r0, r4
 80052c2:	f001 fd01 	bl	8006cc8 <__d2b>
 80052c6:	f3cb 550a 	ubfx	r5, fp, #20, #11
 80052ca:	ee08 0a10 	vmov	s16, r0
 80052ce:	2d00      	cmp	r5, #0
 80052d0:	f000 8084 	beq.w	80053dc <_dtoa_r+0x204>
 80052d4:	ee19 3a90 	vmov	r3, s19
 80052d8:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80052dc:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 80052e0:	4656      	mov	r6, sl
 80052e2:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 80052e6:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 80052ea:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 80052ee:	4b74      	ldr	r3, [pc, #464]	; (80054c0 <_dtoa_r+0x2e8>)
 80052f0:	2200      	movs	r2, #0
 80052f2:	4630      	mov	r0, r6
 80052f4:	4639      	mov	r1, r7
 80052f6:	f7fa ffe7 	bl	80002c8 <__aeabi_dsub>
 80052fa:	a365      	add	r3, pc, #404	; (adr r3, 8005490 <_dtoa_r+0x2b8>)
 80052fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005300:	f7fb f99a 	bl	8000638 <__aeabi_dmul>
 8005304:	a364      	add	r3, pc, #400	; (adr r3, 8005498 <_dtoa_r+0x2c0>)
 8005306:	e9d3 2300 	ldrd	r2, r3, [r3]
 800530a:	f7fa ffdf 	bl	80002cc <__adddf3>
 800530e:	4606      	mov	r6, r0
 8005310:	4628      	mov	r0, r5
 8005312:	460f      	mov	r7, r1
 8005314:	f7fb f926 	bl	8000564 <__aeabi_i2d>
 8005318:	a361      	add	r3, pc, #388	; (adr r3, 80054a0 <_dtoa_r+0x2c8>)
 800531a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800531e:	f7fb f98b 	bl	8000638 <__aeabi_dmul>
 8005322:	4602      	mov	r2, r0
 8005324:	460b      	mov	r3, r1
 8005326:	4630      	mov	r0, r6
 8005328:	4639      	mov	r1, r7
 800532a:	f7fa ffcf 	bl	80002cc <__adddf3>
 800532e:	4606      	mov	r6, r0
 8005330:	460f      	mov	r7, r1
 8005332:	f7fb fc31 	bl	8000b98 <__aeabi_d2iz>
 8005336:	2200      	movs	r2, #0
 8005338:	9000      	str	r0, [sp, #0]
 800533a:	2300      	movs	r3, #0
 800533c:	4630      	mov	r0, r6
 800533e:	4639      	mov	r1, r7
 8005340:	f7fb fbec 	bl	8000b1c <__aeabi_dcmplt>
 8005344:	b150      	cbz	r0, 800535c <_dtoa_r+0x184>
 8005346:	9800      	ldr	r0, [sp, #0]
 8005348:	f7fb f90c 	bl	8000564 <__aeabi_i2d>
 800534c:	4632      	mov	r2, r6
 800534e:	463b      	mov	r3, r7
 8005350:	f7fb fbda 	bl	8000b08 <__aeabi_dcmpeq>
 8005354:	b910      	cbnz	r0, 800535c <_dtoa_r+0x184>
 8005356:	9b00      	ldr	r3, [sp, #0]
 8005358:	3b01      	subs	r3, #1
 800535a:	9300      	str	r3, [sp, #0]
 800535c:	9b00      	ldr	r3, [sp, #0]
 800535e:	2b16      	cmp	r3, #22
 8005360:	d85a      	bhi.n	8005418 <_dtoa_r+0x240>
 8005362:	9a00      	ldr	r2, [sp, #0]
 8005364:	4b57      	ldr	r3, [pc, #348]	; (80054c4 <_dtoa_r+0x2ec>)
 8005366:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800536a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800536e:	ec51 0b19 	vmov	r0, r1, d9
 8005372:	f7fb fbd3 	bl	8000b1c <__aeabi_dcmplt>
 8005376:	2800      	cmp	r0, #0
 8005378:	d050      	beq.n	800541c <_dtoa_r+0x244>
 800537a:	9b00      	ldr	r3, [sp, #0]
 800537c:	3b01      	subs	r3, #1
 800537e:	9300      	str	r3, [sp, #0]
 8005380:	2300      	movs	r3, #0
 8005382:	930b      	str	r3, [sp, #44]	; 0x2c
 8005384:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005386:	1b5d      	subs	r5, r3, r5
 8005388:	1e6b      	subs	r3, r5, #1
 800538a:	9305      	str	r3, [sp, #20]
 800538c:	bf45      	ittet	mi
 800538e:	f1c5 0301 	rsbmi	r3, r5, #1
 8005392:	9304      	strmi	r3, [sp, #16]
 8005394:	2300      	movpl	r3, #0
 8005396:	2300      	movmi	r3, #0
 8005398:	bf4c      	ite	mi
 800539a:	9305      	strmi	r3, [sp, #20]
 800539c:	9304      	strpl	r3, [sp, #16]
 800539e:	9b00      	ldr	r3, [sp, #0]
 80053a0:	2b00      	cmp	r3, #0
 80053a2:	db3d      	blt.n	8005420 <_dtoa_r+0x248>
 80053a4:	9b05      	ldr	r3, [sp, #20]
 80053a6:	9a00      	ldr	r2, [sp, #0]
 80053a8:	920a      	str	r2, [sp, #40]	; 0x28
 80053aa:	4413      	add	r3, r2
 80053ac:	9305      	str	r3, [sp, #20]
 80053ae:	2300      	movs	r3, #0
 80053b0:	9307      	str	r3, [sp, #28]
 80053b2:	9b06      	ldr	r3, [sp, #24]
 80053b4:	2b09      	cmp	r3, #9
 80053b6:	f200 8089 	bhi.w	80054cc <_dtoa_r+0x2f4>
 80053ba:	2b05      	cmp	r3, #5
 80053bc:	bfc4      	itt	gt
 80053be:	3b04      	subgt	r3, #4
 80053c0:	9306      	strgt	r3, [sp, #24]
 80053c2:	9b06      	ldr	r3, [sp, #24]
 80053c4:	f1a3 0302 	sub.w	r3, r3, #2
 80053c8:	bfcc      	ite	gt
 80053ca:	2500      	movgt	r5, #0
 80053cc:	2501      	movle	r5, #1
 80053ce:	2b03      	cmp	r3, #3
 80053d0:	f200 8087 	bhi.w	80054e2 <_dtoa_r+0x30a>
 80053d4:	e8df f003 	tbb	[pc, r3]
 80053d8:	59383a2d 	.word	0x59383a2d
 80053dc:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 80053e0:	441d      	add	r5, r3
 80053e2:	f205 4332 	addw	r3, r5, #1074	; 0x432
 80053e6:	2b20      	cmp	r3, #32
 80053e8:	bfc1      	itttt	gt
 80053ea:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 80053ee:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 80053f2:	fa0b f303 	lslgt.w	r3, fp, r3
 80053f6:	fa26 f000 	lsrgt.w	r0, r6, r0
 80053fa:	bfda      	itte	le
 80053fc:	f1c3 0320 	rsble	r3, r3, #32
 8005400:	fa06 f003 	lslle.w	r0, r6, r3
 8005404:	4318      	orrgt	r0, r3
 8005406:	f7fb f89d 	bl	8000544 <__aeabi_ui2d>
 800540a:	2301      	movs	r3, #1
 800540c:	4606      	mov	r6, r0
 800540e:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 8005412:	3d01      	subs	r5, #1
 8005414:	930e      	str	r3, [sp, #56]	; 0x38
 8005416:	e76a      	b.n	80052ee <_dtoa_r+0x116>
 8005418:	2301      	movs	r3, #1
 800541a:	e7b2      	b.n	8005382 <_dtoa_r+0x1aa>
 800541c:	900b      	str	r0, [sp, #44]	; 0x2c
 800541e:	e7b1      	b.n	8005384 <_dtoa_r+0x1ac>
 8005420:	9b04      	ldr	r3, [sp, #16]
 8005422:	9a00      	ldr	r2, [sp, #0]
 8005424:	1a9b      	subs	r3, r3, r2
 8005426:	9304      	str	r3, [sp, #16]
 8005428:	4253      	negs	r3, r2
 800542a:	9307      	str	r3, [sp, #28]
 800542c:	2300      	movs	r3, #0
 800542e:	930a      	str	r3, [sp, #40]	; 0x28
 8005430:	e7bf      	b.n	80053b2 <_dtoa_r+0x1da>
 8005432:	2300      	movs	r3, #0
 8005434:	9308      	str	r3, [sp, #32]
 8005436:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005438:	2b00      	cmp	r3, #0
 800543a:	dc55      	bgt.n	80054e8 <_dtoa_r+0x310>
 800543c:	2301      	movs	r3, #1
 800543e:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8005442:	461a      	mov	r2, r3
 8005444:	9209      	str	r2, [sp, #36]	; 0x24
 8005446:	e00c      	b.n	8005462 <_dtoa_r+0x28a>
 8005448:	2301      	movs	r3, #1
 800544a:	e7f3      	b.n	8005434 <_dtoa_r+0x25c>
 800544c:	2300      	movs	r3, #0
 800544e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005450:	9308      	str	r3, [sp, #32]
 8005452:	9b00      	ldr	r3, [sp, #0]
 8005454:	4413      	add	r3, r2
 8005456:	9302      	str	r3, [sp, #8]
 8005458:	3301      	adds	r3, #1
 800545a:	2b01      	cmp	r3, #1
 800545c:	9303      	str	r3, [sp, #12]
 800545e:	bfb8      	it	lt
 8005460:	2301      	movlt	r3, #1
 8005462:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8005464:	2200      	movs	r2, #0
 8005466:	6042      	str	r2, [r0, #4]
 8005468:	2204      	movs	r2, #4
 800546a:	f102 0614 	add.w	r6, r2, #20
 800546e:	429e      	cmp	r6, r3
 8005470:	6841      	ldr	r1, [r0, #4]
 8005472:	d93d      	bls.n	80054f0 <_dtoa_r+0x318>
 8005474:	4620      	mov	r0, r4
 8005476:	f001 f839 	bl	80064ec <_Balloc>
 800547a:	9001      	str	r0, [sp, #4]
 800547c:	2800      	cmp	r0, #0
 800547e:	d13b      	bne.n	80054f8 <_dtoa_r+0x320>
 8005480:	4b11      	ldr	r3, [pc, #68]	; (80054c8 <_dtoa_r+0x2f0>)
 8005482:	4602      	mov	r2, r0
 8005484:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8005488:	e6c0      	b.n	800520c <_dtoa_r+0x34>
 800548a:	2301      	movs	r3, #1
 800548c:	e7df      	b.n	800544e <_dtoa_r+0x276>
 800548e:	bf00      	nop
 8005490:	636f4361 	.word	0x636f4361
 8005494:	3fd287a7 	.word	0x3fd287a7
 8005498:	8b60c8b3 	.word	0x8b60c8b3
 800549c:	3fc68a28 	.word	0x3fc68a28
 80054a0:	509f79fb 	.word	0x509f79fb
 80054a4:	3fd34413 	.word	0x3fd34413
 80054a8:	080085d6 	.word	0x080085d6
 80054ac:	080085ed 	.word	0x080085ed
 80054b0:	7ff00000 	.word	0x7ff00000
 80054b4:	080085d2 	.word	0x080085d2
 80054b8:	080085c9 	.word	0x080085c9
 80054bc:	0800844d 	.word	0x0800844d
 80054c0:	3ff80000 	.word	0x3ff80000
 80054c4:	08008758 	.word	0x08008758
 80054c8:	08008648 	.word	0x08008648
 80054cc:	2501      	movs	r5, #1
 80054ce:	2300      	movs	r3, #0
 80054d0:	9306      	str	r3, [sp, #24]
 80054d2:	9508      	str	r5, [sp, #32]
 80054d4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80054d8:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80054dc:	2200      	movs	r2, #0
 80054de:	2312      	movs	r3, #18
 80054e0:	e7b0      	b.n	8005444 <_dtoa_r+0x26c>
 80054e2:	2301      	movs	r3, #1
 80054e4:	9308      	str	r3, [sp, #32]
 80054e6:	e7f5      	b.n	80054d4 <_dtoa_r+0x2fc>
 80054e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80054ea:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80054ee:	e7b8      	b.n	8005462 <_dtoa_r+0x28a>
 80054f0:	3101      	adds	r1, #1
 80054f2:	6041      	str	r1, [r0, #4]
 80054f4:	0052      	lsls	r2, r2, #1
 80054f6:	e7b8      	b.n	800546a <_dtoa_r+0x292>
 80054f8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80054fa:	9a01      	ldr	r2, [sp, #4]
 80054fc:	601a      	str	r2, [r3, #0]
 80054fe:	9b03      	ldr	r3, [sp, #12]
 8005500:	2b0e      	cmp	r3, #14
 8005502:	f200 809d 	bhi.w	8005640 <_dtoa_r+0x468>
 8005506:	2d00      	cmp	r5, #0
 8005508:	f000 809a 	beq.w	8005640 <_dtoa_r+0x468>
 800550c:	9b00      	ldr	r3, [sp, #0]
 800550e:	2b00      	cmp	r3, #0
 8005510:	dd32      	ble.n	8005578 <_dtoa_r+0x3a0>
 8005512:	4ab7      	ldr	r2, [pc, #732]	; (80057f0 <_dtoa_r+0x618>)
 8005514:	f003 030f 	and.w	r3, r3, #15
 8005518:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800551c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8005520:	9b00      	ldr	r3, [sp, #0]
 8005522:	05d8      	lsls	r0, r3, #23
 8005524:	ea4f 1723 	mov.w	r7, r3, asr #4
 8005528:	d516      	bpl.n	8005558 <_dtoa_r+0x380>
 800552a:	4bb2      	ldr	r3, [pc, #712]	; (80057f4 <_dtoa_r+0x61c>)
 800552c:	ec51 0b19 	vmov	r0, r1, d9
 8005530:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8005534:	f7fb f9aa 	bl	800088c <__aeabi_ddiv>
 8005538:	f007 070f 	and.w	r7, r7, #15
 800553c:	4682      	mov	sl, r0
 800553e:	468b      	mov	fp, r1
 8005540:	2503      	movs	r5, #3
 8005542:	4eac      	ldr	r6, [pc, #688]	; (80057f4 <_dtoa_r+0x61c>)
 8005544:	b957      	cbnz	r7, 800555c <_dtoa_r+0x384>
 8005546:	4642      	mov	r2, r8
 8005548:	464b      	mov	r3, r9
 800554a:	4650      	mov	r0, sl
 800554c:	4659      	mov	r1, fp
 800554e:	f7fb f99d 	bl	800088c <__aeabi_ddiv>
 8005552:	4682      	mov	sl, r0
 8005554:	468b      	mov	fp, r1
 8005556:	e028      	b.n	80055aa <_dtoa_r+0x3d2>
 8005558:	2502      	movs	r5, #2
 800555a:	e7f2      	b.n	8005542 <_dtoa_r+0x36a>
 800555c:	07f9      	lsls	r1, r7, #31
 800555e:	d508      	bpl.n	8005572 <_dtoa_r+0x39a>
 8005560:	4640      	mov	r0, r8
 8005562:	4649      	mov	r1, r9
 8005564:	e9d6 2300 	ldrd	r2, r3, [r6]
 8005568:	f7fb f866 	bl	8000638 <__aeabi_dmul>
 800556c:	3501      	adds	r5, #1
 800556e:	4680      	mov	r8, r0
 8005570:	4689      	mov	r9, r1
 8005572:	107f      	asrs	r7, r7, #1
 8005574:	3608      	adds	r6, #8
 8005576:	e7e5      	b.n	8005544 <_dtoa_r+0x36c>
 8005578:	f000 809b 	beq.w	80056b2 <_dtoa_r+0x4da>
 800557c:	9b00      	ldr	r3, [sp, #0]
 800557e:	4f9d      	ldr	r7, [pc, #628]	; (80057f4 <_dtoa_r+0x61c>)
 8005580:	425e      	negs	r6, r3
 8005582:	4b9b      	ldr	r3, [pc, #620]	; (80057f0 <_dtoa_r+0x618>)
 8005584:	f006 020f 	and.w	r2, r6, #15
 8005588:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800558c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005590:	ec51 0b19 	vmov	r0, r1, d9
 8005594:	f7fb f850 	bl	8000638 <__aeabi_dmul>
 8005598:	1136      	asrs	r6, r6, #4
 800559a:	4682      	mov	sl, r0
 800559c:	468b      	mov	fp, r1
 800559e:	2300      	movs	r3, #0
 80055a0:	2502      	movs	r5, #2
 80055a2:	2e00      	cmp	r6, #0
 80055a4:	d17a      	bne.n	800569c <_dtoa_r+0x4c4>
 80055a6:	2b00      	cmp	r3, #0
 80055a8:	d1d3      	bne.n	8005552 <_dtoa_r+0x37a>
 80055aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80055ac:	2b00      	cmp	r3, #0
 80055ae:	f000 8082 	beq.w	80056b6 <_dtoa_r+0x4de>
 80055b2:	4b91      	ldr	r3, [pc, #580]	; (80057f8 <_dtoa_r+0x620>)
 80055b4:	2200      	movs	r2, #0
 80055b6:	4650      	mov	r0, sl
 80055b8:	4659      	mov	r1, fp
 80055ba:	f7fb faaf 	bl	8000b1c <__aeabi_dcmplt>
 80055be:	2800      	cmp	r0, #0
 80055c0:	d079      	beq.n	80056b6 <_dtoa_r+0x4de>
 80055c2:	9b03      	ldr	r3, [sp, #12]
 80055c4:	2b00      	cmp	r3, #0
 80055c6:	d076      	beq.n	80056b6 <_dtoa_r+0x4de>
 80055c8:	9b02      	ldr	r3, [sp, #8]
 80055ca:	2b00      	cmp	r3, #0
 80055cc:	dd36      	ble.n	800563c <_dtoa_r+0x464>
 80055ce:	9b00      	ldr	r3, [sp, #0]
 80055d0:	4650      	mov	r0, sl
 80055d2:	4659      	mov	r1, fp
 80055d4:	1e5f      	subs	r7, r3, #1
 80055d6:	2200      	movs	r2, #0
 80055d8:	4b88      	ldr	r3, [pc, #544]	; (80057fc <_dtoa_r+0x624>)
 80055da:	f7fb f82d 	bl	8000638 <__aeabi_dmul>
 80055de:	9e02      	ldr	r6, [sp, #8]
 80055e0:	4682      	mov	sl, r0
 80055e2:	468b      	mov	fp, r1
 80055e4:	3501      	adds	r5, #1
 80055e6:	4628      	mov	r0, r5
 80055e8:	f7fa ffbc 	bl	8000564 <__aeabi_i2d>
 80055ec:	4652      	mov	r2, sl
 80055ee:	465b      	mov	r3, fp
 80055f0:	f7fb f822 	bl	8000638 <__aeabi_dmul>
 80055f4:	4b82      	ldr	r3, [pc, #520]	; (8005800 <_dtoa_r+0x628>)
 80055f6:	2200      	movs	r2, #0
 80055f8:	f7fa fe68 	bl	80002cc <__adddf3>
 80055fc:	46d0      	mov	r8, sl
 80055fe:	46d9      	mov	r9, fp
 8005600:	4682      	mov	sl, r0
 8005602:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 8005606:	2e00      	cmp	r6, #0
 8005608:	d158      	bne.n	80056bc <_dtoa_r+0x4e4>
 800560a:	4b7e      	ldr	r3, [pc, #504]	; (8005804 <_dtoa_r+0x62c>)
 800560c:	2200      	movs	r2, #0
 800560e:	4640      	mov	r0, r8
 8005610:	4649      	mov	r1, r9
 8005612:	f7fa fe59 	bl	80002c8 <__aeabi_dsub>
 8005616:	4652      	mov	r2, sl
 8005618:	465b      	mov	r3, fp
 800561a:	4680      	mov	r8, r0
 800561c:	4689      	mov	r9, r1
 800561e:	f7fb fa9b 	bl	8000b58 <__aeabi_dcmpgt>
 8005622:	2800      	cmp	r0, #0
 8005624:	f040 8295 	bne.w	8005b52 <_dtoa_r+0x97a>
 8005628:	4652      	mov	r2, sl
 800562a:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800562e:	4640      	mov	r0, r8
 8005630:	4649      	mov	r1, r9
 8005632:	f7fb fa73 	bl	8000b1c <__aeabi_dcmplt>
 8005636:	2800      	cmp	r0, #0
 8005638:	f040 8289 	bne.w	8005b4e <_dtoa_r+0x976>
 800563c:	ec5b ab19 	vmov	sl, fp, d9
 8005640:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005642:	2b00      	cmp	r3, #0
 8005644:	f2c0 8148 	blt.w	80058d8 <_dtoa_r+0x700>
 8005648:	9a00      	ldr	r2, [sp, #0]
 800564a:	2a0e      	cmp	r2, #14
 800564c:	f300 8144 	bgt.w	80058d8 <_dtoa_r+0x700>
 8005650:	4b67      	ldr	r3, [pc, #412]	; (80057f0 <_dtoa_r+0x618>)
 8005652:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8005656:	e9d3 8900 	ldrd	r8, r9, [r3]
 800565a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800565c:	2b00      	cmp	r3, #0
 800565e:	f280 80d5 	bge.w	800580c <_dtoa_r+0x634>
 8005662:	9b03      	ldr	r3, [sp, #12]
 8005664:	2b00      	cmp	r3, #0
 8005666:	f300 80d1 	bgt.w	800580c <_dtoa_r+0x634>
 800566a:	f040 826f 	bne.w	8005b4c <_dtoa_r+0x974>
 800566e:	4b65      	ldr	r3, [pc, #404]	; (8005804 <_dtoa_r+0x62c>)
 8005670:	2200      	movs	r2, #0
 8005672:	4640      	mov	r0, r8
 8005674:	4649      	mov	r1, r9
 8005676:	f7fa ffdf 	bl	8000638 <__aeabi_dmul>
 800567a:	4652      	mov	r2, sl
 800567c:	465b      	mov	r3, fp
 800567e:	f7fb fa61 	bl	8000b44 <__aeabi_dcmpge>
 8005682:	9e03      	ldr	r6, [sp, #12]
 8005684:	4637      	mov	r7, r6
 8005686:	2800      	cmp	r0, #0
 8005688:	f040 8245 	bne.w	8005b16 <_dtoa_r+0x93e>
 800568c:	9d01      	ldr	r5, [sp, #4]
 800568e:	2331      	movs	r3, #49	; 0x31
 8005690:	f805 3b01 	strb.w	r3, [r5], #1
 8005694:	9b00      	ldr	r3, [sp, #0]
 8005696:	3301      	adds	r3, #1
 8005698:	9300      	str	r3, [sp, #0]
 800569a:	e240      	b.n	8005b1e <_dtoa_r+0x946>
 800569c:	07f2      	lsls	r2, r6, #31
 800569e:	d505      	bpl.n	80056ac <_dtoa_r+0x4d4>
 80056a0:	e9d7 2300 	ldrd	r2, r3, [r7]
 80056a4:	f7fa ffc8 	bl	8000638 <__aeabi_dmul>
 80056a8:	3501      	adds	r5, #1
 80056aa:	2301      	movs	r3, #1
 80056ac:	1076      	asrs	r6, r6, #1
 80056ae:	3708      	adds	r7, #8
 80056b0:	e777      	b.n	80055a2 <_dtoa_r+0x3ca>
 80056b2:	2502      	movs	r5, #2
 80056b4:	e779      	b.n	80055aa <_dtoa_r+0x3d2>
 80056b6:	9f00      	ldr	r7, [sp, #0]
 80056b8:	9e03      	ldr	r6, [sp, #12]
 80056ba:	e794      	b.n	80055e6 <_dtoa_r+0x40e>
 80056bc:	9901      	ldr	r1, [sp, #4]
 80056be:	4b4c      	ldr	r3, [pc, #304]	; (80057f0 <_dtoa_r+0x618>)
 80056c0:	4431      	add	r1, r6
 80056c2:	910d      	str	r1, [sp, #52]	; 0x34
 80056c4:	9908      	ldr	r1, [sp, #32]
 80056c6:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 80056ca:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 80056ce:	2900      	cmp	r1, #0
 80056d0:	d043      	beq.n	800575a <_dtoa_r+0x582>
 80056d2:	494d      	ldr	r1, [pc, #308]	; (8005808 <_dtoa_r+0x630>)
 80056d4:	2000      	movs	r0, #0
 80056d6:	f7fb f8d9 	bl	800088c <__aeabi_ddiv>
 80056da:	4652      	mov	r2, sl
 80056dc:	465b      	mov	r3, fp
 80056de:	f7fa fdf3 	bl	80002c8 <__aeabi_dsub>
 80056e2:	9d01      	ldr	r5, [sp, #4]
 80056e4:	4682      	mov	sl, r0
 80056e6:	468b      	mov	fp, r1
 80056e8:	4649      	mov	r1, r9
 80056ea:	4640      	mov	r0, r8
 80056ec:	f7fb fa54 	bl	8000b98 <__aeabi_d2iz>
 80056f0:	4606      	mov	r6, r0
 80056f2:	f7fa ff37 	bl	8000564 <__aeabi_i2d>
 80056f6:	4602      	mov	r2, r0
 80056f8:	460b      	mov	r3, r1
 80056fa:	4640      	mov	r0, r8
 80056fc:	4649      	mov	r1, r9
 80056fe:	f7fa fde3 	bl	80002c8 <__aeabi_dsub>
 8005702:	3630      	adds	r6, #48	; 0x30
 8005704:	f805 6b01 	strb.w	r6, [r5], #1
 8005708:	4652      	mov	r2, sl
 800570a:	465b      	mov	r3, fp
 800570c:	4680      	mov	r8, r0
 800570e:	4689      	mov	r9, r1
 8005710:	f7fb fa04 	bl	8000b1c <__aeabi_dcmplt>
 8005714:	2800      	cmp	r0, #0
 8005716:	d163      	bne.n	80057e0 <_dtoa_r+0x608>
 8005718:	4642      	mov	r2, r8
 800571a:	464b      	mov	r3, r9
 800571c:	4936      	ldr	r1, [pc, #216]	; (80057f8 <_dtoa_r+0x620>)
 800571e:	2000      	movs	r0, #0
 8005720:	f7fa fdd2 	bl	80002c8 <__aeabi_dsub>
 8005724:	4652      	mov	r2, sl
 8005726:	465b      	mov	r3, fp
 8005728:	f7fb f9f8 	bl	8000b1c <__aeabi_dcmplt>
 800572c:	2800      	cmp	r0, #0
 800572e:	f040 80b5 	bne.w	800589c <_dtoa_r+0x6c4>
 8005732:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005734:	429d      	cmp	r5, r3
 8005736:	d081      	beq.n	800563c <_dtoa_r+0x464>
 8005738:	4b30      	ldr	r3, [pc, #192]	; (80057fc <_dtoa_r+0x624>)
 800573a:	2200      	movs	r2, #0
 800573c:	4650      	mov	r0, sl
 800573e:	4659      	mov	r1, fp
 8005740:	f7fa ff7a 	bl	8000638 <__aeabi_dmul>
 8005744:	4b2d      	ldr	r3, [pc, #180]	; (80057fc <_dtoa_r+0x624>)
 8005746:	4682      	mov	sl, r0
 8005748:	468b      	mov	fp, r1
 800574a:	4640      	mov	r0, r8
 800574c:	4649      	mov	r1, r9
 800574e:	2200      	movs	r2, #0
 8005750:	f7fa ff72 	bl	8000638 <__aeabi_dmul>
 8005754:	4680      	mov	r8, r0
 8005756:	4689      	mov	r9, r1
 8005758:	e7c6      	b.n	80056e8 <_dtoa_r+0x510>
 800575a:	4650      	mov	r0, sl
 800575c:	4659      	mov	r1, fp
 800575e:	f7fa ff6b 	bl	8000638 <__aeabi_dmul>
 8005762:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005764:	9d01      	ldr	r5, [sp, #4]
 8005766:	930f      	str	r3, [sp, #60]	; 0x3c
 8005768:	4682      	mov	sl, r0
 800576a:	468b      	mov	fp, r1
 800576c:	4649      	mov	r1, r9
 800576e:	4640      	mov	r0, r8
 8005770:	f7fb fa12 	bl	8000b98 <__aeabi_d2iz>
 8005774:	4606      	mov	r6, r0
 8005776:	f7fa fef5 	bl	8000564 <__aeabi_i2d>
 800577a:	3630      	adds	r6, #48	; 0x30
 800577c:	4602      	mov	r2, r0
 800577e:	460b      	mov	r3, r1
 8005780:	4640      	mov	r0, r8
 8005782:	4649      	mov	r1, r9
 8005784:	f7fa fda0 	bl	80002c8 <__aeabi_dsub>
 8005788:	f805 6b01 	strb.w	r6, [r5], #1
 800578c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800578e:	429d      	cmp	r5, r3
 8005790:	4680      	mov	r8, r0
 8005792:	4689      	mov	r9, r1
 8005794:	f04f 0200 	mov.w	r2, #0
 8005798:	d124      	bne.n	80057e4 <_dtoa_r+0x60c>
 800579a:	4b1b      	ldr	r3, [pc, #108]	; (8005808 <_dtoa_r+0x630>)
 800579c:	4650      	mov	r0, sl
 800579e:	4659      	mov	r1, fp
 80057a0:	f7fa fd94 	bl	80002cc <__adddf3>
 80057a4:	4602      	mov	r2, r0
 80057a6:	460b      	mov	r3, r1
 80057a8:	4640      	mov	r0, r8
 80057aa:	4649      	mov	r1, r9
 80057ac:	f7fb f9d4 	bl	8000b58 <__aeabi_dcmpgt>
 80057b0:	2800      	cmp	r0, #0
 80057b2:	d173      	bne.n	800589c <_dtoa_r+0x6c4>
 80057b4:	4652      	mov	r2, sl
 80057b6:	465b      	mov	r3, fp
 80057b8:	4913      	ldr	r1, [pc, #76]	; (8005808 <_dtoa_r+0x630>)
 80057ba:	2000      	movs	r0, #0
 80057bc:	f7fa fd84 	bl	80002c8 <__aeabi_dsub>
 80057c0:	4602      	mov	r2, r0
 80057c2:	460b      	mov	r3, r1
 80057c4:	4640      	mov	r0, r8
 80057c6:	4649      	mov	r1, r9
 80057c8:	f7fb f9a8 	bl	8000b1c <__aeabi_dcmplt>
 80057cc:	2800      	cmp	r0, #0
 80057ce:	f43f af35 	beq.w	800563c <_dtoa_r+0x464>
 80057d2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80057d4:	1e6b      	subs	r3, r5, #1
 80057d6:	930f      	str	r3, [sp, #60]	; 0x3c
 80057d8:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 80057dc:	2b30      	cmp	r3, #48	; 0x30
 80057de:	d0f8      	beq.n	80057d2 <_dtoa_r+0x5fa>
 80057e0:	9700      	str	r7, [sp, #0]
 80057e2:	e049      	b.n	8005878 <_dtoa_r+0x6a0>
 80057e4:	4b05      	ldr	r3, [pc, #20]	; (80057fc <_dtoa_r+0x624>)
 80057e6:	f7fa ff27 	bl	8000638 <__aeabi_dmul>
 80057ea:	4680      	mov	r8, r0
 80057ec:	4689      	mov	r9, r1
 80057ee:	e7bd      	b.n	800576c <_dtoa_r+0x594>
 80057f0:	08008758 	.word	0x08008758
 80057f4:	08008730 	.word	0x08008730
 80057f8:	3ff00000 	.word	0x3ff00000
 80057fc:	40240000 	.word	0x40240000
 8005800:	401c0000 	.word	0x401c0000
 8005804:	40140000 	.word	0x40140000
 8005808:	3fe00000 	.word	0x3fe00000
 800580c:	9d01      	ldr	r5, [sp, #4]
 800580e:	4656      	mov	r6, sl
 8005810:	465f      	mov	r7, fp
 8005812:	4642      	mov	r2, r8
 8005814:	464b      	mov	r3, r9
 8005816:	4630      	mov	r0, r6
 8005818:	4639      	mov	r1, r7
 800581a:	f7fb f837 	bl	800088c <__aeabi_ddiv>
 800581e:	f7fb f9bb 	bl	8000b98 <__aeabi_d2iz>
 8005822:	4682      	mov	sl, r0
 8005824:	f7fa fe9e 	bl	8000564 <__aeabi_i2d>
 8005828:	4642      	mov	r2, r8
 800582a:	464b      	mov	r3, r9
 800582c:	f7fa ff04 	bl	8000638 <__aeabi_dmul>
 8005830:	4602      	mov	r2, r0
 8005832:	460b      	mov	r3, r1
 8005834:	4630      	mov	r0, r6
 8005836:	4639      	mov	r1, r7
 8005838:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 800583c:	f7fa fd44 	bl	80002c8 <__aeabi_dsub>
 8005840:	f805 6b01 	strb.w	r6, [r5], #1
 8005844:	9e01      	ldr	r6, [sp, #4]
 8005846:	9f03      	ldr	r7, [sp, #12]
 8005848:	1bae      	subs	r6, r5, r6
 800584a:	42b7      	cmp	r7, r6
 800584c:	4602      	mov	r2, r0
 800584e:	460b      	mov	r3, r1
 8005850:	d135      	bne.n	80058be <_dtoa_r+0x6e6>
 8005852:	f7fa fd3b 	bl	80002cc <__adddf3>
 8005856:	4642      	mov	r2, r8
 8005858:	464b      	mov	r3, r9
 800585a:	4606      	mov	r6, r0
 800585c:	460f      	mov	r7, r1
 800585e:	f7fb f97b 	bl	8000b58 <__aeabi_dcmpgt>
 8005862:	b9d0      	cbnz	r0, 800589a <_dtoa_r+0x6c2>
 8005864:	4642      	mov	r2, r8
 8005866:	464b      	mov	r3, r9
 8005868:	4630      	mov	r0, r6
 800586a:	4639      	mov	r1, r7
 800586c:	f7fb f94c 	bl	8000b08 <__aeabi_dcmpeq>
 8005870:	b110      	cbz	r0, 8005878 <_dtoa_r+0x6a0>
 8005872:	f01a 0f01 	tst.w	sl, #1
 8005876:	d110      	bne.n	800589a <_dtoa_r+0x6c2>
 8005878:	4620      	mov	r0, r4
 800587a:	ee18 1a10 	vmov	r1, s16
 800587e:	f000 fe75 	bl	800656c <_Bfree>
 8005882:	2300      	movs	r3, #0
 8005884:	9800      	ldr	r0, [sp, #0]
 8005886:	702b      	strb	r3, [r5, #0]
 8005888:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800588a:	3001      	adds	r0, #1
 800588c:	6018      	str	r0, [r3, #0]
 800588e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8005890:	2b00      	cmp	r3, #0
 8005892:	f43f acf1 	beq.w	8005278 <_dtoa_r+0xa0>
 8005896:	601d      	str	r5, [r3, #0]
 8005898:	e4ee      	b.n	8005278 <_dtoa_r+0xa0>
 800589a:	9f00      	ldr	r7, [sp, #0]
 800589c:	462b      	mov	r3, r5
 800589e:	461d      	mov	r5, r3
 80058a0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80058a4:	2a39      	cmp	r2, #57	; 0x39
 80058a6:	d106      	bne.n	80058b6 <_dtoa_r+0x6de>
 80058a8:	9a01      	ldr	r2, [sp, #4]
 80058aa:	429a      	cmp	r2, r3
 80058ac:	d1f7      	bne.n	800589e <_dtoa_r+0x6c6>
 80058ae:	9901      	ldr	r1, [sp, #4]
 80058b0:	2230      	movs	r2, #48	; 0x30
 80058b2:	3701      	adds	r7, #1
 80058b4:	700a      	strb	r2, [r1, #0]
 80058b6:	781a      	ldrb	r2, [r3, #0]
 80058b8:	3201      	adds	r2, #1
 80058ba:	701a      	strb	r2, [r3, #0]
 80058bc:	e790      	b.n	80057e0 <_dtoa_r+0x608>
 80058be:	4ba6      	ldr	r3, [pc, #664]	; (8005b58 <_dtoa_r+0x980>)
 80058c0:	2200      	movs	r2, #0
 80058c2:	f7fa feb9 	bl	8000638 <__aeabi_dmul>
 80058c6:	2200      	movs	r2, #0
 80058c8:	2300      	movs	r3, #0
 80058ca:	4606      	mov	r6, r0
 80058cc:	460f      	mov	r7, r1
 80058ce:	f7fb f91b 	bl	8000b08 <__aeabi_dcmpeq>
 80058d2:	2800      	cmp	r0, #0
 80058d4:	d09d      	beq.n	8005812 <_dtoa_r+0x63a>
 80058d6:	e7cf      	b.n	8005878 <_dtoa_r+0x6a0>
 80058d8:	9a08      	ldr	r2, [sp, #32]
 80058da:	2a00      	cmp	r2, #0
 80058dc:	f000 80d7 	beq.w	8005a8e <_dtoa_r+0x8b6>
 80058e0:	9a06      	ldr	r2, [sp, #24]
 80058e2:	2a01      	cmp	r2, #1
 80058e4:	f300 80ba 	bgt.w	8005a5c <_dtoa_r+0x884>
 80058e8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80058ea:	2a00      	cmp	r2, #0
 80058ec:	f000 80b2 	beq.w	8005a54 <_dtoa_r+0x87c>
 80058f0:	f203 4333 	addw	r3, r3, #1075	; 0x433
 80058f4:	9e07      	ldr	r6, [sp, #28]
 80058f6:	9d04      	ldr	r5, [sp, #16]
 80058f8:	9a04      	ldr	r2, [sp, #16]
 80058fa:	441a      	add	r2, r3
 80058fc:	9204      	str	r2, [sp, #16]
 80058fe:	9a05      	ldr	r2, [sp, #20]
 8005900:	2101      	movs	r1, #1
 8005902:	441a      	add	r2, r3
 8005904:	4620      	mov	r0, r4
 8005906:	9205      	str	r2, [sp, #20]
 8005908:	f000 ff32 	bl	8006770 <__i2b>
 800590c:	4607      	mov	r7, r0
 800590e:	2d00      	cmp	r5, #0
 8005910:	dd0c      	ble.n	800592c <_dtoa_r+0x754>
 8005912:	9b05      	ldr	r3, [sp, #20]
 8005914:	2b00      	cmp	r3, #0
 8005916:	dd09      	ble.n	800592c <_dtoa_r+0x754>
 8005918:	42ab      	cmp	r3, r5
 800591a:	9a04      	ldr	r2, [sp, #16]
 800591c:	bfa8      	it	ge
 800591e:	462b      	movge	r3, r5
 8005920:	1ad2      	subs	r2, r2, r3
 8005922:	9204      	str	r2, [sp, #16]
 8005924:	9a05      	ldr	r2, [sp, #20]
 8005926:	1aed      	subs	r5, r5, r3
 8005928:	1ad3      	subs	r3, r2, r3
 800592a:	9305      	str	r3, [sp, #20]
 800592c:	9b07      	ldr	r3, [sp, #28]
 800592e:	b31b      	cbz	r3, 8005978 <_dtoa_r+0x7a0>
 8005930:	9b08      	ldr	r3, [sp, #32]
 8005932:	2b00      	cmp	r3, #0
 8005934:	f000 80af 	beq.w	8005a96 <_dtoa_r+0x8be>
 8005938:	2e00      	cmp	r6, #0
 800593a:	dd13      	ble.n	8005964 <_dtoa_r+0x78c>
 800593c:	4639      	mov	r1, r7
 800593e:	4632      	mov	r2, r6
 8005940:	4620      	mov	r0, r4
 8005942:	f000 ffd5 	bl	80068f0 <__pow5mult>
 8005946:	ee18 2a10 	vmov	r2, s16
 800594a:	4601      	mov	r1, r0
 800594c:	4607      	mov	r7, r0
 800594e:	4620      	mov	r0, r4
 8005950:	f000 ff24 	bl	800679c <__multiply>
 8005954:	ee18 1a10 	vmov	r1, s16
 8005958:	4680      	mov	r8, r0
 800595a:	4620      	mov	r0, r4
 800595c:	f000 fe06 	bl	800656c <_Bfree>
 8005960:	ee08 8a10 	vmov	s16, r8
 8005964:	9b07      	ldr	r3, [sp, #28]
 8005966:	1b9a      	subs	r2, r3, r6
 8005968:	d006      	beq.n	8005978 <_dtoa_r+0x7a0>
 800596a:	ee18 1a10 	vmov	r1, s16
 800596e:	4620      	mov	r0, r4
 8005970:	f000 ffbe 	bl	80068f0 <__pow5mult>
 8005974:	ee08 0a10 	vmov	s16, r0
 8005978:	2101      	movs	r1, #1
 800597a:	4620      	mov	r0, r4
 800597c:	f000 fef8 	bl	8006770 <__i2b>
 8005980:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005982:	2b00      	cmp	r3, #0
 8005984:	4606      	mov	r6, r0
 8005986:	f340 8088 	ble.w	8005a9a <_dtoa_r+0x8c2>
 800598a:	461a      	mov	r2, r3
 800598c:	4601      	mov	r1, r0
 800598e:	4620      	mov	r0, r4
 8005990:	f000 ffae 	bl	80068f0 <__pow5mult>
 8005994:	9b06      	ldr	r3, [sp, #24]
 8005996:	2b01      	cmp	r3, #1
 8005998:	4606      	mov	r6, r0
 800599a:	f340 8081 	ble.w	8005aa0 <_dtoa_r+0x8c8>
 800599e:	f04f 0800 	mov.w	r8, #0
 80059a2:	6933      	ldr	r3, [r6, #16]
 80059a4:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 80059a8:	6918      	ldr	r0, [r3, #16]
 80059aa:	f000 fe91 	bl	80066d0 <__hi0bits>
 80059ae:	f1c0 0020 	rsb	r0, r0, #32
 80059b2:	9b05      	ldr	r3, [sp, #20]
 80059b4:	4418      	add	r0, r3
 80059b6:	f010 001f 	ands.w	r0, r0, #31
 80059ba:	f000 8092 	beq.w	8005ae2 <_dtoa_r+0x90a>
 80059be:	f1c0 0320 	rsb	r3, r0, #32
 80059c2:	2b04      	cmp	r3, #4
 80059c4:	f340 808a 	ble.w	8005adc <_dtoa_r+0x904>
 80059c8:	f1c0 001c 	rsb	r0, r0, #28
 80059cc:	9b04      	ldr	r3, [sp, #16]
 80059ce:	4403      	add	r3, r0
 80059d0:	9304      	str	r3, [sp, #16]
 80059d2:	9b05      	ldr	r3, [sp, #20]
 80059d4:	4403      	add	r3, r0
 80059d6:	4405      	add	r5, r0
 80059d8:	9305      	str	r3, [sp, #20]
 80059da:	9b04      	ldr	r3, [sp, #16]
 80059dc:	2b00      	cmp	r3, #0
 80059de:	dd07      	ble.n	80059f0 <_dtoa_r+0x818>
 80059e0:	ee18 1a10 	vmov	r1, s16
 80059e4:	461a      	mov	r2, r3
 80059e6:	4620      	mov	r0, r4
 80059e8:	f000 ffdc 	bl	80069a4 <__lshift>
 80059ec:	ee08 0a10 	vmov	s16, r0
 80059f0:	9b05      	ldr	r3, [sp, #20]
 80059f2:	2b00      	cmp	r3, #0
 80059f4:	dd05      	ble.n	8005a02 <_dtoa_r+0x82a>
 80059f6:	4631      	mov	r1, r6
 80059f8:	461a      	mov	r2, r3
 80059fa:	4620      	mov	r0, r4
 80059fc:	f000 ffd2 	bl	80069a4 <__lshift>
 8005a00:	4606      	mov	r6, r0
 8005a02:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005a04:	2b00      	cmp	r3, #0
 8005a06:	d06e      	beq.n	8005ae6 <_dtoa_r+0x90e>
 8005a08:	ee18 0a10 	vmov	r0, s16
 8005a0c:	4631      	mov	r1, r6
 8005a0e:	f001 f839 	bl	8006a84 <__mcmp>
 8005a12:	2800      	cmp	r0, #0
 8005a14:	da67      	bge.n	8005ae6 <_dtoa_r+0x90e>
 8005a16:	9b00      	ldr	r3, [sp, #0]
 8005a18:	3b01      	subs	r3, #1
 8005a1a:	ee18 1a10 	vmov	r1, s16
 8005a1e:	9300      	str	r3, [sp, #0]
 8005a20:	220a      	movs	r2, #10
 8005a22:	2300      	movs	r3, #0
 8005a24:	4620      	mov	r0, r4
 8005a26:	f000 fdc3 	bl	80065b0 <__multadd>
 8005a2a:	9b08      	ldr	r3, [sp, #32]
 8005a2c:	ee08 0a10 	vmov	s16, r0
 8005a30:	2b00      	cmp	r3, #0
 8005a32:	f000 81b1 	beq.w	8005d98 <_dtoa_r+0xbc0>
 8005a36:	2300      	movs	r3, #0
 8005a38:	4639      	mov	r1, r7
 8005a3a:	220a      	movs	r2, #10
 8005a3c:	4620      	mov	r0, r4
 8005a3e:	f000 fdb7 	bl	80065b0 <__multadd>
 8005a42:	9b02      	ldr	r3, [sp, #8]
 8005a44:	2b00      	cmp	r3, #0
 8005a46:	4607      	mov	r7, r0
 8005a48:	f300 808e 	bgt.w	8005b68 <_dtoa_r+0x990>
 8005a4c:	9b06      	ldr	r3, [sp, #24]
 8005a4e:	2b02      	cmp	r3, #2
 8005a50:	dc51      	bgt.n	8005af6 <_dtoa_r+0x91e>
 8005a52:	e089      	b.n	8005b68 <_dtoa_r+0x990>
 8005a54:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005a56:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8005a5a:	e74b      	b.n	80058f4 <_dtoa_r+0x71c>
 8005a5c:	9b03      	ldr	r3, [sp, #12]
 8005a5e:	1e5e      	subs	r6, r3, #1
 8005a60:	9b07      	ldr	r3, [sp, #28]
 8005a62:	42b3      	cmp	r3, r6
 8005a64:	bfbf      	itttt	lt
 8005a66:	9b07      	ldrlt	r3, [sp, #28]
 8005a68:	9607      	strlt	r6, [sp, #28]
 8005a6a:	1af2      	sublt	r2, r6, r3
 8005a6c:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8005a6e:	bfb6      	itet	lt
 8005a70:	189b      	addlt	r3, r3, r2
 8005a72:	1b9e      	subge	r6, r3, r6
 8005a74:	930a      	strlt	r3, [sp, #40]	; 0x28
 8005a76:	9b03      	ldr	r3, [sp, #12]
 8005a78:	bfb8      	it	lt
 8005a7a:	2600      	movlt	r6, #0
 8005a7c:	2b00      	cmp	r3, #0
 8005a7e:	bfb7      	itett	lt
 8005a80:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 8005a84:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 8005a88:	1a9d      	sublt	r5, r3, r2
 8005a8a:	2300      	movlt	r3, #0
 8005a8c:	e734      	b.n	80058f8 <_dtoa_r+0x720>
 8005a8e:	9e07      	ldr	r6, [sp, #28]
 8005a90:	9d04      	ldr	r5, [sp, #16]
 8005a92:	9f08      	ldr	r7, [sp, #32]
 8005a94:	e73b      	b.n	800590e <_dtoa_r+0x736>
 8005a96:	9a07      	ldr	r2, [sp, #28]
 8005a98:	e767      	b.n	800596a <_dtoa_r+0x792>
 8005a9a:	9b06      	ldr	r3, [sp, #24]
 8005a9c:	2b01      	cmp	r3, #1
 8005a9e:	dc18      	bgt.n	8005ad2 <_dtoa_r+0x8fa>
 8005aa0:	f1ba 0f00 	cmp.w	sl, #0
 8005aa4:	d115      	bne.n	8005ad2 <_dtoa_r+0x8fa>
 8005aa6:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8005aaa:	b993      	cbnz	r3, 8005ad2 <_dtoa_r+0x8fa>
 8005aac:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8005ab0:	0d1b      	lsrs	r3, r3, #20
 8005ab2:	051b      	lsls	r3, r3, #20
 8005ab4:	b183      	cbz	r3, 8005ad8 <_dtoa_r+0x900>
 8005ab6:	9b04      	ldr	r3, [sp, #16]
 8005ab8:	3301      	adds	r3, #1
 8005aba:	9304      	str	r3, [sp, #16]
 8005abc:	9b05      	ldr	r3, [sp, #20]
 8005abe:	3301      	adds	r3, #1
 8005ac0:	9305      	str	r3, [sp, #20]
 8005ac2:	f04f 0801 	mov.w	r8, #1
 8005ac6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005ac8:	2b00      	cmp	r3, #0
 8005aca:	f47f af6a 	bne.w	80059a2 <_dtoa_r+0x7ca>
 8005ace:	2001      	movs	r0, #1
 8005ad0:	e76f      	b.n	80059b2 <_dtoa_r+0x7da>
 8005ad2:	f04f 0800 	mov.w	r8, #0
 8005ad6:	e7f6      	b.n	8005ac6 <_dtoa_r+0x8ee>
 8005ad8:	4698      	mov	r8, r3
 8005ada:	e7f4      	b.n	8005ac6 <_dtoa_r+0x8ee>
 8005adc:	f43f af7d 	beq.w	80059da <_dtoa_r+0x802>
 8005ae0:	4618      	mov	r0, r3
 8005ae2:	301c      	adds	r0, #28
 8005ae4:	e772      	b.n	80059cc <_dtoa_r+0x7f4>
 8005ae6:	9b03      	ldr	r3, [sp, #12]
 8005ae8:	2b00      	cmp	r3, #0
 8005aea:	dc37      	bgt.n	8005b5c <_dtoa_r+0x984>
 8005aec:	9b06      	ldr	r3, [sp, #24]
 8005aee:	2b02      	cmp	r3, #2
 8005af0:	dd34      	ble.n	8005b5c <_dtoa_r+0x984>
 8005af2:	9b03      	ldr	r3, [sp, #12]
 8005af4:	9302      	str	r3, [sp, #8]
 8005af6:	9b02      	ldr	r3, [sp, #8]
 8005af8:	b96b      	cbnz	r3, 8005b16 <_dtoa_r+0x93e>
 8005afa:	4631      	mov	r1, r6
 8005afc:	2205      	movs	r2, #5
 8005afe:	4620      	mov	r0, r4
 8005b00:	f000 fd56 	bl	80065b0 <__multadd>
 8005b04:	4601      	mov	r1, r0
 8005b06:	4606      	mov	r6, r0
 8005b08:	ee18 0a10 	vmov	r0, s16
 8005b0c:	f000 ffba 	bl	8006a84 <__mcmp>
 8005b10:	2800      	cmp	r0, #0
 8005b12:	f73f adbb 	bgt.w	800568c <_dtoa_r+0x4b4>
 8005b16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005b18:	9d01      	ldr	r5, [sp, #4]
 8005b1a:	43db      	mvns	r3, r3
 8005b1c:	9300      	str	r3, [sp, #0]
 8005b1e:	f04f 0800 	mov.w	r8, #0
 8005b22:	4631      	mov	r1, r6
 8005b24:	4620      	mov	r0, r4
 8005b26:	f000 fd21 	bl	800656c <_Bfree>
 8005b2a:	2f00      	cmp	r7, #0
 8005b2c:	f43f aea4 	beq.w	8005878 <_dtoa_r+0x6a0>
 8005b30:	f1b8 0f00 	cmp.w	r8, #0
 8005b34:	d005      	beq.n	8005b42 <_dtoa_r+0x96a>
 8005b36:	45b8      	cmp	r8, r7
 8005b38:	d003      	beq.n	8005b42 <_dtoa_r+0x96a>
 8005b3a:	4641      	mov	r1, r8
 8005b3c:	4620      	mov	r0, r4
 8005b3e:	f000 fd15 	bl	800656c <_Bfree>
 8005b42:	4639      	mov	r1, r7
 8005b44:	4620      	mov	r0, r4
 8005b46:	f000 fd11 	bl	800656c <_Bfree>
 8005b4a:	e695      	b.n	8005878 <_dtoa_r+0x6a0>
 8005b4c:	2600      	movs	r6, #0
 8005b4e:	4637      	mov	r7, r6
 8005b50:	e7e1      	b.n	8005b16 <_dtoa_r+0x93e>
 8005b52:	9700      	str	r7, [sp, #0]
 8005b54:	4637      	mov	r7, r6
 8005b56:	e599      	b.n	800568c <_dtoa_r+0x4b4>
 8005b58:	40240000 	.word	0x40240000
 8005b5c:	9b08      	ldr	r3, [sp, #32]
 8005b5e:	2b00      	cmp	r3, #0
 8005b60:	f000 80ca 	beq.w	8005cf8 <_dtoa_r+0xb20>
 8005b64:	9b03      	ldr	r3, [sp, #12]
 8005b66:	9302      	str	r3, [sp, #8]
 8005b68:	2d00      	cmp	r5, #0
 8005b6a:	dd05      	ble.n	8005b78 <_dtoa_r+0x9a0>
 8005b6c:	4639      	mov	r1, r7
 8005b6e:	462a      	mov	r2, r5
 8005b70:	4620      	mov	r0, r4
 8005b72:	f000 ff17 	bl	80069a4 <__lshift>
 8005b76:	4607      	mov	r7, r0
 8005b78:	f1b8 0f00 	cmp.w	r8, #0
 8005b7c:	d05b      	beq.n	8005c36 <_dtoa_r+0xa5e>
 8005b7e:	6879      	ldr	r1, [r7, #4]
 8005b80:	4620      	mov	r0, r4
 8005b82:	f000 fcb3 	bl	80064ec <_Balloc>
 8005b86:	4605      	mov	r5, r0
 8005b88:	b928      	cbnz	r0, 8005b96 <_dtoa_r+0x9be>
 8005b8a:	4b87      	ldr	r3, [pc, #540]	; (8005da8 <_dtoa_r+0xbd0>)
 8005b8c:	4602      	mov	r2, r0
 8005b8e:	f240 21ea 	movw	r1, #746	; 0x2ea
 8005b92:	f7ff bb3b 	b.w	800520c <_dtoa_r+0x34>
 8005b96:	693a      	ldr	r2, [r7, #16]
 8005b98:	3202      	adds	r2, #2
 8005b9a:	0092      	lsls	r2, r2, #2
 8005b9c:	f107 010c 	add.w	r1, r7, #12
 8005ba0:	300c      	adds	r0, #12
 8005ba2:	f000 fc95 	bl	80064d0 <memcpy>
 8005ba6:	2201      	movs	r2, #1
 8005ba8:	4629      	mov	r1, r5
 8005baa:	4620      	mov	r0, r4
 8005bac:	f000 fefa 	bl	80069a4 <__lshift>
 8005bb0:	9b01      	ldr	r3, [sp, #4]
 8005bb2:	f103 0901 	add.w	r9, r3, #1
 8005bb6:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8005bba:	4413      	add	r3, r2
 8005bbc:	9305      	str	r3, [sp, #20]
 8005bbe:	f00a 0301 	and.w	r3, sl, #1
 8005bc2:	46b8      	mov	r8, r7
 8005bc4:	9304      	str	r3, [sp, #16]
 8005bc6:	4607      	mov	r7, r0
 8005bc8:	4631      	mov	r1, r6
 8005bca:	ee18 0a10 	vmov	r0, s16
 8005bce:	f7ff fa77 	bl	80050c0 <quorem>
 8005bd2:	4641      	mov	r1, r8
 8005bd4:	9002      	str	r0, [sp, #8]
 8005bd6:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 8005bda:	ee18 0a10 	vmov	r0, s16
 8005bde:	f000 ff51 	bl	8006a84 <__mcmp>
 8005be2:	463a      	mov	r2, r7
 8005be4:	9003      	str	r0, [sp, #12]
 8005be6:	4631      	mov	r1, r6
 8005be8:	4620      	mov	r0, r4
 8005bea:	f000 ff67 	bl	8006abc <__mdiff>
 8005bee:	68c2      	ldr	r2, [r0, #12]
 8005bf0:	f109 3bff 	add.w	fp, r9, #4294967295	; 0xffffffff
 8005bf4:	4605      	mov	r5, r0
 8005bf6:	bb02      	cbnz	r2, 8005c3a <_dtoa_r+0xa62>
 8005bf8:	4601      	mov	r1, r0
 8005bfa:	ee18 0a10 	vmov	r0, s16
 8005bfe:	f000 ff41 	bl	8006a84 <__mcmp>
 8005c02:	4602      	mov	r2, r0
 8005c04:	4629      	mov	r1, r5
 8005c06:	4620      	mov	r0, r4
 8005c08:	9207      	str	r2, [sp, #28]
 8005c0a:	f000 fcaf 	bl	800656c <_Bfree>
 8005c0e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8005c12:	ea43 0102 	orr.w	r1, r3, r2
 8005c16:	9b04      	ldr	r3, [sp, #16]
 8005c18:	430b      	orrs	r3, r1
 8005c1a:	464d      	mov	r5, r9
 8005c1c:	d10f      	bne.n	8005c3e <_dtoa_r+0xa66>
 8005c1e:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8005c22:	d02a      	beq.n	8005c7a <_dtoa_r+0xaa2>
 8005c24:	9b03      	ldr	r3, [sp, #12]
 8005c26:	2b00      	cmp	r3, #0
 8005c28:	dd02      	ble.n	8005c30 <_dtoa_r+0xa58>
 8005c2a:	9b02      	ldr	r3, [sp, #8]
 8005c2c:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 8005c30:	f88b a000 	strb.w	sl, [fp]
 8005c34:	e775      	b.n	8005b22 <_dtoa_r+0x94a>
 8005c36:	4638      	mov	r0, r7
 8005c38:	e7ba      	b.n	8005bb0 <_dtoa_r+0x9d8>
 8005c3a:	2201      	movs	r2, #1
 8005c3c:	e7e2      	b.n	8005c04 <_dtoa_r+0xa2c>
 8005c3e:	9b03      	ldr	r3, [sp, #12]
 8005c40:	2b00      	cmp	r3, #0
 8005c42:	db04      	blt.n	8005c4e <_dtoa_r+0xa76>
 8005c44:	9906      	ldr	r1, [sp, #24]
 8005c46:	430b      	orrs	r3, r1
 8005c48:	9904      	ldr	r1, [sp, #16]
 8005c4a:	430b      	orrs	r3, r1
 8005c4c:	d122      	bne.n	8005c94 <_dtoa_r+0xabc>
 8005c4e:	2a00      	cmp	r2, #0
 8005c50:	ddee      	ble.n	8005c30 <_dtoa_r+0xa58>
 8005c52:	ee18 1a10 	vmov	r1, s16
 8005c56:	2201      	movs	r2, #1
 8005c58:	4620      	mov	r0, r4
 8005c5a:	f000 fea3 	bl	80069a4 <__lshift>
 8005c5e:	4631      	mov	r1, r6
 8005c60:	ee08 0a10 	vmov	s16, r0
 8005c64:	f000 ff0e 	bl	8006a84 <__mcmp>
 8005c68:	2800      	cmp	r0, #0
 8005c6a:	dc03      	bgt.n	8005c74 <_dtoa_r+0xa9c>
 8005c6c:	d1e0      	bne.n	8005c30 <_dtoa_r+0xa58>
 8005c6e:	f01a 0f01 	tst.w	sl, #1
 8005c72:	d0dd      	beq.n	8005c30 <_dtoa_r+0xa58>
 8005c74:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8005c78:	d1d7      	bne.n	8005c2a <_dtoa_r+0xa52>
 8005c7a:	2339      	movs	r3, #57	; 0x39
 8005c7c:	f88b 3000 	strb.w	r3, [fp]
 8005c80:	462b      	mov	r3, r5
 8005c82:	461d      	mov	r5, r3
 8005c84:	3b01      	subs	r3, #1
 8005c86:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8005c8a:	2a39      	cmp	r2, #57	; 0x39
 8005c8c:	d071      	beq.n	8005d72 <_dtoa_r+0xb9a>
 8005c8e:	3201      	adds	r2, #1
 8005c90:	701a      	strb	r2, [r3, #0]
 8005c92:	e746      	b.n	8005b22 <_dtoa_r+0x94a>
 8005c94:	2a00      	cmp	r2, #0
 8005c96:	dd07      	ble.n	8005ca8 <_dtoa_r+0xad0>
 8005c98:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8005c9c:	d0ed      	beq.n	8005c7a <_dtoa_r+0xaa2>
 8005c9e:	f10a 0301 	add.w	r3, sl, #1
 8005ca2:	f88b 3000 	strb.w	r3, [fp]
 8005ca6:	e73c      	b.n	8005b22 <_dtoa_r+0x94a>
 8005ca8:	9b05      	ldr	r3, [sp, #20]
 8005caa:	f809 ac01 	strb.w	sl, [r9, #-1]
 8005cae:	4599      	cmp	r9, r3
 8005cb0:	d047      	beq.n	8005d42 <_dtoa_r+0xb6a>
 8005cb2:	ee18 1a10 	vmov	r1, s16
 8005cb6:	2300      	movs	r3, #0
 8005cb8:	220a      	movs	r2, #10
 8005cba:	4620      	mov	r0, r4
 8005cbc:	f000 fc78 	bl	80065b0 <__multadd>
 8005cc0:	45b8      	cmp	r8, r7
 8005cc2:	ee08 0a10 	vmov	s16, r0
 8005cc6:	f04f 0300 	mov.w	r3, #0
 8005cca:	f04f 020a 	mov.w	r2, #10
 8005cce:	4641      	mov	r1, r8
 8005cd0:	4620      	mov	r0, r4
 8005cd2:	d106      	bne.n	8005ce2 <_dtoa_r+0xb0a>
 8005cd4:	f000 fc6c 	bl	80065b0 <__multadd>
 8005cd8:	4680      	mov	r8, r0
 8005cda:	4607      	mov	r7, r0
 8005cdc:	f109 0901 	add.w	r9, r9, #1
 8005ce0:	e772      	b.n	8005bc8 <_dtoa_r+0x9f0>
 8005ce2:	f000 fc65 	bl	80065b0 <__multadd>
 8005ce6:	4639      	mov	r1, r7
 8005ce8:	4680      	mov	r8, r0
 8005cea:	2300      	movs	r3, #0
 8005cec:	220a      	movs	r2, #10
 8005cee:	4620      	mov	r0, r4
 8005cf0:	f000 fc5e 	bl	80065b0 <__multadd>
 8005cf4:	4607      	mov	r7, r0
 8005cf6:	e7f1      	b.n	8005cdc <_dtoa_r+0xb04>
 8005cf8:	9b03      	ldr	r3, [sp, #12]
 8005cfa:	9302      	str	r3, [sp, #8]
 8005cfc:	9d01      	ldr	r5, [sp, #4]
 8005cfe:	ee18 0a10 	vmov	r0, s16
 8005d02:	4631      	mov	r1, r6
 8005d04:	f7ff f9dc 	bl	80050c0 <quorem>
 8005d08:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 8005d0c:	9b01      	ldr	r3, [sp, #4]
 8005d0e:	f805 ab01 	strb.w	sl, [r5], #1
 8005d12:	1aea      	subs	r2, r5, r3
 8005d14:	9b02      	ldr	r3, [sp, #8]
 8005d16:	4293      	cmp	r3, r2
 8005d18:	dd09      	ble.n	8005d2e <_dtoa_r+0xb56>
 8005d1a:	ee18 1a10 	vmov	r1, s16
 8005d1e:	2300      	movs	r3, #0
 8005d20:	220a      	movs	r2, #10
 8005d22:	4620      	mov	r0, r4
 8005d24:	f000 fc44 	bl	80065b0 <__multadd>
 8005d28:	ee08 0a10 	vmov	s16, r0
 8005d2c:	e7e7      	b.n	8005cfe <_dtoa_r+0xb26>
 8005d2e:	9b02      	ldr	r3, [sp, #8]
 8005d30:	2b00      	cmp	r3, #0
 8005d32:	bfc8      	it	gt
 8005d34:	461d      	movgt	r5, r3
 8005d36:	9b01      	ldr	r3, [sp, #4]
 8005d38:	bfd8      	it	le
 8005d3a:	2501      	movle	r5, #1
 8005d3c:	441d      	add	r5, r3
 8005d3e:	f04f 0800 	mov.w	r8, #0
 8005d42:	ee18 1a10 	vmov	r1, s16
 8005d46:	2201      	movs	r2, #1
 8005d48:	4620      	mov	r0, r4
 8005d4a:	f000 fe2b 	bl	80069a4 <__lshift>
 8005d4e:	4631      	mov	r1, r6
 8005d50:	ee08 0a10 	vmov	s16, r0
 8005d54:	f000 fe96 	bl	8006a84 <__mcmp>
 8005d58:	2800      	cmp	r0, #0
 8005d5a:	dc91      	bgt.n	8005c80 <_dtoa_r+0xaa8>
 8005d5c:	d102      	bne.n	8005d64 <_dtoa_r+0xb8c>
 8005d5e:	f01a 0f01 	tst.w	sl, #1
 8005d62:	d18d      	bne.n	8005c80 <_dtoa_r+0xaa8>
 8005d64:	462b      	mov	r3, r5
 8005d66:	461d      	mov	r5, r3
 8005d68:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8005d6c:	2a30      	cmp	r2, #48	; 0x30
 8005d6e:	d0fa      	beq.n	8005d66 <_dtoa_r+0xb8e>
 8005d70:	e6d7      	b.n	8005b22 <_dtoa_r+0x94a>
 8005d72:	9a01      	ldr	r2, [sp, #4]
 8005d74:	429a      	cmp	r2, r3
 8005d76:	d184      	bne.n	8005c82 <_dtoa_r+0xaaa>
 8005d78:	9b00      	ldr	r3, [sp, #0]
 8005d7a:	3301      	adds	r3, #1
 8005d7c:	9300      	str	r3, [sp, #0]
 8005d7e:	2331      	movs	r3, #49	; 0x31
 8005d80:	7013      	strb	r3, [r2, #0]
 8005d82:	e6ce      	b.n	8005b22 <_dtoa_r+0x94a>
 8005d84:	4b09      	ldr	r3, [pc, #36]	; (8005dac <_dtoa_r+0xbd4>)
 8005d86:	f7ff ba95 	b.w	80052b4 <_dtoa_r+0xdc>
 8005d8a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8005d8c:	2b00      	cmp	r3, #0
 8005d8e:	f47f aa6e 	bne.w	800526e <_dtoa_r+0x96>
 8005d92:	4b07      	ldr	r3, [pc, #28]	; (8005db0 <_dtoa_r+0xbd8>)
 8005d94:	f7ff ba8e 	b.w	80052b4 <_dtoa_r+0xdc>
 8005d98:	9b02      	ldr	r3, [sp, #8]
 8005d9a:	2b00      	cmp	r3, #0
 8005d9c:	dcae      	bgt.n	8005cfc <_dtoa_r+0xb24>
 8005d9e:	9b06      	ldr	r3, [sp, #24]
 8005da0:	2b02      	cmp	r3, #2
 8005da2:	f73f aea8 	bgt.w	8005af6 <_dtoa_r+0x91e>
 8005da6:	e7a9      	b.n	8005cfc <_dtoa_r+0xb24>
 8005da8:	08008648 	.word	0x08008648
 8005dac:	0800844c 	.word	0x0800844c
 8005db0:	080085c9 	.word	0x080085c9

08005db4 <rshift>:
 8005db4:	6903      	ldr	r3, [r0, #16]
 8005db6:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8005dba:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005dbe:	ea4f 1261 	mov.w	r2, r1, asr #5
 8005dc2:	f100 0414 	add.w	r4, r0, #20
 8005dc6:	dd45      	ble.n	8005e54 <rshift+0xa0>
 8005dc8:	f011 011f 	ands.w	r1, r1, #31
 8005dcc:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8005dd0:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8005dd4:	d10c      	bne.n	8005df0 <rshift+0x3c>
 8005dd6:	f100 0710 	add.w	r7, r0, #16
 8005dda:	4629      	mov	r1, r5
 8005ddc:	42b1      	cmp	r1, r6
 8005dde:	d334      	bcc.n	8005e4a <rshift+0x96>
 8005de0:	1a9b      	subs	r3, r3, r2
 8005de2:	009b      	lsls	r3, r3, #2
 8005de4:	1eea      	subs	r2, r5, #3
 8005de6:	4296      	cmp	r6, r2
 8005de8:	bf38      	it	cc
 8005dea:	2300      	movcc	r3, #0
 8005dec:	4423      	add	r3, r4
 8005dee:	e015      	b.n	8005e1c <rshift+0x68>
 8005df0:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8005df4:	f1c1 0820 	rsb	r8, r1, #32
 8005df8:	40cf      	lsrs	r7, r1
 8005dfa:	f105 0e04 	add.w	lr, r5, #4
 8005dfe:	46a1      	mov	r9, r4
 8005e00:	4576      	cmp	r6, lr
 8005e02:	46f4      	mov	ip, lr
 8005e04:	d815      	bhi.n	8005e32 <rshift+0x7e>
 8005e06:	1a9a      	subs	r2, r3, r2
 8005e08:	0092      	lsls	r2, r2, #2
 8005e0a:	3a04      	subs	r2, #4
 8005e0c:	3501      	adds	r5, #1
 8005e0e:	42ae      	cmp	r6, r5
 8005e10:	bf38      	it	cc
 8005e12:	2200      	movcc	r2, #0
 8005e14:	18a3      	adds	r3, r4, r2
 8005e16:	50a7      	str	r7, [r4, r2]
 8005e18:	b107      	cbz	r7, 8005e1c <rshift+0x68>
 8005e1a:	3304      	adds	r3, #4
 8005e1c:	1b1a      	subs	r2, r3, r4
 8005e1e:	42a3      	cmp	r3, r4
 8005e20:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8005e24:	bf08      	it	eq
 8005e26:	2300      	moveq	r3, #0
 8005e28:	6102      	str	r2, [r0, #16]
 8005e2a:	bf08      	it	eq
 8005e2c:	6143      	streq	r3, [r0, #20]
 8005e2e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005e32:	f8dc c000 	ldr.w	ip, [ip]
 8005e36:	fa0c fc08 	lsl.w	ip, ip, r8
 8005e3a:	ea4c 0707 	orr.w	r7, ip, r7
 8005e3e:	f849 7b04 	str.w	r7, [r9], #4
 8005e42:	f85e 7b04 	ldr.w	r7, [lr], #4
 8005e46:	40cf      	lsrs	r7, r1
 8005e48:	e7da      	b.n	8005e00 <rshift+0x4c>
 8005e4a:	f851 cb04 	ldr.w	ip, [r1], #4
 8005e4e:	f847 cf04 	str.w	ip, [r7, #4]!
 8005e52:	e7c3      	b.n	8005ddc <rshift+0x28>
 8005e54:	4623      	mov	r3, r4
 8005e56:	e7e1      	b.n	8005e1c <rshift+0x68>

08005e58 <__hexdig_fun>:
 8005e58:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8005e5c:	2b09      	cmp	r3, #9
 8005e5e:	d802      	bhi.n	8005e66 <__hexdig_fun+0xe>
 8005e60:	3820      	subs	r0, #32
 8005e62:	b2c0      	uxtb	r0, r0
 8005e64:	4770      	bx	lr
 8005e66:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 8005e6a:	2b05      	cmp	r3, #5
 8005e6c:	d801      	bhi.n	8005e72 <__hexdig_fun+0x1a>
 8005e6e:	3847      	subs	r0, #71	; 0x47
 8005e70:	e7f7      	b.n	8005e62 <__hexdig_fun+0xa>
 8005e72:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8005e76:	2b05      	cmp	r3, #5
 8005e78:	d801      	bhi.n	8005e7e <__hexdig_fun+0x26>
 8005e7a:	3827      	subs	r0, #39	; 0x27
 8005e7c:	e7f1      	b.n	8005e62 <__hexdig_fun+0xa>
 8005e7e:	2000      	movs	r0, #0
 8005e80:	4770      	bx	lr
	...

08005e84 <__gethex>:
 8005e84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005e88:	ed2d 8b02 	vpush	{d8}
 8005e8c:	b089      	sub	sp, #36	; 0x24
 8005e8e:	ee08 0a10 	vmov	s16, r0
 8005e92:	9304      	str	r3, [sp, #16]
 8005e94:	4bb4      	ldr	r3, [pc, #720]	; (8006168 <__gethex+0x2e4>)
 8005e96:	681b      	ldr	r3, [r3, #0]
 8005e98:	9301      	str	r3, [sp, #4]
 8005e9a:	4618      	mov	r0, r3
 8005e9c:	468b      	mov	fp, r1
 8005e9e:	4690      	mov	r8, r2
 8005ea0:	f7fa f9b6 	bl	8000210 <strlen>
 8005ea4:	9b01      	ldr	r3, [sp, #4]
 8005ea6:	f8db 2000 	ldr.w	r2, [fp]
 8005eaa:	4403      	add	r3, r0
 8005eac:	4682      	mov	sl, r0
 8005eae:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8005eb2:	9305      	str	r3, [sp, #20]
 8005eb4:	1c93      	adds	r3, r2, #2
 8005eb6:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 8005eba:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 8005ebe:	32fe      	adds	r2, #254	; 0xfe
 8005ec0:	18d1      	adds	r1, r2, r3
 8005ec2:	461f      	mov	r7, r3
 8005ec4:	f813 0b01 	ldrb.w	r0, [r3], #1
 8005ec8:	9100      	str	r1, [sp, #0]
 8005eca:	2830      	cmp	r0, #48	; 0x30
 8005ecc:	d0f8      	beq.n	8005ec0 <__gethex+0x3c>
 8005ece:	f7ff ffc3 	bl	8005e58 <__hexdig_fun>
 8005ed2:	4604      	mov	r4, r0
 8005ed4:	2800      	cmp	r0, #0
 8005ed6:	d13a      	bne.n	8005f4e <__gethex+0xca>
 8005ed8:	9901      	ldr	r1, [sp, #4]
 8005eda:	4652      	mov	r2, sl
 8005edc:	4638      	mov	r0, r7
 8005ede:	f001 fa33 	bl	8007348 <strncmp>
 8005ee2:	4605      	mov	r5, r0
 8005ee4:	2800      	cmp	r0, #0
 8005ee6:	d168      	bne.n	8005fba <__gethex+0x136>
 8005ee8:	f817 000a 	ldrb.w	r0, [r7, sl]
 8005eec:	eb07 060a 	add.w	r6, r7, sl
 8005ef0:	f7ff ffb2 	bl	8005e58 <__hexdig_fun>
 8005ef4:	2800      	cmp	r0, #0
 8005ef6:	d062      	beq.n	8005fbe <__gethex+0x13a>
 8005ef8:	4633      	mov	r3, r6
 8005efa:	7818      	ldrb	r0, [r3, #0]
 8005efc:	2830      	cmp	r0, #48	; 0x30
 8005efe:	461f      	mov	r7, r3
 8005f00:	f103 0301 	add.w	r3, r3, #1
 8005f04:	d0f9      	beq.n	8005efa <__gethex+0x76>
 8005f06:	f7ff ffa7 	bl	8005e58 <__hexdig_fun>
 8005f0a:	2301      	movs	r3, #1
 8005f0c:	fab0 f480 	clz	r4, r0
 8005f10:	0964      	lsrs	r4, r4, #5
 8005f12:	4635      	mov	r5, r6
 8005f14:	9300      	str	r3, [sp, #0]
 8005f16:	463a      	mov	r2, r7
 8005f18:	4616      	mov	r6, r2
 8005f1a:	3201      	adds	r2, #1
 8005f1c:	7830      	ldrb	r0, [r6, #0]
 8005f1e:	f7ff ff9b 	bl	8005e58 <__hexdig_fun>
 8005f22:	2800      	cmp	r0, #0
 8005f24:	d1f8      	bne.n	8005f18 <__gethex+0x94>
 8005f26:	9901      	ldr	r1, [sp, #4]
 8005f28:	4652      	mov	r2, sl
 8005f2a:	4630      	mov	r0, r6
 8005f2c:	f001 fa0c 	bl	8007348 <strncmp>
 8005f30:	b980      	cbnz	r0, 8005f54 <__gethex+0xd0>
 8005f32:	b94d      	cbnz	r5, 8005f48 <__gethex+0xc4>
 8005f34:	eb06 050a 	add.w	r5, r6, sl
 8005f38:	462a      	mov	r2, r5
 8005f3a:	4616      	mov	r6, r2
 8005f3c:	3201      	adds	r2, #1
 8005f3e:	7830      	ldrb	r0, [r6, #0]
 8005f40:	f7ff ff8a 	bl	8005e58 <__hexdig_fun>
 8005f44:	2800      	cmp	r0, #0
 8005f46:	d1f8      	bne.n	8005f3a <__gethex+0xb6>
 8005f48:	1bad      	subs	r5, r5, r6
 8005f4a:	00ad      	lsls	r5, r5, #2
 8005f4c:	e004      	b.n	8005f58 <__gethex+0xd4>
 8005f4e:	2400      	movs	r4, #0
 8005f50:	4625      	mov	r5, r4
 8005f52:	e7e0      	b.n	8005f16 <__gethex+0x92>
 8005f54:	2d00      	cmp	r5, #0
 8005f56:	d1f7      	bne.n	8005f48 <__gethex+0xc4>
 8005f58:	7833      	ldrb	r3, [r6, #0]
 8005f5a:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8005f5e:	2b50      	cmp	r3, #80	; 0x50
 8005f60:	d13b      	bne.n	8005fda <__gethex+0x156>
 8005f62:	7873      	ldrb	r3, [r6, #1]
 8005f64:	2b2b      	cmp	r3, #43	; 0x2b
 8005f66:	d02c      	beq.n	8005fc2 <__gethex+0x13e>
 8005f68:	2b2d      	cmp	r3, #45	; 0x2d
 8005f6a:	d02e      	beq.n	8005fca <__gethex+0x146>
 8005f6c:	1c71      	adds	r1, r6, #1
 8005f6e:	f04f 0900 	mov.w	r9, #0
 8005f72:	7808      	ldrb	r0, [r1, #0]
 8005f74:	f7ff ff70 	bl	8005e58 <__hexdig_fun>
 8005f78:	1e43      	subs	r3, r0, #1
 8005f7a:	b2db      	uxtb	r3, r3
 8005f7c:	2b18      	cmp	r3, #24
 8005f7e:	d82c      	bhi.n	8005fda <__gethex+0x156>
 8005f80:	f1a0 0210 	sub.w	r2, r0, #16
 8005f84:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8005f88:	f7ff ff66 	bl	8005e58 <__hexdig_fun>
 8005f8c:	1e43      	subs	r3, r0, #1
 8005f8e:	b2db      	uxtb	r3, r3
 8005f90:	2b18      	cmp	r3, #24
 8005f92:	d91d      	bls.n	8005fd0 <__gethex+0x14c>
 8005f94:	f1b9 0f00 	cmp.w	r9, #0
 8005f98:	d000      	beq.n	8005f9c <__gethex+0x118>
 8005f9a:	4252      	negs	r2, r2
 8005f9c:	4415      	add	r5, r2
 8005f9e:	f8cb 1000 	str.w	r1, [fp]
 8005fa2:	b1e4      	cbz	r4, 8005fde <__gethex+0x15a>
 8005fa4:	9b00      	ldr	r3, [sp, #0]
 8005fa6:	2b00      	cmp	r3, #0
 8005fa8:	bf14      	ite	ne
 8005faa:	2700      	movne	r7, #0
 8005fac:	2706      	moveq	r7, #6
 8005fae:	4638      	mov	r0, r7
 8005fb0:	b009      	add	sp, #36	; 0x24
 8005fb2:	ecbd 8b02 	vpop	{d8}
 8005fb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005fba:	463e      	mov	r6, r7
 8005fbc:	4625      	mov	r5, r4
 8005fbe:	2401      	movs	r4, #1
 8005fc0:	e7ca      	b.n	8005f58 <__gethex+0xd4>
 8005fc2:	f04f 0900 	mov.w	r9, #0
 8005fc6:	1cb1      	adds	r1, r6, #2
 8005fc8:	e7d3      	b.n	8005f72 <__gethex+0xee>
 8005fca:	f04f 0901 	mov.w	r9, #1
 8005fce:	e7fa      	b.n	8005fc6 <__gethex+0x142>
 8005fd0:	230a      	movs	r3, #10
 8005fd2:	fb03 0202 	mla	r2, r3, r2, r0
 8005fd6:	3a10      	subs	r2, #16
 8005fd8:	e7d4      	b.n	8005f84 <__gethex+0x100>
 8005fda:	4631      	mov	r1, r6
 8005fdc:	e7df      	b.n	8005f9e <__gethex+0x11a>
 8005fde:	1bf3      	subs	r3, r6, r7
 8005fe0:	3b01      	subs	r3, #1
 8005fe2:	4621      	mov	r1, r4
 8005fe4:	2b07      	cmp	r3, #7
 8005fe6:	dc0b      	bgt.n	8006000 <__gethex+0x17c>
 8005fe8:	ee18 0a10 	vmov	r0, s16
 8005fec:	f000 fa7e 	bl	80064ec <_Balloc>
 8005ff0:	4604      	mov	r4, r0
 8005ff2:	b940      	cbnz	r0, 8006006 <__gethex+0x182>
 8005ff4:	4b5d      	ldr	r3, [pc, #372]	; (800616c <__gethex+0x2e8>)
 8005ff6:	4602      	mov	r2, r0
 8005ff8:	21de      	movs	r1, #222	; 0xde
 8005ffa:	485d      	ldr	r0, [pc, #372]	; (8006170 <__gethex+0x2ec>)
 8005ffc:	f001 f9c6 	bl	800738c <__assert_func>
 8006000:	3101      	adds	r1, #1
 8006002:	105b      	asrs	r3, r3, #1
 8006004:	e7ee      	b.n	8005fe4 <__gethex+0x160>
 8006006:	f100 0914 	add.w	r9, r0, #20
 800600a:	f04f 0b00 	mov.w	fp, #0
 800600e:	f1ca 0301 	rsb	r3, sl, #1
 8006012:	f8cd 9008 	str.w	r9, [sp, #8]
 8006016:	f8cd b000 	str.w	fp, [sp]
 800601a:	9306      	str	r3, [sp, #24]
 800601c:	42b7      	cmp	r7, r6
 800601e:	d340      	bcc.n	80060a2 <__gethex+0x21e>
 8006020:	9802      	ldr	r0, [sp, #8]
 8006022:	9b00      	ldr	r3, [sp, #0]
 8006024:	f840 3b04 	str.w	r3, [r0], #4
 8006028:	eba0 0009 	sub.w	r0, r0, r9
 800602c:	1080      	asrs	r0, r0, #2
 800602e:	0146      	lsls	r6, r0, #5
 8006030:	6120      	str	r0, [r4, #16]
 8006032:	4618      	mov	r0, r3
 8006034:	f000 fb4c 	bl	80066d0 <__hi0bits>
 8006038:	1a30      	subs	r0, r6, r0
 800603a:	f8d8 6000 	ldr.w	r6, [r8]
 800603e:	42b0      	cmp	r0, r6
 8006040:	dd63      	ble.n	800610a <__gethex+0x286>
 8006042:	1b87      	subs	r7, r0, r6
 8006044:	4639      	mov	r1, r7
 8006046:	4620      	mov	r0, r4
 8006048:	f000 fef0 	bl	8006e2c <__any_on>
 800604c:	4682      	mov	sl, r0
 800604e:	b1a8      	cbz	r0, 800607c <__gethex+0x1f8>
 8006050:	1e7b      	subs	r3, r7, #1
 8006052:	1159      	asrs	r1, r3, #5
 8006054:	f003 021f 	and.w	r2, r3, #31
 8006058:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 800605c:	f04f 0a01 	mov.w	sl, #1
 8006060:	fa0a f202 	lsl.w	r2, sl, r2
 8006064:	420a      	tst	r2, r1
 8006066:	d009      	beq.n	800607c <__gethex+0x1f8>
 8006068:	4553      	cmp	r3, sl
 800606a:	dd05      	ble.n	8006078 <__gethex+0x1f4>
 800606c:	1eb9      	subs	r1, r7, #2
 800606e:	4620      	mov	r0, r4
 8006070:	f000 fedc 	bl	8006e2c <__any_on>
 8006074:	2800      	cmp	r0, #0
 8006076:	d145      	bne.n	8006104 <__gethex+0x280>
 8006078:	f04f 0a02 	mov.w	sl, #2
 800607c:	4639      	mov	r1, r7
 800607e:	4620      	mov	r0, r4
 8006080:	f7ff fe98 	bl	8005db4 <rshift>
 8006084:	443d      	add	r5, r7
 8006086:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800608a:	42ab      	cmp	r3, r5
 800608c:	da4c      	bge.n	8006128 <__gethex+0x2a4>
 800608e:	ee18 0a10 	vmov	r0, s16
 8006092:	4621      	mov	r1, r4
 8006094:	f000 fa6a 	bl	800656c <_Bfree>
 8006098:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800609a:	2300      	movs	r3, #0
 800609c:	6013      	str	r3, [r2, #0]
 800609e:	27a3      	movs	r7, #163	; 0xa3
 80060a0:	e785      	b.n	8005fae <__gethex+0x12a>
 80060a2:	1e73      	subs	r3, r6, #1
 80060a4:	9a05      	ldr	r2, [sp, #20]
 80060a6:	9303      	str	r3, [sp, #12]
 80060a8:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 80060ac:	4293      	cmp	r3, r2
 80060ae:	d019      	beq.n	80060e4 <__gethex+0x260>
 80060b0:	f1bb 0f20 	cmp.w	fp, #32
 80060b4:	d107      	bne.n	80060c6 <__gethex+0x242>
 80060b6:	9b02      	ldr	r3, [sp, #8]
 80060b8:	9a00      	ldr	r2, [sp, #0]
 80060ba:	f843 2b04 	str.w	r2, [r3], #4
 80060be:	9302      	str	r3, [sp, #8]
 80060c0:	2300      	movs	r3, #0
 80060c2:	9300      	str	r3, [sp, #0]
 80060c4:	469b      	mov	fp, r3
 80060c6:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 80060ca:	f7ff fec5 	bl	8005e58 <__hexdig_fun>
 80060ce:	9b00      	ldr	r3, [sp, #0]
 80060d0:	f000 000f 	and.w	r0, r0, #15
 80060d4:	fa00 f00b 	lsl.w	r0, r0, fp
 80060d8:	4303      	orrs	r3, r0
 80060da:	9300      	str	r3, [sp, #0]
 80060dc:	f10b 0b04 	add.w	fp, fp, #4
 80060e0:	9b03      	ldr	r3, [sp, #12]
 80060e2:	e00d      	b.n	8006100 <__gethex+0x27c>
 80060e4:	9b03      	ldr	r3, [sp, #12]
 80060e6:	9a06      	ldr	r2, [sp, #24]
 80060e8:	4413      	add	r3, r2
 80060ea:	42bb      	cmp	r3, r7
 80060ec:	d3e0      	bcc.n	80060b0 <__gethex+0x22c>
 80060ee:	4618      	mov	r0, r3
 80060f0:	9901      	ldr	r1, [sp, #4]
 80060f2:	9307      	str	r3, [sp, #28]
 80060f4:	4652      	mov	r2, sl
 80060f6:	f001 f927 	bl	8007348 <strncmp>
 80060fa:	9b07      	ldr	r3, [sp, #28]
 80060fc:	2800      	cmp	r0, #0
 80060fe:	d1d7      	bne.n	80060b0 <__gethex+0x22c>
 8006100:	461e      	mov	r6, r3
 8006102:	e78b      	b.n	800601c <__gethex+0x198>
 8006104:	f04f 0a03 	mov.w	sl, #3
 8006108:	e7b8      	b.n	800607c <__gethex+0x1f8>
 800610a:	da0a      	bge.n	8006122 <__gethex+0x29e>
 800610c:	1a37      	subs	r7, r6, r0
 800610e:	4621      	mov	r1, r4
 8006110:	ee18 0a10 	vmov	r0, s16
 8006114:	463a      	mov	r2, r7
 8006116:	f000 fc45 	bl	80069a4 <__lshift>
 800611a:	1bed      	subs	r5, r5, r7
 800611c:	4604      	mov	r4, r0
 800611e:	f100 0914 	add.w	r9, r0, #20
 8006122:	f04f 0a00 	mov.w	sl, #0
 8006126:	e7ae      	b.n	8006086 <__gethex+0x202>
 8006128:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800612c:	42a8      	cmp	r0, r5
 800612e:	dd72      	ble.n	8006216 <__gethex+0x392>
 8006130:	1b45      	subs	r5, r0, r5
 8006132:	42ae      	cmp	r6, r5
 8006134:	dc36      	bgt.n	80061a4 <__gethex+0x320>
 8006136:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800613a:	2b02      	cmp	r3, #2
 800613c:	d02a      	beq.n	8006194 <__gethex+0x310>
 800613e:	2b03      	cmp	r3, #3
 8006140:	d02c      	beq.n	800619c <__gethex+0x318>
 8006142:	2b01      	cmp	r3, #1
 8006144:	d11c      	bne.n	8006180 <__gethex+0x2fc>
 8006146:	42ae      	cmp	r6, r5
 8006148:	d11a      	bne.n	8006180 <__gethex+0x2fc>
 800614a:	2e01      	cmp	r6, #1
 800614c:	d112      	bne.n	8006174 <__gethex+0x2f0>
 800614e:	9a04      	ldr	r2, [sp, #16]
 8006150:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8006154:	6013      	str	r3, [r2, #0]
 8006156:	2301      	movs	r3, #1
 8006158:	6123      	str	r3, [r4, #16]
 800615a:	f8c9 3000 	str.w	r3, [r9]
 800615e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006160:	2762      	movs	r7, #98	; 0x62
 8006162:	601c      	str	r4, [r3, #0]
 8006164:	e723      	b.n	8005fae <__gethex+0x12a>
 8006166:	bf00      	nop
 8006168:	080086c0 	.word	0x080086c0
 800616c:	08008648 	.word	0x08008648
 8006170:	08008659 	.word	0x08008659
 8006174:	1e71      	subs	r1, r6, #1
 8006176:	4620      	mov	r0, r4
 8006178:	f000 fe58 	bl	8006e2c <__any_on>
 800617c:	2800      	cmp	r0, #0
 800617e:	d1e6      	bne.n	800614e <__gethex+0x2ca>
 8006180:	ee18 0a10 	vmov	r0, s16
 8006184:	4621      	mov	r1, r4
 8006186:	f000 f9f1 	bl	800656c <_Bfree>
 800618a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800618c:	2300      	movs	r3, #0
 800618e:	6013      	str	r3, [r2, #0]
 8006190:	2750      	movs	r7, #80	; 0x50
 8006192:	e70c      	b.n	8005fae <__gethex+0x12a>
 8006194:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006196:	2b00      	cmp	r3, #0
 8006198:	d1f2      	bne.n	8006180 <__gethex+0x2fc>
 800619a:	e7d8      	b.n	800614e <__gethex+0x2ca>
 800619c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800619e:	2b00      	cmp	r3, #0
 80061a0:	d1d5      	bne.n	800614e <__gethex+0x2ca>
 80061a2:	e7ed      	b.n	8006180 <__gethex+0x2fc>
 80061a4:	1e6f      	subs	r7, r5, #1
 80061a6:	f1ba 0f00 	cmp.w	sl, #0
 80061aa:	d131      	bne.n	8006210 <__gethex+0x38c>
 80061ac:	b127      	cbz	r7, 80061b8 <__gethex+0x334>
 80061ae:	4639      	mov	r1, r7
 80061b0:	4620      	mov	r0, r4
 80061b2:	f000 fe3b 	bl	8006e2c <__any_on>
 80061b6:	4682      	mov	sl, r0
 80061b8:	117b      	asrs	r3, r7, #5
 80061ba:	2101      	movs	r1, #1
 80061bc:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 80061c0:	f007 071f 	and.w	r7, r7, #31
 80061c4:	fa01 f707 	lsl.w	r7, r1, r7
 80061c8:	421f      	tst	r7, r3
 80061ca:	4629      	mov	r1, r5
 80061cc:	4620      	mov	r0, r4
 80061ce:	bf18      	it	ne
 80061d0:	f04a 0a02 	orrne.w	sl, sl, #2
 80061d4:	1b76      	subs	r6, r6, r5
 80061d6:	f7ff fded 	bl	8005db4 <rshift>
 80061da:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80061de:	2702      	movs	r7, #2
 80061e0:	f1ba 0f00 	cmp.w	sl, #0
 80061e4:	d048      	beq.n	8006278 <__gethex+0x3f4>
 80061e6:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80061ea:	2b02      	cmp	r3, #2
 80061ec:	d015      	beq.n	800621a <__gethex+0x396>
 80061ee:	2b03      	cmp	r3, #3
 80061f0:	d017      	beq.n	8006222 <__gethex+0x39e>
 80061f2:	2b01      	cmp	r3, #1
 80061f4:	d109      	bne.n	800620a <__gethex+0x386>
 80061f6:	f01a 0f02 	tst.w	sl, #2
 80061fa:	d006      	beq.n	800620a <__gethex+0x386>
 80061fc:	f8d9 0000 	ldr.w	r0, [r9]
 8006200:	ea4a 0a00 	orr.w	sl, sl, r0
 8006204:	f01a 0f01 	tst.w	sl, #1
 8006208:	d10e      	bne.n	8006228 <__gethex+0x3a4>
 800620a:	f047 0710 	orr.w	r7, r7, #16
 800620e:	e033      	b.n	8006278 <__gethex+0x3f4>
 8006210:	f04f 0a01 	mov.w	sl, #1
 8006214:	e7d0      	b.n	80061b8 <__gethex+0x334>
 8006216:	2701      	movs	r7, #1
 8006218:	e7e2      	b.n	80061e0 <__gethex+0x35c>
 800621a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800621c:	f1c3 0301 	rsb	r3, r3, #1
 8006220:	9315      	str	r3, [sp, #84]	; 0x54
 8006222:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006224:	2b00      	cmp	r3, #0
 8006226:	d0f0      	beq.n	800620a <__gethex+0x386>
 8006228:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800622c:	f104 0314 	add.w	r3, r4, #20
 8006230:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8006234:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8006238:	f04f 0c00 	mov.w	ip, #0
 800623c:	4618      	mov	r0, r3
 800623e:	f853 2b04 	ldr.w	r2, [r3], #4
 8006242:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
 8006246:	d01c      	beq.n	8006282 <__gethex+0x3fe>
 8006248:	3201      	adds	r2, #1
 800624a:	6002      	str	r2, [r0, #0]
 800624c:	2f02      	cmp	r7, #2
 800624e:	f104 0314 	add.w	r3, r4, #20
 8006252:	d13f      	bne.n	80062d4 <__gethex+0x450>
 8006254:	f8d8 2000 	ldr.w	r2, [r8]
 8006258:	3a01      	subs	r2, #1
 800625a:	42b2      	cmp	r2, r6
 800625c:	d10a      	bne.n	8006274 <__gethex+0x3f0>
 800625e:	1171      	asrs	r1, r6, #5
 8006260:	2201      	movs	r2, #1
 8006262:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8006266:	f006 061f 	and.w	r6, r6, #31
 800626a:	fa02 f606 	lsl.w	r6, r2, r6
 800626e:	421e      	tst	r6, r3
 8006270:	bf18      	it	ne
 8006272:	4617      	movne	r7, r2
 8006274:	f047 0720 	orr.w	r7, r7, #32
 8006278:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800627a:	601c      	str	r4, [r3, #0]
 800627c:	9b04      	ldr	r3, [sp, #16]
 800627e:	601d      	str	r5, [r3, #0]
 8006280:	e695      	b.n	8005fae <__gethex+0x12a>
 8006282:	4299      	cmp	r1, r3
 8006284:	f843 cc04 	str.w	ip, [r3, #-4]
 8006288:	d8d8      	bhi.n	800623c <__gethex+0x3b8>
 800628a:	68a3      	ldr	r3, [r4, #8]
 800628c:	459b      	cmp	fp, r3
 800628e:	db19      	blt.n	80062c4 <__gethex+0x440>
 8006290:	6861      	ldr	r1, [r4, #4]
 8006292:	ee18 0a10 	vmov	r0, s16
 8006296:	3101      	adds	r1, #1
 8006298:	f000 f928 	bl	80064ec <_Balloc>
 800629c:	4681      	mov	r9, r0
 800629e:	b918      	cbnz	r0, 80062a8 <__gethex+0x424>
 80062a0:	4b1a      	ldr	r3, [pc, #104]	; (800630c <__gethex+0x488>)
 80062a2:	4602      	mov	r2, r0
 80062a4:	2184      	movs	r1, #132	; 0x84
 80062a6:	e6a8      	b.n	8005ffa <__gethex+0x176>
 80062a8:	6922      	ldr	r2, [r4, #16]
 80062aa:	3202      	adds	r2, #2
 80062ac:	f104 010c 	add.w	r1, r4, #12
 80062b0:	0092      	lsls	r2, r2, #2
 80062b2:	300c      	adds	r0, #12
 80062b4:	f000 f90c 	bl	80064d0 <memcpy>
 80062b8:	4621      	mov	r1, r4
 80062ba:	ee18 0a10 	vmov	r0, s16
 80062be:	f000 f955 	bl	800656c <_Bfree>
 80062c2:	464c      	mov	r4, r9
 80062c4:	6923      	ldr	r3, [r4, #16]
 80062c6:	1c5a      	adds	r2, r3, #1
 80062c8:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80062cc:	6122      	str	r2, [r4, #16]
 80062ce:	2201      	movs	r2, #1
 80062d0:	615a      	str	r2, [r3, #20]
 80062d2:	e7bb      	b.n	800624c <__gethex+0x3c8>
 80062d4:	6922      	ldr	r2, [r4, #16]
 80062d6:	455a      	cmp	r2, fp
 80062d8:	dd0b      	ble.n	80062f2 <__gethex+0x46e>
 80062da:	2101      	movs	r1, #1
 80062dc:	4620      	mov	r0, r4
 80062de:	f7ff fd69 	bl	8005db4 <rshift>
 80062e2:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80062e6:	3501      	adds	r5, #1
 80062e8:	42ab      	cmp	r3, r5
 80062ea:	f6ff aed0 	blt.w	800608e <__gethex+0x20a>
 80062ee:	2701      	movs	r7, #1
 80062f0:	e7c0      	b.n	8006274 <__gethex+0x3f0>
 80062f2:	f016 061f 	ands.w	r6, r6, #31
 80062f6:	d0fa      	beq.n	80062ee <__gethex+0x46a>
 80062f8:	4453      	add	r3, sl
 80062fa:	f1c6 0620 	rsb	r6, r6, #32
 80062fe:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8006302:	f000 f9e5 	bl	80066d0 <__hi0bits>
 8006306:	42b0      	cmp	r0, r6
 8006308:	dbe7      	blt.n	80062da <__gethex+0x456>
 800630a:	e7f0      	b.n	80062ee <__gethex+0x46a>
 800630c:	08008648 	.word	0x08008648

08006310 <L_shift>:
 8006310:	f1c2 0208 	rsb	r2, r2, #8
 8006314:	0092      	lsls	r2, r2, #2
 8006316:	b570      	push	{r4, r5, r6, lr}
 8006318:	f1c2 0620 	rsb	r6, r2, #32
 800631c:	6843      	ldr	r3, [r0, #4]
 800631e:	6804      	ldr	r4, [r0, #0]
 8006320:	fa03 f506 	lsl.w	r5, r3, r6
 8006324:	432c      	orrs	r4, r5
 8006326:	40d3      	lsrs	r3, r2
 8006328:	6004      	str	r4, [r0, #0]
 800632a:	f840 3f04 	str.w	r3, [r0, #4]!
 800632e:	4288      	cmp	r0, r1
 8006330:	d3f4      	bcc.n	800631c <L_shift+0xc>
 8006332:	bd70      	pop	{r4, r5, r6, pc}

08006334 <__match>:
 8006334:	b530      	push	{r4, r5, lr}
 8006336:	6803      	ldr	r3, [r0, #0]
 8006338:	3301      	adds	r3, #1
 800633a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800633e:	b914      	cbnz	r4, 8006346 <__match+0x12>
 8006340:	6003      	str	r3, [r0, #0]
 8006342:	2001      	movs	r0, #1
 8006344:	bd30      	pop	{r4, r5, pc}
 8006346:	f813 2b01 	ldrb.w	r2, [r3], #1
 800634a:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 800634e:	2d19      	cmp	r5, #25
 8006350:	bf98      	it	ls
 8006352:	3220      	addls	r2, #32
 8006354:	42a2      	cmp	r2, r4
 8006356:	d0f0      	beq.n	800633a <__match+0x6>
 8006358:	2000      	movs	r0, #0
 800635a:	e7f3      	b.n	8006344 <__match+0x10>

0800635c <__hexnan>:
 800635c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006360:	680b      	ldr	r3, [r1, #0]
 8006362:	115e      	asrs	r6, r3, #5
 8006364:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8006368:	f013 031f 	ands.w	r3, r3, #31
 800636c:	b087      	sub	sp, #28
 800636e:	bf18      	it	ne
 8006370:	3604      	addne	r6, #4
 8006372:	2500      	movs	r5, #0
 8006374:	1f37      	subs	r7, r6, #4
 8006376:	4690      	mov	r8, r2
 8006378:	6802      	ldr	r2, [r0, #0]
 800637a:	9301      	str	r3, [sp, #4]
 800637c:	4682      	mov	sl, r0
 800637e:	f846 5c04 	str.w	r5, [r6, #-4]
 8006382:	46b9      	mov	r9, r7
 8006384:	463c      	mov	r4, r7
 8006386:	9502      	str	r5, [sp, #8]
 8006388:	46ab      	mov	fp, r5
 800638a:	7851      	ldrb	r1, [r2, #1]
 800638c:	1c53      	adds	r3, r2, #1
 800638e:	9303      	str	r3, [sp, #12]
 8006390:	b341      	cbz	r1, 80063e4 <__hexnan+0x88>
 8006392:	4608      	mov	r0, r1
 8006394:	9205      	str	r2, [sp, #20]
 8006396:	9104      	str	r1, [sp, #16]
 8006398:	f7ff fd5e 	bl	8005e58 <__hexdig_fun>
 800639c:	2800      	cmp	r0, #0
 800639e:	d14f      	bne.n	8006440 <__hexnan+0xe4>
 80063a0:	9904      	ldr	r1, [sp, #16]
 80063a2:	9a05      	ldr	r2, [sp, #20]
 80063a4:	2920      	cmp	r1, #32
 80063a6:	d818      	bhi.n	80063da <__hexnan+0x7e>
 80063a8:	9b02      	ldr	r3, [sp, #8]
 80063aa:	459b      	cmp	fp, r3
 80063ac:	dd13      	ble.n	80063d6 <__hexnan+0x7a>
 80063ae:	454c      	cmp	r4, r9
 80063b0:	d206      	bcs.n	80063c0 <__hexnan+0x64>
 80063b2:	2d07      	cmp	r5, #7
 80063b4:	dc04      	bgt.n	80063c0 <__hexnan+0x64>
 80063b6:	462a      	mov	r2, r5
 80063b8:	4649      	mov	r1, r9
 80063ba:	4620      	mov	r0, r4
 80063bc:	f7ff ffa8 	bl	8006310 <L_shift>
 80063c0:	4544      	cmp	r4, r8
 80063c2:	d950      	bls.n	8006466 <__hexnan+0x10a>
 80063c4:	2300      	movs	r3, #0
 80063c6:	f1a4 0904 	sub.w	r9, r4, #4
 80063ca:	f844 3c04 	str.w	r3, [r4, #-4]
 80063ce:	f8cd b008 	str.w	fp, [sp, #8]
 80063d2:	464c      	mov	r4, r9
 80063d4:	461d      	mov	r5, r3
 80063d6:	9a03      	ldr	r2, [sp, #12]
 80063d8:	e7d7      	b.n	800638a <__hexnan+0x2e>
 80063da:	2929      	cmp	r1, #41	; 0x29
 80063dc:	d156      	bne.n	800648c <__hexnan+0x130>
 80063de:	3202      	adds	r2, #2
 80063e0:	f8ca 2000 	str.w	r2, [sl]
 80063e4:	f1bb 0f00 	cmp.w	fp, #0
 80063e8:	d050      	beq.n	800648c <__hexnan+0x130>
 80063ea:	454c      	cmp	r4, r9
 80063ec:	d206      	bcs.n	80063fc <__hexnan+0xa0>
 80063ee:	2d07      	cmp	r5, #7
 80063f0:	dc04      	bgt.n	80063fc <__hexnan+0xa0>
 80063f2:	462a      	mov	r2, r5
 80063f4:	4649      	mov	r1, r9
 80063f6:	4620      	mov	r0, r4
 80063f8:	f7ff ff8a 	bl	8006310 <L_shift>
 80063fc:	4544      	cmp	r4, r8
 80063fe:	d934      	bls.n	800646a <__hexnan+0x10e>
 8006400:	f1a8 0204 	sub.w	r2, r8, #4
 8006404:	4623      	mov	r3, r4
 8006406:	f853 1b04 	ldr.w	r1, [r3], #4
 800640a:	f842 1f04 	str.w	r1, [r2, #4]!
 800640e:	429f      	cmp	r7, r3
 8006410:	d2f9      	bcs.n	8006406 <__hexnan+0xaa>
 8006412:	1b3b      	subs	r3, r7, r4
 8006414:	f023 0303 	bic.w	r3, r3, #3
 8006418:	3304      	adds	r3, #4
 800641a:	3401      	adds	r4, #1
 800641c:	3e03      	subs	r6, #3
 800641e:	42b4      	cmp	r4, r6
 8006420:	bf88      	it	hi
 8006422:	2304      	movhi	r3, #4
 8006424:	4443      	add	r3, r8
 8006426:	2200      	movs	r2, #0
 8006428:	f843 2b04 	str.w	r2, [r3], #4
 800642c:	429f      	cmp	r7, r3
 800642e:	d2fb      	bcs.n	8006428 <__hexnan+0xcc>
 8006430:	683b      	ldr	r3, [r7, #0]
 8006432:	b91b      	cbnz	r3, 800643c <__hexnan+0xe0>
 8006434:	4547      	cmp	r7, r8
 8006436:	d127      	bne.n	8006488 <__hexnan+0x12c>
 8006438:	2301      	movs	r3, #1
 800643a:	603b      	str	r3, [r7, #0]
 800643c:	2005      	movs	r0, #5
 800643e:	e026      	b.n	800648e <__hexnan+0x132>
 8006440:	3501      	adds	r5, #1
 8006442:	2d08      	cmp	r5, #8
 8006444:	f10b 0b01 	add.w	fp, fp, #1
 8006448:	dd06      	ble.n	8006458 <__hexnan+0xfc>
 800644a:	4544      	cmp	r4, r8
 800644c:	d9c3      	bls.n	80063d6 <__hexnan+0x7a>
 800644e:	2300      	movs	r3, #0
 8006450:	f844 3c04 	str.w	r3, [r4, #-4]
 8006454:	2501      	movs	r5, #1
 8006456:	3c04      	subs	r4, #4
 8006458:	6822      	ldr	r2, [r4, #0]
 800645a:	f000 000f 	and.w	r0, r0, #15
 800645e:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 8006462:	6022      	str	r2, [r4, #0]
 8006464:	e7b7      	b.n	80063d6 <__hexnan+0x7a>
 8006466:	2508      	movs	r5, #8
 8006468:	e7b5      	b.n	80063d6 <__hexnan+0x7a>
 800646a:	9b01      	ldr	r3, [sp, #4]
 800646c:	2b00      	cmp	r3, #0
 800646e:	d0df      	beq.n	8006430 <__hexnan+0xd4>
 8006470:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8006474:	f1c3 0320 	rsb	r3, r3, #32
 8006478:	fa22 f303 	lsr.w	r3, r2, r3
 800647c:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8006480:	401a      	ands	r2, r3
 8006482:	f846 2c04 	str.w	r2, [r6, #-4]
 8006486:	e7d3      	b.n	8006430 <__hexnan+0xd4>
 8006488:	3f04      	subs	r7, #4
 800648a:	e7d1      	b.n	8006430 <__hexnan+0xd4>
 800648c:	2004      	movs	r0, #4
 800648e:	b007      	add	sp, #28
 8006490:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08006494 <_localeconv_r>:
 8006494:	4800      	ldr	r0, [pc, #0]	; (8006498 <_localeconv_r+0x4>)
 8006496:	4770      	bx	lr
 8006498:	20000158 	.word	0x20000158

0800649c <malloc>:
 800649c:	4b02      	ldr	r3, [pc, #8]	; (80064a8 <malloc+0xc>)
 800649e:	4601      	mov	r1, r0
 80064a0:	6818      	ldr	r0, [r3, #0]
 80064a2:	f000 bd67 	b.w	8006f74 <_malloc_r>
 80064a6:	bf00      	nop
 80064a8:	20000000 	.word	0x20000000

080064ac <__ascii_mbtowc>:
 80064ac:	b082      	sub	sp, #8
 80064ae:	b901      	cbnz	r1, 80064b2 <__ascii_mbtowc+0x6>
 80064b0:	a901      	add	r1, sp, #4
 80064b2:	b142      	cbz	r2, 80064c6 <__ascii_mbtowc+0x1a>
 80064b4:	b14b      	cbz	r3, 80064ca <__ascii_mbtowc+0x1e>
 80064b6:	7813      	ldrb	r3, [r2, #0]
 80064b8:	600b      	str	r3, [r1, #0]
 80064ba:	7812      	ldrb	r2, [r2, #0]
 80064bc:	1e10      	subs	r0, r2, #0
 80064be:	bf18      	it	ne
 80064c0:	2001      	movne	r0, #1
 80064c2:	b002      	add	sp, #8
 80064c4:	4770      	bx	lr
 80064c6:	4610      	mov	r0, r2
 80064c8:	e7fb      	b.n	80064c2 <__ascii_mbtowc+0x16>
 80064ca:	f06f 0001 	mvn.w	r0, #1
 80064ce:	e7f8      	b.n	80064c2 <__ascii_mbtowc+0x16>

080064d0 <memcpy>:
 80064d0:	440a      	add	r2, r1
 80064d2:	4291      	cmp	r1, r2
 80064d4:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 80064d8:	d100      	bne.n	80064dc <memcpy+0xc>
 80064da:	4770      	bx	lr
 80064dc:	b510      	push	{r4, lr}
 80064de:	f811 4b01 	ldrb.w	r4, [r1], #1
 80064e2:	f803 4f01 	strb.w	r4, [r3, #1]!
 80064e6:	4291      	cmp	r1, r2
 80064e8:	d1f9      	bne.n	80064de <memcpy+0xe>
 80064ea:	bd10      	pop	{r4, pc}

080064ec <_Balloc>:
 80064ec:	b570      	push	{r4, r5, r6, lr}
 80064ee:	6a46      	ldr	r6, [r0, #36]	; 0x24
 80064f0:	4604      	mov	r4, r0
 80064f2:	460d      	mov	r5, r1
 80064f4:	b976      	cbnz	r6, 8006514 <_Balloc+0x28>
 80064f6:	2010      	movs	r0, #16
 80064f8:	f7ff ffd0 	bl	800649c <malloc>
 80064fc:	4602      	mov	r2, r0
 80064fe:	6260      	str	r0, [r4, #36]	; 0x24
 8006500:	b920      	cbnz	r0, 800650c <_Balloc+0x20>
 8006502:	4b18      	ldr	r3, [pc, #96]	; (8006564 <_Balloc+0x78>)
 8006504:	4818      	ldr	r0, [pc, #96]	; (8006568 <_Balloc+0x7c>)
 8006506:	2166      	movs	r1, #102	; 0x66
 8006508:	f000 ff40 	bl	800738c <__assert_func>
 800650c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8006510:	6006      	str	r6, [r0, #0]
 8006512:	60c6      	str	r6, [r0, #12]
 8006514:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8006516:	68f3      	ldr	r3, [r6, #12]
 8006518:	b183      	cbz	r3, 800653c <_Balloc+0x50>
 800651a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800651c:	68db      	ldr	r3, [r3, #12]
 800651e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8006522:	b9b8      	cbnz	r0, 8006554 <_Balloc+0x68>
 8006524:	2101      	movs	r1, #1
 8006526:	fa01 f605 	lsl.w	r6, r1, r5
 800652a:	1d72      	adds	r2, r6, #5
 800652c:	0092      	lsls	r2, r2, #2
 800652e:	4620      	mov	r0, r4
 8006530:	f000 fc9d 	bl	8006e6e <_calloc_r>
 8006534:	b160      	cbz	r0, 8006550 <_Balloc+0x64>
 8006536:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800653a:	e00e      	b.n	800655a <_Balloc+0x6e>
 800653c:	2221      	movs	r2, #33	; 0x21
 800653e:	2104      	movs	r1, #4
 8006540:	4620      	mov	r0, r4
 8006542:	f000 fc94 	bl	8006e6e <_calloc_r>
 8006546:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006548:	60f0      	str	r0, [r6, #12]
 800654a:	68db      	ldr	r3, [r3, #12]
 800654c:	2b00      	cmp	r3, #0
 800654e:	d1e4      	bne.n	800651a <_Balloc+0x2e>
 8006550:	2000      	movs	r0, #0
 8006552:	bd70      	pop	{r4, r5, r6, pc}
 8006554:	6802      	ldr	r2, [r0, #0]
 8006556:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800655a:	2300      	movs	r3, #0
 800655c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8006560:	e7f7      	b.n	8006552 <_Balloc+0x66>
 8006562:	bf00      	nop
 8006564:	080085d6 	.word	0x080085d6
 8006568:	080086d4 	.word	0x080086d4

0800656c <_Bfree>:
 800656c:	b570      	push	{r4, r5, r6, lr}
 800656e:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8006570:	4605      	mov	r5, r0
 8006572:	460c      	mov	r4, r1
 8006574:	b976      	cbnz	r6, 8006594 <_Bfree+0x28>
 8006576:	2010      	movs	r0, #16
 8006578:	f7ff ff90 	bl	800649c <malloc>
 800657c:	4602      	mov	r2, r0
 800657e:	6268      	str	r0, [r5, #36]	; 0x24
 8006580:	b920      	cbnz	r0, 800658c <_Bfree+0x20>
 8006582:	4b09      	ldr	r3, [pc, #36]	; (80065a8 <_Bfree+0x3c>)
 8006584:	4809      	ldr	r0, [pc, #36]	; (80065ac <_Bfree+0x40>)
 8006586:	218a      	movs	r1, #138	; 0x8a
 8006588:	f000 ff00 	bl	800738c <__assert_func>
 800658c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8006590:	6006      	str	r6, [r0, #0]
 8006592:	60c6      	str	r6, [r0, #12]
 8006594:	b13c      	cbz	r4, 80065a6 <_Bfree+0x3a>
 8006596:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8006598:	6862      	ldr	r2, [r4, #4]
 800659a:	68db      	ldr	r3, [r3, #12]
 800659c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80065a0:	6021      	str	r1, [r4, #0]
 80065a2:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80065a6:	bd70      	pop	{r4, r5, r6, pc}
 80065a8:	080085d6 	.word	0x080085d6
 80065ac:	080086d4 	.word	0x080086d4

080065b0 <__multadd>:
 80065b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80065b4:	690d      	ldr	r5, [r1, #16]
 80065b6:	4607      	mov	r7, r0
 80065b8:	460c      	mov	r4, r1
 80065ba:	461e      	mov	r6, r3
 80065bc:	f101 0c14 	add.w	ip, r1, #20
 80065c0:	2000      	movs	r0, #0
 80065c2:	f8dc 3000 	ldr.w	r3, [ip]
 80065c6:	b299      	uxth	r1, r3
 80065c8:	fb02 6101 	mla	r1, r2, r1, r6
 80065cc:	0c1e      	lsrs	r6, r3, #16
 80065ce:	0c0b      	lsrs	r3, r1, #16
 80065d0:	fb02 3306 	mla	r3, r2, r6, r3
 80065d4:	b289      	uxth	r1, r1
 80065d6:	3001      	adds	r0, #1
 80065d8:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80065dc:	4285      	cmp	r5, r0
 80065de:	f84c 1b04 	str.w	r1, [ip], #4
 80065e2:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80065e6:	dcec      	bgt.n	80065c2 <__multadd+0x12>
 80065e8:	b30e      	cbz	r6, 800662e <__multadd+0x7e>
 80065ea:	68a3      	ldr	r3, [r4, #8]
 80065ec:	42ab      	cmp	r3, r5
 80065ee:	dc19      	bgt.n	8006624 <__multadd+0x74>
 80065f0:	6861      	ldr	r1, [r4, #4]
 80065f2:	4638      	mov	r0, r7
 80065f4:	3101      	adds	r1, #1
 80065f6:	f7ff ff79 	bl	80064ec <_Balloc>
 80065fa:	4680      	mov	r8, r0
 80065fc:	b928      	cbnz	r0, 800660a <__multadd+0x5a>
 80065fe:	4602      	mov	r2, r0
 8006600:	4b0c      	ldr	r3, [pc, #48]	; (8006634 <__multadd+0x84>)
 8006602:	480d      	ldr	r0, [pc, #52]	; (8006638 <__multadd+0x88>)
 8006604:	21b5      	movs	r1, #181	; 0xb5
 8006606:	f000 fec1 	bl	800738c <__assert_func>
 800660a:	6922      	ldr	r2, [r4, #16]
 800660c:	3202      	adds	r2, #2
 800660e:	f104 010c 	add.w	r1, r4, #12
 8006612:	0092      	lsls	r2, r2, #2
 8006614:	300c      	adds	r0, #12
 8006616:	f7ff ff5b 	bl	80064d0 <memcpy>
 800661a:	4621      	mov	r1, r4
 800661c:	4638      	mov	r0, r7
 800661e:	f7ff ffa5 	bl	800656c <_Bfree>
 8006622:	4644      	mov	r4, r8
 8006624:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8006628:	3501      	adds	r5, #1
 800662a:	615e      	str	r6, [r3, #20]
 800662c:	6125      	str	r5, [r4, #16]
 800662e:	4620      	mov	r0, r4
 8006630:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006634:	08008648 	.word	0x08008648
 8006638:	080086d4 	.word	0x080086d4

0800663c <__s2b>:
 800663c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006640:	460c      	mov	r4, r1
 8006642:	4615      	mov	r5, r2
 8006644:	461f      	mov	r7, r3
 8006646:	2209      	movs	r2, #9
 8006648:	3308      	adds	r3, #8
 800664a:	4606      	mov	r6, r0
 800664c:	fb93 f3f2 	sdiv	r3, r3, r2
 8006650:	2100      	movs	r1, #0
 8006652:	2201      	movs	r2, #1
 8006654:	429a      	cmp	r2, r3
 8006656:	db09      	blt.n	800666c <__s2b+0x30>
 8006658:	4630      	mov	r0, r6
 800665a:	f7ff ff47 	bl	80064ec <_Balloc>
 800665e:	b940      	cbnz	r0, 8006672 <__s2b+0x36>
 8006660:	4602      	mov	r2, r0
 8006662:	4b19      	ldr	r3, [pc, #100]	; (80066c8 <__s2b+0x8c>)
 8006664:	4819      	ldr	r0, [pc, #100]	; (80066cc <__s2b+0x90>)
 8006666:	21ce      	movs	r1, #206	; 0xce
 8006668:	f000 fe90 	bl	800738c <__assert_func>
 800666c:	0052      	lsls	r2, r2, #1
 800666e:	3101      	adds	r1, #1
 8006670:	e7f0      	b.n	8006654 <__s2b+0x18>
 8006672:	9b08      	ldr	r3, [sp, #32]
 8006674:	6143      	str	r3, [r0, #20]
 8006676:	2d09      	cmp	r5, #9
 8006678:	f04f 0301 	mov.w	r3, #1
 800667c:	6103      	str	r3, [r0, #16]
 800667e:	dd16      	ble.n	80066ae <__s2b+0x72>
 8006680:	f104 0909 	add.w	r9, r4, #9
 8006684:	46c8      	mov	r8, r9
 8006686:	442c      	add	r4, r5
 8006688:	f818 3b01 	ldrb.w	r3, [r8], #1
 800668c:	4601      	mov	r1, r0
 800668e:	3b30      	subs	r3, #48	; 0x30
 8006690:	220a      	movs	r2, #10
 8006692:	4630      	mov	r0, r6
 8006694:	f7ff ff8c 	bl	80065b0 <__multadd>
 8006698:	45a0      	cmp	r8, r4
 800669a:	d1f5      	bne.n	8006688 <__s2b+0x4c>
 800669c:	f1a5 0408 	sub.w	r4, r5, #8
 80066a0:	444c      	add	r4, r9
 80066a2:	1b2d      	subs	r5, r5, r4
 80066a4:	1963      	adds	r3, r4, r5
 80066a6:	42bb      	cmp	r3, r7
 80066a8:	db04      	blt.n	80066b4 <__s2b+0x78>
 80066aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80066ae:	340a      	adds	r4, #10
 80066b0:	2509      	movs	r5, #9
 80066b2:	e7f6      	b.n	80066a2 <__s2b+0x66>
 80066b4:	f814 3b01 	ldrb.w	r3, [r4], #1
 80066b8:	4601      	mov	r1, r0
 80066ba:	3b30      	subs	r3, #48	; 0x30
 80066bc:	220a      	movs	r2, #10
 80066be:	4630      	mov	r0, r6
 80066c0:	f7ff ff76 	bl	80065b0 <__multadd>
 80066c4:	e7ee      	b.n	80066a4 <__s2b+0x68>
 80066c6:	bf00      	nop
 80066c8:	08008648 	.word	0x08008648
 80066cc:	080086d4 	.word	0x080086d4

080066d0 <__hi0bits>:
 80066d0:	0c03      	lsrs	r3, r0, #16
 80066d2:	041b      	lsls	r3, r3, #16
 80066d4:	b9d3      	cbnz	r3, 800670c <__hi0bits+0x3c>
 80066d6:	0400      	lsls	r0, r0, #16
 80066d8:	2310      	movs	r3, #16
 80066da:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 80066de:	bf04      	itt	eq
 80066e0:	0200      	lsleq	r0, r0, #8
 80066e2:	3308      	addeq	r3, #8
 80066e4:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 80066e8:	bf04      	itt	eq
 80066ea:	0100      	lsleq	r0, r0, #4
 80066ec:	3304      	addeq	r3, #4
 80066ee:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 80066f2:	bf04      	itt	eq
 80066f4:	0080      	lsleq	r0, r0, #2
 80066f6:	3302      	addeq	r3, #2
 80066f8:	2800      	cmp	r0, #0
 80066fa:	db05      	blt.n	8006708 <__hi0bits+0x38>
 80066fc:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8006700:	f103 0301 	add.w	r3, r3, #1
 8006704:	bf08      	it	eq
 8006706:	2320      	moveq	r3, #32
 8006708:	4618      	mov	r0, r3
 800670a:	4770      	bx	lr
 800670c:	2300      	movs	r3, #0
 800670e:	e7e4      	b.n	80066da <__hi0bits+0xa>

08006710 <__lo0bits>:
 8006710:	6803      	ldr	r3, [r0, #0]
 8006712:	f013 0207 	ands.w	r2, r3, #7
 8006716:	4601      	mov	r1, r0
 8006718:	d00b      	beq.n	8006732 <__lo0bits+0x22>
 800671a:	07da      	lsls	r2, r3, #31
 800671c:	d423      	bmi.n	8006766 <__lo0bits+0x56>
 800671e:	0798      	lsls	r0, r3, #30
 8006720:	bf49      	itett	mi
 8006722:	085b      	lsrmi	r3, r3, #1
 8006724:	089b      	lsrpl	r3, r3, #2
 8006726:	2001      	movmi	r0, #1
 8006728:	600b      	strmi	r3, [r1, #0]
 800672a:	bf5c      	itt	pl
 800672c:	600b      	strpl	r3, [r1, #0]
 800672e:	2002      	movpl	r0, #2
 8006730:	4770      	bx	lr
 8006732:	b298      	uxth	r0, r3
 8006734:	b9a8      	cbnz	r0, 8006762 <__lo0bits+0x52>
 8006736:	0c1b      	lsrs	r3, r3, #16
 8006738:	2010      	movs	r0, #16
 800673a:	b2da      	uxtb	r2, r3
 800673c:	b90a      	cbnz	r2, 8006742 <__lo0bits+0x32>
 800673e:	3008      	adds	r0, #8
 8006740:	0a1b      	lsrs	r3, r3, #8
 8006742:	071a      	lsls	r2, r3, #28
 8006744:	bf04      	itt	eq
 8006746:	091b      	lsreq	r3, r3, #4
 8006748:	3004      	addeq	r0, #4
 800674a:	079a      	lsls	r2, r3, #30
 800674c:	bf04      	itt	eq
 800674e:	089b      	lsreq	r3, r3, #2
 8006750:	3002      	addeq	r0, #2
 8006752:	07da      	lsls	r2, r3, #31
 8006754:	d403      	bmi.n	800675e <__lo0bits+0x4e>
 8006756:	085b      	lsrs	r3, r3, #1
 8006758:	f100 0001 	add.w	r0, r0, #1
 800675c:	d005      	beq.n	800676a <__lo0bits+0x5a>
 800675e:	600b      	str	r3, [r1, #0]
 8006760:	4770      	bx	lr
 8006762:	4610      	mov	r0, r2
 8006764:	e7e9      	b.n	800673a <__lo0bits+0x2a>
 8006766:	2000      	movs	r0, #0
 8006768:	4770      	bx	lr
 800676a:	2020      	movs	r0, #32
 800676c:	4770      	bx	lr
	...

08006770 <__i2b>:
 8006770:	b510      	push	{r4, lr}
 8006772:	460c      	mov	r4, r1
 8006774:	2101      	movs	r1, #1
 8006776:	f7ff feb9 	bl	80064ec <_Balloc>
 800677a:	4602      	mov	r2, r0
 800677c:	b928      	cbnz	r0, 800678a <__i2b+0x1a>
 800677e:	4b05      	ldr	r3, [pc, #20]	; (8006794 <__i2b+0x24>)
 8006780:	4805      	ldr	r0, [pc, #20]	; (8006798 <__i2b+0x28>)
 8006782:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8006786:	f000 fe01 	bl	800738c <__assert_func>
 800678a:	2301      	movs	r3, #1
 800678c:	6144      	str	r4, [r0, #20]
 800678e:	6103      	str	r3, [r0, #16]
 8006790:	bd10      	pop	{r4, pc}
 8006792:	bf00      	nop
 8006794:	08008648 	.word	0x08008648
 8006798:	080086d4 	.word	0x080086d4

0800679c <__multiply>:
 800679c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80067a0:	4691      	mov	r9, r2
 80067a2:	690a      	ldr	r2, [r1, #16]
 80067a4:	f8d9 3010 	ldr.w	r3, [r9, #16]
 80067a8:	429a      	cmp	r2, r3
 80067aa:	bfb8      	it	lt
 80067ac:	460b      	movlt	r3, r1
 80067ae:	460c      	mov	r4, r1
 80067b0:	bfbc      	itt	lt
 80067b2:	464c      	movlt	r4, r9
 80067b4:	4699      	movlt	r9, r3
 80067b6:	6927      	ldr	r7, [r4, #16]
 80067b8:	f8d9 a010 	ldr.w	sl, [r9, #16]
 80067bc:	68a3      	ldr	r3, [r4, #8]
 80067be:	6861      	ldr	r1, [r4, #4]
 80067c0:	eb07 060a 	add.w	r6, r7, sl
 80067c4:	42b3      	cmp	r3, r6
 80067c6:	b085      	sub	sp, #20
 80067c8:	bfb8      	it	lt
 80067ca:	3101      	addlt	r1, #1
 80067cc:	f7ff fe8e 	bl	80064ec <_Balloc>
 80067d0:	b930      	cbnz	r0, 80067e0 <__multiply+0x44>
 80067d2:	4602      	mov	r2, r0
 80067d4:	4b44      	ldr	r3, [pc, #272]	; (80068e8 <__multiply+0x14c>)
 80067d6:	4845      	ldr	r0, [pc, #276]	; (80068ec <__multiply+0x150>)
 80067d8:	f240 115d 	movw	r1, #349	; 0x15d
 80067dc:	f000 fdd6 	bl	800738c <__assert_func>
 80067e0:	f100 0514 	add.w	r5, r0, #20
 80067e4:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80067e8:	462b      	mov	r3, r5
 80067ea:	2200      	movs	r2, #0
 80067ec:	4543      	cmp	r3, r8
 80067ee:	d321      	bcc.n	8006834 <__multiply+0x98>
 80067f0:	f104 0314 	add.w	r3, r4, #20
 80067f4:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 80067f8:	f109 0314 	add.w	r3, r9, #20
 80067fc:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8006800:	9202      	str	r2, [sp, #8]
 8006802:	1b3a      	subs	r2, r7, r4
 8006804:	3a15      	subs	r2, #21
 8006806:	f022 0203 	bic.w	r2, r2, #3
 800680a:	3204      	adds	r2, #4
 800680c:	f104 0115 	add.w	r1, r4, #21
 8006810:	428f      	cmp	r7, r1
 8006812:	bf38      	it	cc
 8006814:	2204      	movcc	r2, #4
 8006816:	9201      	str	r2, [sp, #4]
 8006818:	9a02      	ldr	r2, [sp, #8]
 800681a:	9303      	str	r3, [sp, #12]
 800681c:	429a      	cmp	r2, r3
 800681e:	d80c      	bhi.n	800683a <__multiply+0x9e>
 8006820:	2e00      	cmp	r6, #0
 8006822:	dd03      	ble.n	800682c <__multiply+0x90>
 8006824:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8006828:	2b00      	cmp	r3, #0
 800682a:	d05a      	beq.n	80068e2 <__multiply+0x146>
 800682c:	6106      	str	r6, [r0, #16]
 800682e:	b005      	add	sp, #20
 8006830:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006834:	f843 2b04 	str.w	r2, [r3], #4
 8006838:	e7d8      	b.n	80067ec <__multiply+0x50>
 800683a:	f8b3 a000 	ldrh.w	sl, [r3]
 800683e:	f1ba 0f00 	cmp.w	sl, #0
 8006842:	d024      	beq.n	800688e <__multiply+0xf2>
 8006844:	f104 0e14 	add.w	lr, r4, #20
 8006848:	46a9      	mov	r9, r5
 800684a:	f04f 0c00 	mov.w	ip, #0
 800684e:	f85e 2b04 	ldr.w	r2, [lr], #4
 8006852:	f8d9 1000 	ldr.w	r1, [r9]
 8006856:	fa1f fb82 	uxth.w	fp, r2
 800685a:	b289      	uxth	r1, r1
 800685c:	fb0a 110b 	mla	r1, sl, fp, r1
 8006860:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 8006864:	f8d9 2000 	ldr.w	r2, [r9]
 8006868:	4461      	add	r1, ip
 800686a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800686e:	fb0a c20b 	mla	r2, sl, fp, ip
 8006872:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8006876:	b289      	uxth	r1, r1
 8006878:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800687c:	4577      	cmp	r7, lr
 800687e:	f849 1b04 	str.w	r1, [r9], #4
 8006882:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8006886:	d8e2      	bhi.n	800684e <__multiply+0xb2>
 8006888:	9a01      	ldr	r2, [sp, #4]
 800688a:	f845 c002 	str.w	ip, [r5, r2]
 800688e:	9a03      	ldr	r2, [sp, #12]
 8006890:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8006894:	3304      	adds	r3, #4
 8006896:	f1b9 0f00 	cmp.w	r9, #0
 800689a:	d020      	beq.n	80068de <__multiply+0x142>
 800689c:	6829      	ldr	r1, [r5, #0]
 800689e:	f104 0c14 	add.w	ip, r4, #20
 80068a2:	46ae      	mov	lr, r5
 80068a4:	f04f 0a00 	mov.w	sl, #0
 80068a8:	f8bc b000 	ldrh.w	fp, [ip]
 80068ac:	f8be 2002 	ldrh.w	r2, [lr, #2]
 80068b0:	fb09 220b 	mla	r2, r9, fp, r2
 80068b4:	4492      	add	sl, r2
 80068b6:	b289      	uxth	r1, r1
 80068b8:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 80068bc:	f84e 1b04 	str.w	r1, [lr], #4
 80068c0:	f85c 2b04 	ldr.w	r2, [ip], #4
 80068c4:	f8be 1000 	ldrh.w	r1, [lr]
 80068c8:	0c12      	lsrs	r2, r2, #16
 80068ca:	fb09 1102 	mla	r1, r9, r2, r1
 80068ce:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 80068d2:	4567      	cmp	r7, ip
 80068d4:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80068d8:	d8e6      	bhi.n	80068a8 <__multiply+0x10c>
 80068da:	9a01      	ldr	r2, [sp, #4]
 80068dc:	50a9      	str	r1, [r5, r2]
 80068de:	3504      	adds	r5, #4
 80068e0:	e79a      	b.n	8006818 <__multiply+0x7c>
 80068e2:	3e01      	subs	r6, #1
 80068e4:	e79c      	b.n	8006820 <__multiply+0x84>
 80068e6:	bf00      	nop
 80068e8:	08008648 	.word	0x08008648
 80068ec:	080086d4 	.word	0x080086d4

080068f0 <__pow5mult>:
 80068f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80068f4:	4615      	mov	r5, r2
 80068f6:	f012 0203 	ands.w	r2, r2, #3
 80068fa:	4606      	mov	r6, r0
 80068fc:	460f      	mov	r7, r1
 80068fe:	d007      	beq.n	8006910 <__pow5mult+0x20>
 8006900:	4c25      	ldr	r4, [pc, #148]	; (8006998 <__pow5mult+0xa8>)
 8006902:	3a01      	subs	r2, #1
 8006904:	2300      	movs	r3, #0
 8006906:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800690a:	f7ff fe51 	bl	80065b0 <__multadd>
 800690e:	4607      	mov	r7, r0
 8006910:	10ad      	asrs	r5, r5, #2
 8006912:	d03d      	beq.n	8006990 <__pow5mult+0xa0>
 8006914:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8006916:	b97c      	cbnz	r4, 8006938 <__pow5mult+0x48>
 8006918:	2010      	movs	r0, #16
 800691a:	f7ff fdbf 	bl	800649c <malloc>
 800691e:	4602      	mov	r2, r0
 8006920:	6270      	str	r0, [r6, #36]	; 0x24
 8006922:	b928      	cbnz	r0, 8006930 <__pow5mult+0x40>
 8006924:	4b1d      	ldr	r3, [pc, #116]	; (800699c <__pow5mult+0xac>)
 8006926:	481e      	ldr	r0, [pc, #120]	; (80069a0 <__pow5mult+0xb0>)
 8006928:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800692c:	f000 fd2e 	bl	800738c <__assert_func>
 8006930:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8006934:	6004      	str	r4, [r0, #0]
 8006936:	60c4      	str	r4, [r0, #12]
 8006938:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800693c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8006940:	b94c      	cbnz	r4, 8006956 <__pow5mult+0x66>
 8006942:	f240 2171 	movw	r1, #625	; 0x271
 8006946:	4630      	mov	r0, r6
 8006948:	f7ff ff12 	bl	8006770 <__i2b>
 800694c:	2300      	movs	r3, #0
 800694e:	f8c8 0008 	str.w	r0, [r8, #8]
 8006952:	4604      	mov	r4, r0
 8006954:	6003      	str	r3, [r0, #0]
 8006956:	f04f 0900 	mov.w	r9, #0
 800695a:	07eb      	lsls	r3, r5, #31
 800695c:	d50a      	bpl.n	8006974 <__pow5mult+0x84>
 800695e:	4639      	mov	r1, r7
 8006960:	4622      	mov	r2, r4
 8006962:	4630      	mov	r0, r6
 8006964:	f7ff ff1a 	bl	800679c <__multiply>
 8006968:	4639      	mov	r1, r7
 800696a:	4680      	mov	r8, r0
 800696c:	4630      	mov	r0, r6
 800696e:	f7ff fdfd 	bl	800656c <_Bfree>
 8006972:	4647      	mov	r7, r8
 8006974:	106d      	asrs	r5, r5, #1
 8006976:	d00b      	beq.n	8006990 <__pow5mult+0xa0>
 8006978:	6820      	ldr	r0, [r4, #0]
 800697a:	b938      	cbnz	r0, 800698c <__pow5mult+0x9c>
 800697c:	4622      	mov	r2, r4
 800697e:	4621      	mov	r1, r4
 8006980:	4630      	mov	r0, r6
 8006982:	f7ff ff0b 	bl	800679c <__multiply>
 8006986:	6020      	str	r0, [r4, #0]
 8006988:	f8c0 9000 	str.w	r9, [r0]
 800698c:	4604      	mov	r4, r0
 800698e:	e7e4      	b.n	800695a <__pow5mult+0x6a>
 8006990:	4638      	mov	r0, r7
 8006992:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006996:	bf00      	nop
 8006998:	08008820 	.word	0x08008820
 800699c:	080085d6 	.word	0x080085d6
 80069a0:	080086d4 	.word	0x080086d4

080069a4 <__lshift>:
 80069a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80069a8:	460c      	mov	r4, r1
 80069aa:	6849      	ldr	r1, [r1, #4]
 80069ac:	6923      	ldr	r3, [r4, #16]
 80069ae:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80069b2:	68a3      	ldr	r3, [r4, #8]
 80069b4:	4607      	mov	r7, r0
 80069b6:	4691      	mov	r9, r2
 80069b8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80069bc:	f108 0601 	add.w	r6, r8, #1
 80069c0:	42b3      	cmp	r3, r6
 80069c2:	db0b      	blt.n	80069dc <__lshift+0x38>
 80069c4:	4638      	mov	r0, r7
 80069c6:	f7ff fd91 	bl	80064ec <_Balloc>
 80069ca:	4605      	mov	r5, r0
 80069cc:	b948      	cbnz	r0, 80069e2 <__lshift+0x3e>
 80069ce:	4602      	mov	r2, r0
 80069d0:	4b2a      	ldr	r3, [pc, #168]	; (8006a7c <__lshift+0xd8>)
 80069d2:	482b      	ldr	r0, [pc, #172]	; (8006a80 <__lshift+0xdc>)
 80069d4:	f240 11d9 	movw	r1, #473	; 0x1d9
 80069d8:	f000 fcd8 	bl	800738c <__assert_func>
 80069dc:	3101      	adds	r1, #1
 80069de:	005b      	lsls	r3, r3, #1
 80069e0:	e7ee      	b.n	80069c0 <__lshift+0x1c>
 80069e2:	2300      	movs	r3, #0
 80069e4:	f100 0114 	add.w	r1, r0, #20
 80069e8:	f100 0210 	add.w	r2, r0, #16
 80069ec:	4618      	mov	r0, r3
 80069ee:	4553      	cmp	r3, sl
 80069f0:	db37      	blt.n	8006a62 <__lshift+0xbe>
 80069f2:	6920      	ldr	r0, [r4, #16]
 80069f4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80069f8:	f104 0314 	add.w	r3, r4, #20
 80069fc:	f019 091f 	ands.w	r9, r9, #31
 8006a00:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8006a04:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8006a08:	d02f      	beq.n	8006a6a <__lshift+0xc6>
 8006a0a:	f1c9 0e20 	rsb	lr, r9, #32
 8006a0e:	468a      	mov	sl, r1
 8006a10:	f04f 0c00 	mov.w	ip, #0
 8006a14:	681a      	ldr	r2, [r3, #0]
 8006a16:	fa02 f209 	lsl.w	r2, r2, r9
 8006a1a:	ea42 020c 	orr.w	r2, r2, ip
 8006a1e:	f84a 2b04 	str.w	r2, [sl], #4
 8006a22:	f853 2b04 	ldr.w	r2, [r3], #4
 8006a26:	4298      	cmp	r0, r3
 8006a28:	fa22 fc0e 	lsr.w	ip, r2, lr
 8006a2c:	d8f2      	bhi.n	8006a14 <__lshift+0x70>
 8006a2e:	1b03      	subs	r3, r0, r4
 8006a30:	3b15      	subs	r3, #21
 8006a32:	f023 0303 	bic.w	r3, r3, #3
 8006a36:	3304      	adds	r3, #4
 8006a38:	f104 0215 	add.w	r2, r4, #21
 8006a3c:	4290      	cmp	r0, r2
 8006a3e:	bf38      	it	cc
 8006a40:	2304      	movcc	r3, #4
 8006a42:	f841 c003 	str.w	ip, [r1, r3]
 8006a46:	f1bc 0f00 	cmp.w	ip, #0
 8006a4a:	d001      	beq.n	8006a50 <__lshift+0xac>
 8006a4c:	f108 0602 	add.w	r6, r8, #2
 8006a50:	3e01      	subs	r6, #1
 8006a52:	4638      	mov	r0, r7
 8006a54:	612e      	str	r6, [r5, #16]
 8006a56:	4621      	mov	r1, r4
 8006a58:	f7ff fd88 	bl	800656c <_Bfree>
 8006a5c:	4628      	mov	r0, r5
 8006a5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006a62:	f842 0f04 	str.w	r0, [r2, #4]!
 8006a66:	3301      	adds	r3, #1
 8006a68:	e7c1      	b.n	80069ee <__lshift+0x4a>
 8006a6a:	3904      	subs	r1, #4
 8006a6c:	f853 2b04 	ldr.w	r2, [r3], #4
 8006a70:	f841 2f04 	str.w	r2, [r1, #4]!
 8006a74:	4298      	cmp	r0, r3
 8006a76:	d8f9      	bhi.n	8006a6c <__lshift+0xc8>
 8006a78:	e7ea      	b.n	8006a50 <__lshift+0xac>
 8006a7a:	bf00      	nop
 8006a7c:	08008648 	.word	0x08008648
 8006a80:	080086d4 	.word	0x080086d4

08006a84 <__mcmp>:
 8006a84:	b530      	push	{r4, r5, lr}
 8006a86:	6902      	ldr	r2, [r0, #16]
 8006a88:	690c      	ldr	r4, [r1, #16]
 8006a8a:	1b12      	subs	r2, r2, r4
 8006a8c:	d10e      	bne.n	8006aac <__mcmp+0x28>
 8006a8e:	f100 0314 	add.w	r3, r0, #20
 8006a92:	3114      	adds	r1, #20
 8006a94:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8006a98:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8006a9c:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8006aa0:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8006aa4:	42a5      	cmp	r5, r4
 8006aa6:	d003      	beq.n	8006ab0 <__mcmp+0x2c>
 8006aa8:	d305      	bcc.n	8006ab6 <__mcmp+0x32>
 8006aaa:	2201      	movs	r2, #1
 8006aac:	4610      	mov	r0, r2
 8006aae:	bd30      	pop	{r4, r5, pc}
 8006ab0:	4283      	cmp	r3, r0
 8006ab2:	d3f3      	bcc.n	8006a9c <__mcmp+0x18>
 8006ab4:	e7fa      	b.n	8006aac <__mcmp+0x28>
 8006ab6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8006aba:	e7f7      	b.n	8006aac <__mcmp+0x28>

08006abc <__mdiff>:
 8006abc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006ac0:	460c      	mov	r4, r1
 8006ac2:	4606      	mov	r6, r0
 8006ac4:	4611      	mov	r1, r2
 8006ac6:	4620      	mov	r0, r4
 8006ac8:	4690      	mov	r8, r2
 8006aca:	f7ff ffdb 	bl	8006a84 <__mcmp>
 8006ace:	1e05      	subs	r5, r0, #0
 8006ad0:	d110      	bne.n	8006af4 <__mdiff+0x38>
 8006ad2:	4629      	mov	r1, r5
 8006ad4:	4630      	mov	r0, r6
 8006ad6:	f7ff fd09 	bl	80064ec <_Balloc>
 8006ada:	b930      	cbnz	r0, 8006aea <__mdiff+0x2e>
 8006adc:	4b3a      	ldr	r3, [pc, #232]	; (8006bc8 <__mdiff+0x10c>)
 8006ade:	4602      	mov	r2, r0
 8006ae0:	f240 2132 	movw	r1, #562	; 0x232
 8006ae4:	4839      	ldr	r0, [pc, #228]	; (8006bcc <__mdiff+0x110>)
 8006ae6:	f000 fc51 	bl	800738c <__assert_func>
 8006aea:	2301      	movs	r3, #1
 8006aec:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8006af0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006af4:	bfa4      	itt	ge
 8006af6:	4643      	movge	r3, r8
 8006af8:	46a0      	movge	r8, r4
 8006afa:	4630      	mov	r0, r6
 8006afc:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8006b00:	bfa6      	itte	ge
 8006b02:	461c      	movge	r4, r3
 8006b04:	2500      	movge	r5, #0
 8006b06:	2501      	movlt	r5, #1
 8006b08:	f7ff fcf0 	bl	80064ec <_Balloc>
 8006b0c:	b920      	cbnz	r0, 8006b18 <__mdiff+0x5c>
 8006b0e:	4b2e      	ldr	r3, [pc, #184]	; (8006bc8 <__mdiff+0x10c>)
 8006b10:	4602      	mov	r2, r0
 8006b12:	f44f 7110 	mov.w	r1, #576	; 0x240
 8006b16:	e7e5      	b.n	8006ae4 <__mdiff+0x28>
 8006b18:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8006b1c:	6926      	ldr	r6, [r4, #16]
 8006b1e:	60c5      	str	r5, [r0, #12]
 8006b20:	f104 0914 	add.w	r9, r4, #20
 8006b24:	f108 0514 	add.w	r5, r8, #20
 8006b28:	f100 0e14 	add.w	lr, r0, #20
 8006b2c:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 8006b30:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8006b34:	f108 0210 	add.w	r2, r8, #16
 8006b38:	46f2      	mov	sl, lr
 8006b3a:	2100      	movs	r1, #0
 8006b3c:	f859 3b04 	ldr.w	r3, [r9], #4
 8006b40:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8006b44:	fa1f f883 	uxth.w	r8, r3
 8006b48:	fa11 f18b 	uxtah	r1, r1, fp
 8006b4c:	0c1b      	lsrs	r3, r3, #16
 8006b4e:	eba1 0808 	sub.w	r8, r1, r8
 8006b52:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8006b56:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8006b5a:	fa1f f888 	uxth.w	r8, r8
 8006b5e:	1419      	asrs	r1, r3, #16
 8006b60:	454e      	cmp	r6, r9
 8006b62:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8006b66:	f84a 3b04 	str.w	r3, [sl], #4
 8006b6a:	d8e7      	bhi.n	8006b3c <__mdiff+0x80>
 8006b6c:	1b33      	subs	r3, r6, r4
 8006b6e:	3b15      	subs	r3, #21
 8006b70:	f023 0303 	bic.w	r3, r3, #3
 8006b74:	3304      	adds	r3, #4
 8006b76:	3415      	adds	r4, #21
 8006b78:	42a6      	cmp	r6, r4
 8006b7a:	bf38      	it	cc
 8006b7c:	2304      	movcc	r3, #4
 8006b7e:	441d      	add	r5, r3
 8006b80:	4473      	add	r3, lr
 8006b82:	469e      	mov	lr, r3
 8006b84:	462e      	mov	r6, r5
 8006b86:	4566      	cmp	r6, ip
 8006b88:	d30e      	bcc.n	8006ba8 <__mdiff+0xec>
 8006b8a:	f10c 0203 	add.w	r2, ip, #3
 8006b8e:	1b52      	subs	r2, r2, r5
 8006b90:	f022 0203 	bic.w	r2, r2, #3
 8006b94:	3d03      	subs	r5, #3
 8006b96:	45ac      	cmp	ip, r5
 8006b98:	bf38      	it	cc
 8006b9a:	2200      	movcc	r2, #0
 8006b9c:	441a      	add	r2, r3
 8006b9e:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 8006ba2:	b17b      	cbz	r3, 8006bc4 <__mdiff+0x108>
 8006ba4:	6107      	str	r7, [r0, #16]
 8006ba6:	e7a3      	b.n	8006af0 <__mdiff+0x34>
 8006ba8:	f856 8b04 	ldr.w	r8, [r6], #4
 8006bac:	fa11 f288 	uxtah	r2, r1, r8
 8006bb0:	1414      	asrs	r4, r2, #16
 8006bb2:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8006bb6:	b292      	uxth	r2, r2
 8006bb8:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8006bbc:	f84e 2b04 	str.w	r2, [lr], #4
 8006bc0:	1421      	asrs	r1, r4, #16
 8006bc2:	e7e0      	b.n	8006b86 <__mdiff+0xca>
 8006bc4:	3f01      	subs	r7, #1
 8006bc6:	e7ea      	b.n	8006b9e <__mdiff+0xe2>
 8006bc8:	08008648 	.word	0x08008648
 8006bcc:	080086d4 	.word	0x080086d4

08006bd0 <__ulp>:
 8006bd0:	b082      	sub	sp, #8
 8006bd2:	ed8d 0b00 	vstr	d0, [sp]
 8006bd6:	9b01      	ldr	r3, [sp, #4]
 8006bd8:	4912      	ldr	r1, [pc, #72]	; (8006c24 <__ulp+0x54>)
 8006bda:	4019      	ands	r1, r3
 8006bdc:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000
 8006be0:	2900      	cmp	r1, #0
 8006be2:	dd05      	ble.n	8006bf0 <__ulp+0x20>
 8006be4:	2200      	movs	r2, #0
 8006be6:	460b      	mov	r3, r1
 8006be8:	ec43 2b10 	vmov	d0, r2, r3
 8006bec:	b002      	add	sp, #8
 8006bee:	4770      	bx	lr
 8006bf0:	4249      	negs	r1, r1
 8006bf2:	f1b1 7fa0 	cmp.w	r1, #20971520	; 0x1400000
 8006bf6:	ea4f 5021 	mov.w	r0, r1, asr #20
 8006bfa:	f04f 0200 	mov.w	r2, #0
 8006bfe:	f04f 0300 	mov.w	r3, #0
 8006c02:	da04      	bge.n	8006c0e <__ulp+0x3e>
 8006c04:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 8006c08:	fa41 f300 	asr.w	r3, r1, r0
 8006c0c:	e7ec      	b.n	8006be8 <__ulp+0x18>
 8006c0e:	f1a0 0114 	sub.w	r1, r0, #20
 8006c12:	291e      	cmp	r1, #30
 8006c14:	bfda      	itte	le
 8006c16:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 8006c1a:	fa20 f101 	lsrle.w	r1, r0, r1
 8006c1e:	2101      	movgt	r1, #1
 8006c20:	460a      	mov	r2, r1
 8006c22:	e7e1      	b.n	8006be8 <__ulp+0x18>
 8006c24:	7ff00000 	.word	0x7ff00000

08006c28 <__b2d>:
 8006c28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006c2a:	6905      	ldr	r5, [r0, #16]
 8006c2c:	f100 0714 	add.w	r7, r0, #20
 8006c30:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 8006c34:	1f2e      	subs	r6, r5, #4
 8006c36:	f855 4c04 	ldr.w	r4, [r5, #-4]
 8006c3a:	4620      	mov	r0, r4
 8006c3c:	f7ff fd48 	bl	80066d0 <__hi0bits>
 8006c40:	f1c0 0320 	rsb	r3, r0, #32
 8006c44:	280a      	cmp	r0, #10
 8006c46:	f8df c07c 	ldr.w	ip, [pc, #124]	; 8006cc4 <__b2d+0x9c>
 8006c4a:	600b      	str	r3, [r1, #0]
 8006c4c:	dc14      	bgt.n	8006c78 <__b2d+0x50>
 8006c4e:	f1c0 0e0b 	rsb	lr, r0, #11
 8006c52:	fa24 f10e 	lsr.w	r1, r4, lr
 8006c56:	42b7      	cmp	r7, r6
 8006c58:	ea41 030c 	orr.w	r3, r1, ip
 8006c5c:	bf34      	ite	cc
 8006c5e:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8006c62:	2100      	movcs	r1, #0
 8006c64:	3015      	adds	r0, #21
 8006c66:	fa04 f000 	lsl.w	r0, r4, r0
 8006c6a:	fa21 f10e 	lsr.w	r1, r1, lr
 8006c6e:	ea40 0201 	orr.w	r2, r0, r1
 8006c72:	ec43 2b10 	vmov	d0, r2, r3
 8006c76:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006c78:	42b7      	cmp	r7, r6
 8006c7a:	bf3a      	itte	cc
 8006c7c:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8006c80:	f1a5 0608 	subcc.w	r6, r5, #8
 8006c84:	2100      	movcs	r1, #0
 8006c86:	380b      	subs	r0, #11
 8006c88:	d017      	beq.n	8006cba <__b2d+0x92>
 8006c8a:	f1c0 0c20 	rsb	ip, r0, #32
 8006c8e:	fa04 f500 	lsl.w	r5, r4, r0
 8006c92:	42be      	cmp	r6, r7
 8006c94:	fa21 f40c 	lsr.w	r4, r1, ip
 8006c98:	ea45 0504 	orr.w	r5, r5, r4
 8006c9c:	bf8c      	ite	hi
 8006c9e:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 8006ca2:	2400      	movls	r4, #0
 8006ca4:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
 8006ca8:	fa01 f000 	lsl.w	r0, r1, r0
 8006cac:	fa24 f40c 	lsr.w	r4, r4, ip
 8006cb0:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8006cb4:	ea40 0204 	orr.w	r2, r0, r4
 8006cb8:	e7db      	b.n	8006c72 <__b2d+0x4a>
 8006cba:	ea44 030c 	orr.w	r3, r4, ip
 8006cbe:	460a      	mov	r2, r1
 8006cc0:	e7d7      	b.n	8006c72 <__b2d+0x4a>
 8006cc2:	bf00      	nop
 8006cc4:	3ff00000 	.word	0x3ff00000

08006cc8 <__d2b>:
 8006cc8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006ccc:	4689      	mov	r9, r1
 8006cce:	2101      	movs	r1, #1
 8006cd0:	ec57 6b10 	vmov	r6, r7, d0
 8006cd4:	4690      	mov	r8, r2
 8006cd6:	f7ff fc09 	bl	80064ec <_Balloc>
 8006cda:	4604      	mov	r4, r0
 8006cdc:	b930      	cbnz	r0, 8006cec <__d2b+0x24>
 8006cde:	4602      	mov	r2, r0
 8006ce0:	4b25      	ldr	r3, [pc, #148]	; (8006d78 <__d2b+0xb0>)
 8006ce2:	4826      	ldr	r0, [pc, #152]	; (8006d7c <__d2b+0xb4>)
 8006ce4:	f240 310a 	movw	r1, #778	; 0x30a
 8006ce8:	f000 fb50 	bl	800738c <__assert_func>
 8006cec:	f3c7 550a 	ubfx	r5, r7, #20, #11
 8006cf0:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8006cf4:	bb35      	cbnz	r5, 8006d44 <__d2b+0x7c>
 8006cf6:	2e00      	cmp	r6, #0
 8006cf8:	9301      	str	r3, [sp, #4]
 8006cfa:	d028      	beq.n	8006d4e <__d2b+0x86>
 8006cfc:	4668      	mov	r0, sp
 8006cfe:	9600      	str	r6, [sp, #0]
 8006d00:	f7ff fd06 	bl	8006710 <__lo0bits>
 8006d04:	9900      	ldr	r1, [sp, #0]
 8006d06:	b300      	cbz	r0, 8006d4a <__d2b+0x82>
 8006d08:	9a01      	ldr	r2, [sp, #4]
 8006d0a:	f1c0 0320 	rsb	r3, r0, #32
 8006d0e:	fa02 f303 	lsl.w	r3, r2, r3
 8006d12:	430b      	orrs	r3, r1
 8006d14:	40c2      	lsrs	r2, r0
 8006d16:	6163      	str	r3, [r4, #20]
 8006d18:	9201      	str	r2, [sp, #4]
 8006d1a:	9b01      	ldr	r3, [sp, #4]
 8006d1c:	61a3      	str	r3, [r4, #24]
 8006d1e:	2b00      	cmp	r3, #0
 8006d20:	bf14      	ite	ne
 8006d22:	2202      	movne	r2, #2
 8006d24:	2201      	moveq	r2, #1
 8006d26:	6122      	str	r2, [r4, #16]
 8006d28:	b1d5      	cbz	r5, 8006d60 <__d2b+0x98>
 8006d2a:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8006d2e:	4405      	add	r5, r0
 8006d30:	f8c9 5000 	str.w	r5, [r9]
 8006d34:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8006d38:	f8c8 0000 	str.w	r0, [r8]
 8006d3c:	4620      	mov	r0, r4
 8006d3e:	b003      	add	sp, #12
 8006d40:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006d44:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8006d48:	e7d5      	b.n	8006cf6 <__d2b+0x2e>
 8006d4a:	6161      	str	r1, [r4, #20]
 8006d4c:	e7e5      	b.n	8006d1a <__d2b+0x52>
 8006d4e:	a801      	add	r0, sp, #4
 8006d50:	f7ff fcde 	bl	8006710 <__lo0bits>
 8006d54:	9b01      	ldr	r3, [sp, #4]
 8006d56:	6163      	str	r3, [r4, #20]
 8006d58:	2201      	movs	r2, #1
 8006d5a:	6122      	str	r2, [r4, #16]
 8006d5c:	3020      	adds	r0, #32
 8006d5e:	e7e3      	b.n	8006d28 <__d2b+0x60>
 8006d60:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8006d64:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8006d68:	f8c9 0000 	str.w	r0, [r9]
 8006d6c:	6918      	ldr	r0, [r3, #16]
 8006d6e:	f7ff fcaf 	bl	80066d0 <__hi0bits>
 8006d72:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8006d76:	e7df      	b.n	8006d38 <__d2b+0x70>
 8006d78:	08008648 	.word	0x08008648
 8006d7c:	080086d4 	.word	0x080086d4

08006d80 <__ratio>:
 8006d80:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006d84:	4688      	mov	r8, r1
 8006d86:	4669      	mov	r1, sp
 8006d88:	4681      	mov	r9, r0
 8006d8a:	f7ff ff4d 	bl	8006c28 <__b2d>
 8006d8e:	a901      	add	r1, sp, #4
 8006d90:	4640      	mov	r0, r8
 8006d92:	ec55 4b10 	vmov	r4, r5, d0
 8006d96:	f7ff ff47 	bl	8006c28 <__b2d>
 8006d9a:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8006d9e:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8006da2:	eba3 0c02 	sub.w	ip, r3, r2
 8006da6:	e9dd 3200 	ldrd	r3, r2, [sp]
 8006daa:	1a9b      	subs	r3, r3, r2
 8006dac:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 8006db0:	ec51 0b10 	vmov	r0, r1, d0
 8006db4:	2b00      	cmp	r3, #0
 8006db6:	bfd6      	itet	le
 8006db8:	460a      	movle	r2, r1
 8006dba:	462a      	movgt	r2, r5
 8006dbc:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8006dc0:	468b      	mov	fp, r1
 8006dc2:	462f      	mov	r7, r5
 8006dc4:	bfd4      	ite	le
 8006dc6:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 8006dca:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 8006dce:	4620      	mov	r0, r4
 8006dd0:	ee10 2a10 	vmov	r2, s0
 8006dd4:	465b      	mov	r3, fp
 8006dd6:	4639      	mov	r1, r7
 8006dd8:	f7f9 fd58 	bl	800088c <__aeabi_ddiv>
 8006ddc:	ec41 0b10 	vmov	d0, r0, r1
 8006de0:	b003      	add	sp, #12
 8006de2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08006de6 <__copybits>:
 8006de6:	3901      	subs	r1, #1
 8006de8:	b570      	push	{r4, r5, r6, lr}
 8006dea:	1149      	asrs	r1, r1, #5
 8006dec:	6914      	ldr	r4, [r2, #16]
 8006dee:	3101      	adds	r1, #1
 8006df0:	f102 0314 	add.w	r3, r2, #20
 8006df4:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8006df8:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8006dfc:	1f05      	subs	r5, r0, #4
 8006dfe:	42a3      	cmp	r3, r4
 8006e00:	d30c      	bcc.n	8006e1c <__copybits+0x36>
 8006e02:	1aa3      	subs	r3, r4, r2
 8006e04:	3b11      	subs	r3, #17
 8006e06:	f023 0303 	bic.w	r3, r3, #3
 8006e0a:	3211      	adds	r2, #17
 8006e0c:	42a2      	cmp	r2, r4
 8006e0e:	bf88      	it	hi
 8006e10:	2300      	movhi	r3, #0
 8006e12:	4418      	add	r0, r3
 8006e14:	2300      	movs	r3, #0
 8006e16:	4288      	cmp	r0, r1
 8006e18:	d305      	bcc.n	8006e26 <__copybits+0x40>
 8006e1a:	bd70      	pop	{r4, r5, r6, pc}
 8006e1c:	f853 6b04 	ldr.w	r6, [r3], #4
 8006e20:	f845 6f04 	str.w	r6, [r5, #4]!
 8006e24:	e7eb      	b.n	8006dfe <__copybits+0x18>
 8006e26:	f840 3b04 	str.w	r3, [r0], #4
 8006e2a:	e7f4      	b.n	8006e16 <__copybits+0x30>

08006e2c <__any_on>:
 8006e2c:	f100 0214 	add.w	r2, r0, #20
 8006e30:	6900      	ldr	r0, [r0, #16]
 8006e32:	114b      	asrs	r3, r1, #5
 8006e34:	4298      	cmp	r0, r3
 8006e36:	b510      	push	{r4, lr}
 8006e38:	db11      	blt.n	8006e5e <__any_on+0x32>
 8006e3a:	dd0a      	ble.n	8006e52 <__any_on+0x26>
 8006e3c:	f011 011f 	ands.w	r1, r1, #31
 8006e40:	d007      	beq.n	8006e52 <__any_on+0x26>
 8006e42:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8006e46:	fa24 f001 	lsr.w	r0, r4, r1
 8006e4a:	fa00 f101 	lsl.w	r1, r0, r1
 8006e4e:	428c      	cmp	r4, r1
 8006e50:	d10b      	bne.n	8006e6a <__any_on+0x3e>
 8006e52:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8006e56:	4293      	cmp	r3, r2
 8006e58:	d803      	bhi.n	8006e62 <__any_on+0x36>
 8006e5a:	2000      	movs	r0, #0
 8006e5c:	bd10      	pop	{r4, pc}
 8006e5e:	4603      	mov	r3, r0
 8006e60:	e7f7      	b.n	8006e52 <__any_on+0x26>
 8006e62:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8006e66:	2900      	cmp	r1, #0
 8006e68:	d0f5      	beq.n	8006e56 <__any_on+0x2a>
 8006e6a:	2001      	movs	r0, #1
 8006e6c:	e7f6      	b.n	8006e5c <__any_on+0x30>

08006e6e <_calloc_r>:
 8006e6e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006e70:	fba1 2402 	umull	r2, r4, r1, r2
 8006e74:	b94c      	cbnz	r4, 8006e8a <_calloc_r+0x1c>
 8006e76:	4611      	mov	r1, r2
 8006e78:	9201      	str	r2, [sp, #4]
 8006e7a:	f000 f87b 	bl	8006f74 <_malloc_r>
 8006e7e:	9a01      	ldr	r2, [sp, #4]
 8006e80:	4605      	mov	r5, r0
 8006e82:	b930      	cbnz	r0, 8006e92 <_calloc_r+0x24>
 8006e84:	4628      	mov	r0, r5
 8006e86:	b003      	add	sp, #12
 8006e88:	bd30      	pop	{r4, r5, pc}
 8006e8a:	220c      	movs	r2, #12
 8006e8c:	6002      	str	r2, [r0, #0]
 8006e8e:	2500      	movs	r5, #0
 8006e90:	e7f8      	b.n	8006e84 <_calloc_r+0x16>
 8006e92:	4621      	mov	r1, r4
 8006e94:	f7fc fbc0 	bl	8003618 <memset>
 8006e98:	e7f4      	b.n	8006e84 <_calloc_r+0x16>
	...

08006e9c <_free_r>:
 8006e9c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006e9e:	2900      	cmp	r1, #0
 8006ea0:	d044      	beq.n	8006f2c <_free_r+0x90>
 8006ea2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006ea6:	9001      	str	r0, [sp, #4]
 8006ea8:	2b00      	cmp	r3, #0
 8006eaa:	f1a1 0404 	sub.w	r4, r1, #4
 8006eae:	bfb8      	it	lt
 8006eb0:	18e4      	addlt	r4, r4, r3
 8006eb2:	f000 fab5 	bl	8007420 <__malloc_lock>
 8006eb6:	4a1e      	ldr	r2, [pc, #120]	; (8006f30 <_free_r+0x94>)
 8006eb8:	9801      	ldr	r0, [sp, #4]
 8006eba:	6813      	ldr	r3, [r2, #0]
 8006ebc:	b933      	cbnz	r3, 8006ecc <_free_r+0x30>
 8006ebe:	6063      	str	r3, [r4, #4]
 8006ec0:	6014      	str	r4, [r2, #0]
 8006ec2:	b003      	add	sp, #12
 8006ec4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8006ec8:	f000 bab0 	b.w	800742c <__malloc_unlock>
 8006ecc:	42a3      	cmp	r3, r4
 8006ece:	d908      	bls.n	8006ee2 <_free_r+0x46>
 8006ed0:	6825      	ldr	r5, [r4, #0]
 8006ed2:	1961      	adds	r1, r4, r5
 8006ed4:	428b      	cmp	r3, r1
 8006ed6:	bf01      	itttt	eq
 8006ed8:	6819      	ldreq	r1, [r3, #0]
 8006eda:	685b      	ldreq	r3, [r3, #4]
 8006edc:	1949      	addeq	r1, r1, r5
 8006ede:	6021      	streq	r1, [r4, #0]
 8006ee0:	e7ed      	b.n	8006ebe <_free_r+0x22>
 8006ee2:	461a      	mov	r2, r3
 8006ee4:	685b      	ldr	r3, [r3, #4]
 8006ee6:	b10b      	cbz	r3, 8006eec <_free_r+0x50>
 8006ee8:	42a3      	cmp	r3, r4
 8006eea:	d9fa      	bls.n	8006ee2 <_free_r+0x46>
 8006eec:	6811      	ldr	r1, [r2, #0]
 8006eee:	1855      	adds	r5, r2, r1
 8006ef0:	42a5      	cmp	r5, r4
 8006ef2:	d10b      	bne.n	8006f0c <_free_r+0x70>
 8006ef4:	6824      	ldr	r4, [r4, #0]
 8006ef6:	4421      	add	r1, r4
 8006ef8:	1854      	adds	r4, r2, r1
 8006efa:	42a3      	cmp	r3, r4
 8006efc:	6011      	str	r1, [r2, #0]
 8006efe:	d1e0      	bne.n	8006ec2 <_free_r+0x26>
 8006f00:	681c      	ldr	r4, [r3, #0]
 8006f02:	685b      	ldr	r3, [r3, #4]
 8006f04:	6053      	str	r3, [r2, #4]
 8006f06:	4421      	add	r1, r4
 8006f08:	6011      	str	r1, [r2, #0]
 8006f0a:	e7da      	b.n	8006ec2 <_free_r+0x26>
 8006f0c:	d902      	bls.n	8006f14 <_free_r+0x78>
 8006f0e:	230c      	movs	r3, #12
 8006f10:	6003      	str	r3, [r0, #0]
 8006f12:	e7d6      	b.n	8006ec2 <_free_r+0x26>
 8006f14:	6825      	ldr	r5, [r4, #0]
 8006f16:	1961      	adds	r1, r4, r5
 8006f18:	428b      	cmp	r3, r1
 8006f1a:	bf04      	itt	eq
 8006f1c:	6819      	ldreq	r1, [r3, #0]
 8006f1e:	685b      	ldreq	r3, [r3, #4]
 8006f20:	6063      	str	r3, [r4, #4]
 8006f22:	bf04      	itt	eq
 8006f24:	1949      	addeq	r1, r1, r5
 8006f26:	6021      	streq	r1, [r4, #0]
 8006f28:	6054      	str	r4, [r2, #4]
 8006f2a:	e7ca      	b.n	8006ec2 <_free_r+0x26>
 8006f2c:	b003      	add	sp, #12
 8006f2e:	bd30      	pop	{r4, r5, pc}
 8006f30:	20000298 	.word	0x20000298

08006f34 <sbrk_aligned>:
 8006f34:	b570      	push	{r4, r5, r6, lr}
 8006f36:	4e0e      	ldr	r6, [pc, #56]	; (8006f70 <sbrk_aligned+0x3c>)
 8006f38:	460c      	mov	r4, r1
 8006f3a:	6831      	ldr	r1, [r6, #0]
 8006f3c:	4605      	mov	r5, r0
 8006f3e:	b911      	cbnz	r1, 8006f46 <sbrk_aligned+0x12>
 8006f40:	f000 f9f2 	bl	8007328 <_sbrk_r>
 8006f44:	6030      	str	r0, [r6, #0]
 8006f46:	4621      	mov	r1, r4
 8006f48:	4628      	mov	r0, r5
 8006f4a:	f000 f9ed 	bl	8007328 <_sbrk_r>
 8006f4e:	1c43      	adds	r3, r0, #1
 8006f50:	d00a      	beq.n	8006f68 <sbrk_aligned+0x34>
 8006f52:	1cc4      	adds	r4, r0, #3
 8006f54:	f024 0403 	bic.w	r4, r4, #3
 8006f58:	42a0      	cmp	r0, r4
 8006f5a:	d007      	beq.n	8006f6c <sbrk_aligned+0x38>
 8006f5c:	1a21      	subs	r1, r4, r0
 8006f5e:	4628      	mov	r0, r5
 8006f60:	f000 f9e2 	bl	8007328 <_sbrk_r>
 8006f64:	3001      	adds	r0, #1
 8006f66:	d101      	bne.n	8006f6c <sbrk_aligned+0x38>
 8006f68:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8006f6c:	4620      	mov	r0, r4
 8006f6e:	bd70      	pop	{r4, r5, r6, pc}
 8006f70:	2000029c 	.word	0x2000029c

08006f74 <_malloc_r>:
 8006f74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006f78:	1ccd      	adds	r5, r1, #3
 8006f7a:	f025 0503 	bic.w	r5, r5, #3
 8006f7e:	3508      	adds	r5, #8
 8006f80:	2d0c      	cmp	r5, #12
 8006f82:	bf38      	it	cc
 8006f84:	250c      	movcc	r5, #12
 8006f86:	2d00      	cmp	r5, #0
 8006f88:	4607      	mov	r7, r0
 8006f8a:	db01      	blt.n	8006f90 <_malloc_r+0x1c>
 8006f8c:	42a9      	cmp	r1, r5
 8006f8e:	d905      	bls.n	8006f9c <_malloc_r+0x28>
 8006f90:	230c      	movs	r3, #12
 8006f92:	603b      	str	r3, [r7, #0]
 8006f94:	2600      	movs	r6, #0
 8006f96:	4630      	mov	r0, r6
 8006f98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006f9c:	4e2e      	ldr	r6, [pc, #184]	; (8007058 <_malloc_r+0xe4>)
 8006f9e:	f000 fa3f 	bl	8007420 <__malloc_lock>
 8006fa2:	6833      	ldr	r3, [r6, #0]
 8006fa4:	461c      	mov	r4, r3
 8006fa6:	bb34      	cbnz	r4, 8006ff6 <_malloc_r+0x82>
 8006fa8:	4629      	mov	r1, r5
 8006faa:	4638      	mov	r0, r7
 8006fac:	f7ff ffc2 	bl	8006f34 <sbrk_aligned>
 8006fb0:	1c43      	adds	r3, r0, #1
 8006fb2:	4604      	mov	r4, r0
 8006fb4:	d14d      	bne.n	8007052 <_malloc_r+0xde>
 8006fb6:	6834      	ldr	r4, [r6, #0]
 8006fb8:	4626      	mov	r6, r4
 8006fba:	2e00      	cmp	r6, #0
 8006fbc:	d140      	bne.n	8007040 <_malloc_r+0xcc>
 8006fbe:	6823      	ldr	r3, [r4, #0]
 8006fc0:	4631      	mov	r1, r6
 8006fc2:	4638      	mov	r0, r7
 8006fc4:	eb04 0803 	add.w	r8, r4, r3
 8006fc8:	f000 f9ae 	bl	8007328 <_sbrk_r>
 8006fcc:	4580      	cmp	r8, r0
 8006fce:	d13a      	bne.n	8007046 <_malloc_r+0xd2>
 8006fd0:	6821      	ldr	r1, [r4, #0]
 8006fd2:	3503      	adds	r5, #3
 8006fd4:	1a6d      	subs	r5, r5, r1
 8006fd6:	f025 0503 	bic.w	r5, r5, #3
 8006fda:	3508      	adds	r5, #8
 8006fdc:	2d0c      	cmp	r5, #12
 8006fde:	bf38      	it	cc
 8006fe0:	250c      	movcc	r5, #12
 8006fe2:	4629      	mov	r1, r5
 8006fe4:	4638      	mov	r0, r7
 8006fe6:	f7ff ffa5 	bl	8006f34 <sbrk_aligned>
 8006fea:	3001      	adds	r0, #1
 8006fec:	d02b      	beq.n	8007046 <_malloc_r+0xd2>
 8006fee:	6823      	ldr	r3, [r4, #0]
 8006ff0:	442b      	add	r3, r5
 8006ff2:	6023      	str	r3, [r4, #0]
 8006ff4:	e00e      	b.n	8007014 <_malloc_r+0xa0>
 8006ff6:	6822      	ldr	r2, [r4, #0]
 8006ff8:	1b52      	subs	r2, r2, r5
 8006ffa:	d41e      	bmi.n	800703a <_malloc_r+0xc6>
 8006ffc:	2a0b      	cmp	r2, #11
 8006ffe:	d916      	bls.n	800702e <_malloc_r+0xba>
 8007000:	1961      	adds	r1, r4, r5
 8007002:	42a3      	cmp	r3, r4
 8007004:	6025      	str	r5, [r4, #0]
 8007006:	bf18      	it	ne
 8007008:	6059      	strne	r1, [r3, #4]
 800700a:	6863      	ldr	r3, [r4, #4]
 800700c:	bf08      	it	eq
 800700e:	6031      	streq	r1, [r6, #0]
 8007010:	5162      	str	r2, [r4, r5]
 8007012:	604b      	str	r3, [r1, #4]
 8007014:	4638      	mov	r0, r7
 8007016:	f104 060b 	add.w	r6, r4, #11
 800701a:	f000 fa07 	bl	800742c <__malloc_unlock>
 800701e:	f026 0607 	bic.w	r6, r6, #7
 8007022:	1d23      	adds	r3, r4, #4
 8007024:	1af2      	subs	r2, r6, r3
 8007026:	d0b6      	beq.n	8006f96 <_malloc_r+0x22>
 8007028:	1b9b      	subs	r3, r3, r6
 800702a:	50a3      	str	r3, [r4, r2]
 800702c:	e7b3      	b.n	8006f96 <_malloc_r+0x22>
 800702e:	6862      	ldr	r2, [r4, #4]
 8007030:	42a3      	cmp	r3, r4
 8007032:	bf0c      	ite	eq
 8007034:	6032      	streq	r2, [r6, #0]
 8007036:	605a      	strne	r2, [r3, #4]
 8007038:	e7ec      	b.n	8007014 <_malloc_r+0xa0>
 800703a:	4623      	mov	r3, r4
 800703c:	6864      	ldr	r4, [r4, #4]
 800703e:	e7b2      	b.n	8006fa6 <_malloc_r+0x32>
 8007040:	4634      	mov	r4, r6
 8007042:	6876      	ldr	r6, [r6, #4]
 8007044:	e7b9      	b.n	8006fba <_malloc_r+0x46>
 8007046:	230c      	movs	r3, #12
 8007048:	603b      	str	r3, [r7, #0]
 800704a:	4638      	mov	r0, r7
 800704c:	f000 f9ee 	bl	800742c <__malloc_unlock>
 8007050:	e7a1      	b.n	8006f96 <_malloc_r+0x22>
 8007052:	6025      	str	r5, [r4, #0]
 8007054:	e7de      	b.n	8007014 <_malloc_r+0xa0>
 8007056:	bf00      	nop
 8007058:	20000298 	.word	0x20000298

0800705c <__ssputs_r>:
 800705c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007060:	688e      	ldr	r6, [r1, #8]
 8007062:	429e      	cmp	r6, r3
 8007064:	4682      	mov	sl, r0
 8007066:	460c      	mov	r4, r1
 8007068:	4690      	mov	r8, r2
 800706a:	461f      	mov	r7, r3
 800706c:	d838      	bhi.n	80070e0 <__ssputs_r+0x84>
 800706e:	898a      	ldrh	r2, [r1, #12]
 8007070:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8007074:	d032      	beq.n	80070dc <__ssputs_r+0x80>
 8007076:	6825      	ldr	r5, [r4, #0]
 8007078:	6909      	ldr	r1, [r1, #16]
 800707a:	eba5 0901 	sub.w	r9, r5, r1
 800707e:	6965      	ldr	r5, [r4, #20]
 8007080:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8007084:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8007088:	3301      	adds	r3, #1
 800708a:	444b      	add	r3, r9
 800708c:	106d      	asrs	r5, r5, #1
 800708e:	429d      	cmp	r5, r3
 8007090:	bf38      	it	cc
 8007092:	461d      	movcc	r5, r3
 8007094:	0553      	lsls	r3, r2, #21
 8007096:	d531      	bpl.n	80070fc <__ssputs_r+0xa0>
 8007098:	4629      	mov	r1, r5
 800709a:	f7ff ff6b 	bl	8006f74 <_malloc_r>
 800709e:	4606      	mov	r6, r0
 80070a0:	b950      	cbnz	r0, 80070b8 <__ssputs_r+0x5c>
 80070a2:	230c      	movs	r3, #12
 80070a4:	f8ca 3000 	str.w	r3, [sl]
 80070a8:	89a3      	ldrh	r3, [r4, #12]
 80070aa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80070ae:	81a3      	strh	r3, [r4, #12]
 80070b0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80070b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80070b8:	6921      	ldr	r1, [r4, #16]
 80070ba:	464a      	mov	r2, r9
 80070bc:	f7ff fa08 	bl	80064d0 <memcpy>
 80070c0:	89a3      	ldrh	r3, [r4, #12]
 80070c2:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 80070c6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80070ca:	81a3      	strh	r3, [r4, #12]
 80070cc:	6126      	str	r6, [r4, #16]
 80070ce:	6165      	str	r5, [r4, #20]
 80070d0:	444e      	add	r6, r9
 80070d2:	eba5 0509 	sub.w	r5, r5, r9
 80070d6:	6026      	str	r6, [r4, #0]
 80070d8:	60a5      	str	r5, [r4, #8]
 80070da:	463e      	mov	r6, r7
 80070dc:	42be      	cmp	r6, r7
 80070de:	d900      	bls.n	80070e2 <__ssputs_r+0x86>
 80070e0:	463e      	mov	r6, r7
 80070e2:	6820      	ldr	r0, [r4, #0]
 80070e4:	4632      	mov	r2, r6
 80070e6:	4641      	mov	r1, r8
 80070e8:	f000 f980 	bl	80073ec <memmove>
 80070ec:	68a3      	ldr	r3, [r4, #8]
 80070ee:	1b9b      	subs	r3, r3, r6
 80070f0:	60a3      	str	r3, [r4, #8]
 80070f2:	6823      	ldr	r3, [r4, #0]
 80070f4:	4433      	add	r3, r6
 80070f6:	6023      	str	r3, [r4, #0]
 80070f8:	2000      	movs	r0, #0
 80070fa:	e7db      	b.n	80070b4 <__ssputs_r+0x58>
 80070fc:	462a      	mov	r2, r5
 80070fe:	f000 f99b 	bl	8007438 <_realloc_r>
 8007102:	4606      	mov	r6, r0
 8007104:	2800      	cmp	r0, #0
 8007106:	d1e1      	bne.n	80070cc <__ssputs_r+0x70>
 8007108:	6921      	ldr	r1, [r4, #16]
 800710a:	4650      	mov	r0, sl
 800710c:	f7ff fec6 	bl	8006e9c <_free_r>
 8007110:	e7c7      	b.n	80070a2 <__ssputs_r+0x46>
	...

08007114 <_svfiprintf_r>:
 8007114:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007118:	4698      	mov	r8, r3
 800711a:	898b      	ldrh	r3, [r1, #12]
 800711c:	061b      	lsls	r3, r3, #24
 800711e:	b09d      	sub	sp, #116	; 0x74
 8007120:	4607      	mov	r7, r0
 8007122:	460d      	mov	r5, r1
 8007124:	4614      	mov	r4, r2
 8007126:	d50e      	bpl.n	8007146 <_svfiprintf_r+0x32>
 8007128:	690b      	ldr	r3, [r1, #16]
 800712a:	b963      	cbnz	r3, 8007146 <_svfiprintf_r+0x32>
 800712c:	2140      	movs	r1, #64	; 0x40
 800712e:	f7ff ff21 	bl	8006f74 <_malloc_r>
 8007132:	6028      	str	r0, [r5, #0]
 8007134:	6128      	str	r0, [r5, #16]
 8007136:	b920      	cbnz	r0, 8007142 <_svfiprintf_r+0x2e>
 8007138:	230c      	movs	r3, #12
 800713a:	603b      	str	r3, [r7, #0]
 800713c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8007140:	e0d1      	b.n	80072e6 <_svfiprintf_r+0x1d2>
 8007142:	2340      	movs	r3, #64	; 0x40
 8007144:	616b      	str	r3, [r5, #20]
 8007146:	2300      	movs	r3, #0
 8007148:	9309      	str	r3, [sp, #36]	; 0x24
 800714a:	2320      	movs	r3, #32
 800714c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8007150:	f8cd 800c 	str.w	r8, [sp, #12]
 8007154:	2330      	movs	r3, #48	; 0x30
 8007156:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 8007300 <_svfiprintf_r+0x1ec>
 800715a:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800715e:	f04f 0901 	mov.w	r9, #1
 8007162:	4623      	mov	r3, r4
 8007164:	469a      	mov	sl, r3
 8007166:	f813 2b01 	ldrb.w	r2, [r3], #1
 800716a:	b10a      	cbz	r2, 8007170 <_svfiprintf_r+0x5c>
 800716c:	2a25      	cmp	r2, #37	; 0x25
 800716e:	d1f9      	bne.n	8007164 <_svfiprintf_r+0x50>
 8007170:	ebba 0b04 	subs.w	fp, sl, r4
 8007174:	d00b      	beq.n	800718e <_svfiprintf_r+0x7a>
 8007176:	465b      	mov	r3, fp
 8007178:	4622      	mov	r2, r4
 800717a:	4629      	mov	r1, r5
 800717c:	4638      	mov	r0, r7
 800717e:	f7ff ff6d 	bl	800705c <__ssputs_r>
 8007182:	3001      	adds	r0, #1
 8007184:	f000 80aa 	beq.w	80072dc <_svfiprintf_r+0x1c8>
 8007188:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800718a:	445a      	add	r2, fp
 800718c:	9209      	str	r2, [sp, #36]	; 0x24
 800718e:	f89a 3000 	ldrb.w	r3, [sl]
 8007192:	2b00      	cmp	r3, #0
 8007194:	f000 80a2 	beq.w	80072dc <_svfiprintf_r+0x1c8>
 8007198:	2300      	movs	r3, #0
 800719a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800719e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80071a2:	f10a 0a01 	add.w	sl, sl, #1
 80071a6:	9304      	str	r3, [sp, #16]
 80071a8:	9307      	str	r3, [sp, #28]
 80071aa:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80071ae:	931a      	str	r3, [sp, #104]	; 0x68
 80071b0:	4654      	mov	r4, sl
 80071b2:	2205      	movs	r2, #5
 80071b4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80071b8:	4851      	ldr	r0, [pc, #324]	; (8007300 <_svfiprintf_r+0x1ec>)
 80071ba:	f7f9 f831 	bl	8000220 <memchr>
 80071be:	9a04      	ldr	r2, [sp, #16]
 80071c0:	b9d8      	cbnz	r0, 80071fa <_svfiprintf_r+0xe6>
 80071c2:	06d0      	lsls	r0, r2, #27
 80071c4:	bf44      	itt	mi
 80071c6:	2320      	movmi	r3, #32
 80071c8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80071cc:	0711      	lsls	r1, r2, #28
 80071ce:	bf44      	itt	mi
 80071d0:	232b      	movmi	r3, #43	; 0x2b
 80071d2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80071d6:	f89a 3000 	ldrb.w	r3, [sl]
 80071da:	2b2a      	cmp	r3, #42	; 0x2a
 80071dc:	d015      	beq.n	800720a <_svfiprintf_r+0xf6>
 80071de:	9a07      	ldr	r2, [sp, #28]
 80071e0:	4654      	mov	r4, sl
 80071e2:	2000      	movs	r0, #0
 80071e4:	f04f 0c0a 	mov.w	ip, #10
 80071e8:	4621      	mov	r1, r4
 80071ea:	f811 3b01 	ldrb.w	r3, [r1], #1
 80071ee:	3b30      	subs	r3, #48	; 0x30
 80071f0:	2b09      	cmp	r3, #9
 80071f2:	d94e      	bls.n	8007292 <_svfiprintf_r+0x17e>
 80071f4:	b1b0      	cbz	r0, 8007224 <_svfiprintf_r+0x110>
 80071f6:	9207      	str	r2, [sp, #28]
 80071f8:	e014      	b.n	8007224 <_svfiprintf_r+0x110>
 80071fa:	eba0 0308 	sub.w	r3, r0, r8
 80071fe:	fa09 f303 	lsl.w	r3, r9, r3
 8007202:	4313      	orrs	r3, r2
 8007204:	9304      	str	r3, [sp, #16]
 8007206:	46a2      	mov	sl, r4
 8007208:	e7d2      	b.n	80071b0 <_svfiprintf_r+0x9c>
 800720a:	9b03      	ldr	r3, [sp, #12]
 800720c:	1d19      	adds	r1, r3, #4
 800720e:	681b      	ldr	r3, [r3, #0]
 8007210:	9103      	str	r1, [sp, #12]
 8007212:	2b00      	cmp	r3, #0
 8007214:	bfbb      	ittet	lt
 8007216:	425b      	neglt	r3, r3
 8007218:	f042 0202 	orrlt.w	r2, r2, #2
 800721c:	9307      	strge	r3, [sp, #28]
 800721e:	9307      	strlt	r3, [sp, #28]
 8007220:	bfb8      	it	lt
 8007222:	9204      	strlt	r2, [sp, #16]
 8007224:	7823      	ldrb	r3, [r4, #0]
 8007226:	2b2e      	cmp	r3, #46	; 0x2e
 8007228:	d10c      	bne.n	8007244 <_svfiprintf_r+0x130>
 800722a:	7863      	ldrb	r3, [r4, #1]
 800722c:	2b2a      	cmp	r3, #42	; 0x2a
 800722e:	d135      	bne.n	800729c <_svfiprintf_r+0x188>
 8007230:	9b03      	ldr	r3, [sp, #12]
 8007232:	1d1a      	adds	r2, r3, #4
 8007234:	681b      	ldr	r3, [r3, #0]
 8007236:	9203      	str	r2, [sp, #12]
 8007238:	2b00      	cmp	r3, #0
 800723a:	bfb8      	it	lt
 800723c:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8007240:	3402      	adds	r4, #2
 8007242:	9305      	str	r3, [sp, #20]
 8007244:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8007310 <_svfiprintf_r+0x1fc>
 8007248:	7821      	ldrb	r1, [r4, #0]
 800724a:	2203      	movs	r2, #3
 800724c:	4650      	mov	r0, sl
 800724e:	f7f8 ffe7 	bl	8000220 <memchr>
 8007252:	b140      	cbz	r0, 8007266 <_svfiprintf_r+0x152>
 8007254:	2340      	movs	r3, #64	; 0x40
 8007256:	eba0 000a 	sub.w	r0, r0, sl
 800725a:	fa03 f000 	lsl.w	r0, r3, r0
 800725e:	9b04      	ldr	r3, [sp, #16]
 8007260:	4303      	orrs	r3, r0
 8007262:	3401      	adds	r4, #1
 8007264:	9304      	str	r3, [sp, #16]
 8007266:	f814 1b01 	ldrb.w	r1, [r4], #1
 800726a:	4826      	ldr	r0, [pc, #152]	; (8007304 <_svfiprintf_r+0x1f0>)
 800726c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8007270:	2206      	movs	r2, #6
 8007272:	f7f8 ffd5 	bl	8000220 <memchr>
 8007276:	2800      	cmp	r0, #0
 8007278:	d038      	beq.n	80072ec <_svfiprintf_r+0x1d8>
 800727a:	4b23      	ldr	r3, [pc, #140]	; (8007308 <_svfiprintf_r+0x1f4>)
 800727c:	bb1b      	cbnz	r3, 80072c6 <_svfiprintf_r+0x1b2>
 800727e:	9b03      	ldr	r3, [sp, #12]
 8007280:	3307      	adds	r3, #7
 8007282:	f023 0307 	bic.w	r3, r3, #7
 8007286:	3308      	adds	r3, #8
 8007288:	9303      	str	r3, [sp, #12]
 800728a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800728c:	4433      	add	r3, r6
 800728e:	9309      	str	r3, [sp, #36]	; 0x24
 8007290:	e767      	b.n	8007162 <_svfiprintf_r+0x4e>
 8007292:	fb0c 3202 	mla	r2, ip, r2, r3
 8007296:	460c      	mov	r4, r1
 8007298:	2001      	movs	r0, #1
 800729a:	e7a5      	b.n	80071e8 <_svfiprintf_r+0xd4>
 800729c:	2300      	movs	r3, #0
 800729e:	3401      	adds	r4, #1
 80072a0:	9305      	str	r3, [sp, #20]
 80072a2:	4619      	mov	r1, r3
 80072a4:	f04f 0c0a 	mov.w	ip, #10
 80072a8:	4620      	mov	r0, r4
 80072aa:	f810 2b01 	ldrb.w	r2, [r0], #1
 80072ae:	3a30      	subs	r2, #48	; 0x30
 80072b0:	2a09      	cmp	r2, #9
 80072b2:	d903      	bls.n	80072bc <_svfiprintf_r+0x1a8>
 80072b4:	2b00      	cmp	r3, #0
 80072b6:	d0c5      	beq.n	8007244 <_svfiprintf_r+0x130>
 80072b8:	9105      	str	r1, [sp, #20]
 80072ba:	e7c3      	b.n	8007244 <_svfiprintf_r+0x130>
 80072bc:	fb0c 2101 	mla	r1, ip, r1, r2
 80072c0:	4604      	mov	r4, r0
 80072c2:	2301      	movs	r3, #1
 80072c4:	e7f0      	b.n	80072a8 <_svfiprintf_r+0x194>
 80072c6:	ab03      	add	r3, sp, #12
 80072c8:	9300      	str	r3, [sp, #0]
 80072ca:	462a      	mov	r2, r5
 80072cc:	4b0f      	ldr	r3, [pc, #60]	; (800730c <_svfiprintf_r+0x1f8>)
 80072ce:	a904      	add	r1, sp, #16
 80072d0:	4638      	mov	r0, r7
 80072d2:	f7fc fa49 	bl	8003768 <_printf_float>
 80072d6:	1c42      	adds	r2, r0, #1
 80072d8:	4606      	mov	r6, r0
 80072da:	d1d6      	bne.n	800728a <_svfiprintf_r+0x176>
 80072dc:	89ab      	ldrh	r3, [r5, #12]
 80072de:	065b      	lsls	r3, r3, #25
 80072e0:	f53f af2c 	bmi.w	800713c <_svfiprintf_r+0x28>
 80072e4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80072e6:	b01d      	add	sp, #116	; 0x74
 80072e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80072ec:	ab03      	add	r3, sp, #12
 80072ee:	9300      	str	r3, [sp, #0]
 80072f0:	462a      	mov	r2, r5
 80072f2:	4b06      	ldr	r3, [pc, #24]	; (800730c <_svfiprintf_r+0x1f8>)
 80072f4:	a904      	add	r1, sp, #16
 80072f6:	4638      	mov	r0, r7
 80072f8:	f7fc fcda 	bl	8003cb0 <_printf_i>
 80072fc:	e7eb      	b.n	80072d6 <_svfiprintf_r+0x1c2>
 80072fe:	bf00      	nop
 8007300:	0800882c 	.word	0x0800882c
 8007304:	08008836 	.word	0x08008836
 8007308:	08003769 	.word	0x08003769
 800730c:	0800705d 	.word	0x0800705d
 8007310:	08008832 	.word	0x08008832
 8007314:	00000000 	.word	0x00000000

08007318 <nan>:
 8007318:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8007320 <nan+0x8>
 800731c:	4770      	bx	lr
 800731e:	bf00      	nop
 8007320:	00000000 	.word	0x00000000
 8007324:	7ff80000 	.word	0x7ff80000

08007328 <_sbrk_r>:
 8007328:	b538      	push	{r3, r4, r5, lr}
 800732a:	4d06      	ldr	r5, [pc, #24]	; (8007344 <_sbrk_r+0x1c>)
 800732c:	2300      	movs	r3, #0
 800732e:	4604      	mov	r4, r0
 8007330:	4608      	mov	r0, r1
 8007332:	602b      	str	r3, [r5, #0]
 8007334:	f7fb f8aa 	bl	800248c <_sbrk>
 8007338:	1c43      	adds	r3, r0, #1
 800733a:	d102      	bne.n	8007342 <_sbrk_r+0x1a>
 800733c:	682b      	ldr	r3, [r5, #0]
 800733e:	b103      	cbz	r3, 8007342 <_sbrk_r+0x1a>
 8007340:	6023      	str	r3, [r4, #0]
 8007342:	bd38      	pop	{r3, r4, r5, pc}
 8007344:	200002a0 	.word	0x200002a0

08007348 <strncmp>:
 8007348:	b510      	push	{r4, lr}
 800734a:	b17a      	cbz	r2, 800736c <strncmp+0x24>
 800734c:	4603      	mov	r3, r0
 800734e:	3901      	subs	r1, #1
 8007350:	1884      	adds	r4, r0, r2
 8007352:	f813 0b01 	ldrb.w	r0, [r3], #1
 8007356:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800735a:	4290      	cmp	r0, r2
 800735c:	d101      	bne.n	8007362 <strncmp+0x1a>
 800735e:	42a3      	cmp	r3, r4
 8007360:	d101      	bne.n	8007366 <strncmp+0x1e>
 8007362:	1a80      	subs	r0, r0, r2
 8007364:	bd10      	pop	{r4, pc}
 8007366:	2800      	cmp	r0, #0
 8007368:	d1f3      	bne.n	8007352 <strncmp+0xa>
 800736a:	e7fa      	b.n	8007362 <strncmp+0x1a>
 800736c:	4610      	mov	r0, r2
 800736e:	e7f9      	b.n	8007364 <strncmp+0x1c>

08007370 <__ascii_wctomb>:
 8007370:	b149      	cbz	r1, 8007386 <__ascii_wctomb+0x16>
 8007372:	2aff      	cmp	r2, #255	; 0xff
 8007374:	bf85      	ittet	hi
 8007376:	238a      	movhi	r3, #138	; 0x8a
 8007378:	6003      	strhi	r3, [r0, #0]
 800737a:	700a      	strbls	r2, [r1, #0]
 800737c:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
 8007380:	bf98      	it	ls
 8007382:	2001      	movls	r0, #1
 8007384:	4770      	bx	lr
 8007386:	4608      	mov	r0, r1
 8007388:	4770      	bx	lr
	...

0800738c <__assert_func>:
 800738c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800738e:	4614      	mov	r4, r2
 8007390:	461a      	mov	r2, r3
 8007392:	4b09      	ldr	r3, [pc, #36]	; (80073b8 <__assert_func+0x2c>)
 8007394:	681b      	ldr	r3, [r3, #0]
 8007396:	4605      	mov	r5, r0
 8007398:	68d8      	ldr	r0, [r3, #12]
 800739a:	b14c      	cbz	r4, 80073b0 <__assert_func+0x24>
 800739c:	4b07      	ldr	r3, [pc, #28]	; (80073bc <__assert_func+0x30>)
 800739e:	9100      	str	r1, [sp, #0]
 80073a0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80073a4:	4906      	ldr	r1, [pc, #24]	; (80073c0 <__assert_func+0x34>)
 80073a6:	462b      	mov	r3, r5
 80073a8:	f000 f80e 	bl	80073c8 <fiprintf>
 80073ac:	f000 fa8c 	bl	80078c8 <abort>
 80073b0:	4b04      	ldr	r3, [pc, #16]	; (80073c4 <__assert_func+0x38>)
 80073b2:	461c      	mov	r4, r3
 80073b4:	e7f3      	b.n	800739e <__assert_func+0x12>
 80073b6:	bf00      	nop
 80073b8:	20000000 	.word	0x20000000
 80073bc:	0800883d 	.word	0x0800883d
 80073c0:	0800884a 	.word	0x0800884a
 80073c4:	08008878 	.word	0x08008878

080073c8 <fiprintf>:
 80073c8:	b40e      	push	{r1, r2, r3}
 80073ca:	b503      	push	{r0, r1, lr}
 80073cc:	4601      	mov	r1, r0
 80073ce:	ab03      	add	r3, sp, #12
 80073d0:	4805      	ldr	r0, [pc, #20]	; (80073e8 <fiprintf+0x20>)
 80073d2:	f853 2b04 	ldr.w	r2, [r3], #4
 80073d6:	6800      	ldr	r0, [r0, #0]
 80073d8:	9301      	str	r3, [sp, #4]
 80073da:	f000 f885 	bl	80074e8 <_vfiprintf_r>
 80073de:	b002      	add	sp, #8
 80073e0:	f85d eb04 	ldr.w	lr, [sp], #4
 80073e4:	b003      	add	sp, #12
 80073e6:	4770      	bx	lr
 80073e8:	20000000 	.word	0x20000000

080073ec <memmove>:
 80073ec:	4288      	cmp	r0, r1
 80073ee:	b510      	push	{r4, lr}
 80073f0:	eb01 0402 	add.w	r4, r1, r2
 80073f4:	d902      	bls.n	80073fc <memmove+0x10>
 80073f6:	4284      	cmp	r4, r0
 80073f8:	4623      	mov	r3, r4
 80073fa:	d807      	bhi.n	800740c <memmove+0x20>
 80073fc:	1e43      	subs	r3, r0, #1
 80073fe:	42a1      	cmp	r1, r4
 8007400:	d008      	beq.n	8007414 <memmove+0x28>
 8007402:	f811 2b01 	ldrb.w	r2, [r1], #1
 8007406:	f803 2f01 	strb.w	r2, [r3, #1]!
 800740a:	e7f8      	b.n	80073fe <memmove+0x12>
 800740c:	4402      	add	r2, r0
 800740e:	4601      	mov	r1, r0
 8007410:	428a      	cmp	r2, r1
 8007412:	d100      	bne.n	8007416 <memmove+0x2a>
 8007414:	bd10      	pop	{r4, pc}
 8007416:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800741a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800741e:	e7f7      	b.n	8007410 <memmove+0x24>

08007420 <__malloc_lock>:
 8007420:	4801      	ldr	r0, [pc, #4]	; (8007428 <__malloc_lock+0x8>)
 8007422:	f000 bc11 	b.w	8007c48 <__retarget_lock_acquire_recursive>
 8007426:	bf00      	nop
 8007428:	200002a4 	.word	0x200002a4

0800742c <__malloc_unlock>:
 800742c:	4801      	ldr	r0, [pc, #4]	; (8007434 <__malloc_unlock+0x8>)
 800742e:	f000 bc0c 	b.w	8007c4a <__retarget_lock_release_recursive>
 8007432:	bf00      	nop
 8007434:	200002a4 	.word	0x200002a4

08007438 <_realloc_r>:
 8007438:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800743c:	4680      	mov	r8, r0
 800743e:	4614      	mov	r4, r2
 8007440:	460e      	mov	r6, r1
 8007442:	b921      	cbnz	r1, 800744e <_realloc_r+0x16>
 8007444:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007448:	4611      	mov	r1, r2
 800744a:	f7ff bd93 	b.w	8006f74 <_malloc_r>
 800744e:	b92a      	cbnz	r2, 800745c <_realloc_r+0x24>
 8007450:	f7ff fd24 	bl	8006e9c <_free_r>
 8007454:	4625      	mov	r5, r4
 8007456:	4628      	mov	r0, r5
 8007458:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800745c:	f000 fc5c 	bl	8007d18 <_malloc_usable_size_r>
 8007460:	4284      	cmp	r4, r0
 8007462:	4607      	mov	r7, r0
 8007464:	d802      	bhi.n	800746c <_realloc_r+0x34>
 8007466:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800746a:	d812      	bhi.n	8007492 <_realloc_r+0x5a>
 800746c:	4621      	mov	r1, r4
 800746e:	4640      	mov	r0, r8
 8007470:	f7ff fd80 	bl	8006f74 <_malloc_r>
 8007474:	4605      	mov	r5, r0
 8007476:	2800      	cmp	r0, #0
 8007478:	d0ed      	beq.n	8007456 <_realloc_r+0x1e>
 800747a:	42bc      	cmp	r4, r7
 800747c:	4622      	mov	r2, r4
 800747e:	4631      	mov	r1, r6
 8007480:	bf28      	it	cs
 8007482:	463a      	movcs	r2, r7
 8007484:	f7ff f824 	bl	80064d0 <memcpy>
 8007488:	4631      	mov	r1, r6
 800748a:	4640      	mov	r0, r8
 800748c:	f7ff fd06 	bl	8006e9c <_free_r>
 8007490:	e7e1      	b.n	8007456 <_realloc_r+0x1e>
 8007492:	4635      	mov	r5, r6
 8007494:	e7df      	b.n	8007456 <_realloc_r+0x1e>

08007496 <__sfputc_r>:
 8007496:	6893      	ldr	r3, [r2, #8]
 8007498:	3b01      	subs	r3, #1
 800749a:	2b00      	cmp	r3, #0
 800749c:	b410      	push	{r4}
 800749e:	6093      	str	r3, [r2, #8]
 80074a0:	da08      	bge.n	80074b4 <__sfputc_r+0x1e>
 80074a2:	6994      	ldr	r4, [r2, #24]
 80074a4:	42a3      	cmp	r3, r4
 80074a6:	db01      	blt.n	80074ac <__sfputc_r+0x16>
 80074a8:	290a      	cmp	r1, #10
 80074aa:	d103      	bne.n	80074b4 <__sfputc_r+0x1e>
 80074ac:	f85d 4b04 	ldr.w	r4, [sp], #4
 80074b0:	f000 b94a 	b.w	8007748 <__swbuf_r>
 80074b4:	6813      	ldr	r3, [r2, #0]
 80074b6:	1c58      	adds	r0, r3, #1
 80074b8:	6010      	str	r0, [r2, #0]
 80074ba:	7019      	strb	r1, [r3, #0]
 80074bc:	4608      	mov	r0, r1
 80074be:	f85d 4b04 	ldr.w	r4, [sp], #4
 80074c2:	4770      	bx	lr

080074c4 <__sfputs_r>:
 80074c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80074c6:	4606      	mov	r6, r0
 80074c8:	460f      	mov	r7, r1
 80074ca:	4614      	mov	r4, r2
 80074cc:	18d5      	adds	r5, r2, r3
 80074ce:	42ac      	cmp	r4, r5
 80074d0:	d101      	bne.n	80074d6 <__sfputs_r+0x12>
 80074d2:	2000      	movs	r0, #0
 80074d4:	e007      	b.n	80074e6 <__sfputs_r+0x22>
 80074d6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80074da:	463a      	mov	r2, r7
 80074dc:	4630      	mov	r0, r6
 80074de:	f7ff ffda 	bl	8007496 <__sfputc_r>
 80074e2:	1c43      	adds	r3, r0, #1
 80074e4:	d1f3      	bne.n	80074ce <__sfputs_r+0xa>
 80074e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080074e8 <_vfiprintf_r>:
 80074e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80074ec:	460d      	mov	r5, r1
 80074ee:	b09d      	sub	sp, #116	; 0x74
 80074f0:	4614      	mov	r4, r2
 80074f2:	4698      	mov	r8, r3
 80074f4:	4606      	mov	r6, r0
 80074f6:	b118      	cbz	r0, 8007500 <_vfiprintf_r+0x18>
 80074f8:	6983      	ldr	r3, [r0, #24]
 80074fa:	b90b      	cbnz	r3, 8007500 <_vfiprintf_r+0x18>
 80074fc:	f000 fb06 	bl	8007b0c <__sinit>
 8007500:	4b89      	ldr	r3, [pc, #548]	; (8007728 <_vfiprintf_r+0x240>)
 8007502:	429d      	cmp	r5, r3
 8007504:	d11b      	bne.n	800753e <_vfiprintf_r+0x56>
 8007506:	6875      	ldr	r5, [r6, #4]
 8007508:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800750a:	07d9      	lsls	r1, r3, #31
 800750c:	d405      	bmi.n	800751a <_vfiprintf_r+0x32>
 800750e:	89ab      	ldrh	r3, [r5, #12]
 8007510:	059a      	lsls	r2, r3, #22
 8007512:	d402      	bmi.n	800751a <_vfiprintf_r+0x32>
 8007514:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007516:	f000 fb97 	bl	8007c48 <__retarget_lock_acquire_recursive>
 800751a:	89ab      	ldrh	r3, [r5, #12]
 800751c:	071b      	lsls	r3, r3, #28
 800751e:	d501      	bpl.n	8007524 <_vfiprintf_r+0x3c>
 8007520:	692b      	ldr	r3, [r5, #16]
 8007522:	b9eb      	cbnz	r3, 8007560 <_vfiprintf_r+0x78>
 8007524:	4629      	mov	r1, r5
 8007526:	4630      	mov	r0, r6
 8007528:	f000 f960 	bl	80077ec <__swsetup_r>
 800752c:	b1c0      	cbz	r0, 8007560 <_vfiprintf_r+0x78>
 800752e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8007530:	07dc      	lsls	r4, r3, #31
 8007532:	d50e      	bpl.n	8007552 <_vfiprintf_r+0x6a>
 8007534:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8007538:	b01d      	add	sp, #116	; 0x74
 800753a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800753e:	4b7b      	ldr	r3, [pc, #492]	; (800772c <_vfiprintf_r+0x244>)
 8007540:	429d      	cmp	r5, r3
 8007542:	d101      	bne.n	8007548 <_vfiprintf_r+0x60>
 8007544:	68b5      	ldr	r5, [r6, #8]
 8007546:	e7df      	b.n	8007508 <_vfiprintf_r+0x20>
 8007548:	4b79      	ldr	r3, [pc, #484]	; (8007730 <_vfiprintf_r+0x248>)
 800754a:	429d      	cmp	r5, r3
 800754c:	bf08      	it	eq
 800754e:	68f5      	ldreq	r5, [r6, #12]
 8007550:	e7da      	b.n	8007508 <_vfiprintf_r+0x20>
 8007552:	89ab      	ldrh	r3, [r5, #12]
 8007554:	0598      	lsls	r0, r3, #22
 8007556:	d4ed      	bmi.n	8007534 <_vfiprintf_r+0x4c>
 8007558:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800755a:	f000 fb76 	bl	8007c4a <__retarget_lock_release_recursive>
 800755e:	e7e9      	b.n	8007534 <_vfiprintf_r+0x4c>
 8007560:	2300      	movs	r3, #0
 8007562:	9309      	str	r3, [sp, #36]	; 0x24
 8007564:	2320      	movs	r3, #32
 8007566:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800756a:	f8cd 800c 	str.w	r8, [sp, #12]
 800756e:	2330      	movs	r3, #48	; 0x30
 8007570:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8007734 <_vfiprintf_r+0x24c>
 8007574:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8007578:	f04f 0901 	mov.w	r9, #1
 800757c:	4623      	mov	r3, r4
 800757e:	469a      	mov	sl, r3
 8007580:	f813 2b01 	ldrb.w	r2, [r3], #1
 8007584:	b10a      	cbz	r2, 800758a <_vfiprintf_r+0xa2>
 8007586:	2a25      	cmp	r2, #37	; 0x25
 8007588:	d1f9      	bne.n	800757e <_vfiprintf_r+0x96>
 800758a:	ebba 0b04 	subs.w	fp, sl, r4
 800758e:	d00b      	beq.n	80075a8 <_vfiprintf_r+0xc0>
 8007590:	465b      	mov	r3, fp
 8007592:	4622      	mov	r2, r4
 8007594:	4629      	mov	r1, r5
 8007596:	4630      	mov	r0, r6
 8007598:	f7ff ff94 	bl	80074c4 <__sfputs_r>
 800759c:	3001      	adds	r0, #1
 800759e:	f000 80aa 	beq.w	80076f6 <_vfiprintf_r+0x20e>
 80075a2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80075a4:	445a      	add	r2, fp
 80075a6:	9209      	str	r2, [sp, #36]	; 0x24
 80075a8:	f89a 3000 	ldrb.w	r3, [sl]
 80075ac:	2b00      	cmp	r3, #0
 80075ae:	f000 80a2 	beq.w	80076f6 <_vfiprintf_r+0x20e>
 80075b2:	2300      	movs	r3, #0
 80075b4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80075b8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80075bc:	f10a 0a01 	add.w	sl, sl, #1
 80075c0:	9304      	str	r3, [sp, #16]
 80075c2:	9307      	str	r3, [sp, #28]
 80075c4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80075c8:	931a      	str	r3, [sp, #104]	; 0x68
 80075ca:	4654      	mov	r4, sl
 80075cc:	2205      	movs	r2, #5
 80075ce:	f814 1b01 	ldrb.w	r1, [r4], #1
 80075d2:	4858      	ldr	r0, [pc, #352]	; (8007734 <_vfiprintf_r+0x24c>)
 80075d4:	f7f8 fe24 	bl	8000220 <memchr>
 80075d8:	9a04      	ldr	r2, [sp, #16]
 80075da:	b9d8      	cbnz	r0, 8007614 <_vfiprintf_r+0x12c>
 80075dc:	06d1      	lsls	r1, r2, #27
 80075de:	bf44      	itt	mi
 80075e0:	2320      	movmi	r3, #32
 80075e2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80075e6:	0713      	lsls	r3, r2, #28
 80075e8:	bf44      	itt	mi
 80075ea:	232b      	movmi	r3, #43	; 0x2b
 80075ec:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80075f0:	f89a 3000 	ldrb.w	r3, [sl]
 80075f4:	2b2a      	cmp	r3, #42	; 0x2a
 80075f6:	d015      	beq.n	8007624 <_vfiprintf_r+0x13c>
 80075f8:	9a07      	ldr	r2, [sp, #28]
 80075fa:	4654      	mov	r4, sl
 80075fc:	2000      	movs	r0, #0
 80075fe:	f04f 0c0a 	mov.w	ip, #10
 8007602:	4621      	mov	r1, r4
 8007604:	f811 3b01 	ldrb.w	r3, [r1], #1
 8007608:	3b30      	subs	r3, #48	; 0x30
 800760a:	2b09      	cmp	r3, #9
 800760c:	d94e      	bls.n	80076ac <_vfiprintf_r+0x1c4>
 800760e:	b1b0      	cbz	r0, 800763e <_vfiprintf_r+0x156>
 8007610:	9207      	str	r2, [sp, #28]
 8007612:	e014      	b.n	800763e <_vfiprintf_r+0x156>
 8007614:	eba0 0308 	sub.w	r3, r0, r8
 8007618:	fa09 f303 	lsl.w	r3, r9, r3
 800761c:	4313      	orrs	r3, r2
 800761e:	9304      	str	r3, [sp, #16]
 8007620:	46a2      	mov	sl, r4
 8007622:	e7d2      	b.n	80075ca <_vfiprintf_r+0xe2>
 8007624:	9b03      	ldr	r3, [sp, #12]
 8007626:	1d19      	adds	r1, r3, #4
 8007628:	681b      	ldr	r3, [r3, #0]
 800762a:	9103      	str	r1, [sp, #12]
 800762c:	2b00      	cmp	r3, #0
 800762e:	bfbb      	ittet	lt
 8007630:	425b      	neglt	r3, r3
 8007632:	f042 0202 	orrlt.w	r2, r2, #2
 8007636:	9307      	strge	r3, [sp, #28]
 8007638:	9307      	strlt	r3, [sp, #28]
 800763a:	bfb8      	it	lt
 800763c:	9204      	strlt	r2, [sp, #16]
 800763e:	7823      	ldrb	r3, [r4, #0]
 8007640:	2b2e      	cmp	r3, #46	; 0x2e
 8007642:	d10c      	bne.n	800765e <_vfiprintf_r+0x176>
 8007644:	7863      	ldrb	r3, [r4, #1]
 8007646:	2b2a      	cmp	r3, #42	; 0x2a
 8007648:	d135      	bne.n	80076b6 <_vfiprintf_r+0x1ce>
 800764a:	9b03      	ldr	r3, [sp, #12]
 800764c:	1d1a      	adds	r2, r3, #4
 800764e:	681b      	ldr	r3, [r3, #0]
 8007650:	9203      	str	r2, [sp, #12]
 8007652:	2b00      	cmp	r3, #0
 8007654:	bfb8      	it	lt
 8007656:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 800765a:	3402      	adds	r4, #2
 800765c:	9305      	str	r3, [sp, #20]
 800765e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8007744 <_vfiprintf_r+0x25c>
 8007662:	7821      	ldrb	r1, [r4, #0]
 8007664:	2203      	movs	r2, #3
 8007666:	4650      	mov	r0, sl
 8007668:	f7f8 fdda 	bl	8000220 <memchr>
 800766c:	b140      	cbz	r0, 8007680 <_vfiprintf_r+0x198>
 800766e:	2340      	movs	r3, #64	; 0x40
 8007670:	eba0 000a 	sub.w	r0, r0, sl
 8007674:	fa03 f000 	lsl.w	r0, r3, r0
 8007678:	9b04      	ldr	r3, [sp, #16]
 800767a:	4303      	orrs	r3, r0
 800767c:	3401      	adds	r4, #1
 800767e:	9304      	str	r3, [sp, #16]
 8007680:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007684:	482c      	ldr	r0, [pc, #176]	; (8007738 <_vfiprintf_r+0x250>)
 8007686:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800768a:	2206      	movs	r2, #6
 800768c:	f7f8 fdc8 	bl	8000220 <memchr>
 8007690:	2800      	cmp	r0, #0
 8007692:	d03f      	beq.n	8007714 <_vfiprintf_r+0x22c>
 8007694:	4b29      	ldr	r3, [pc, #164]	; (800773c <_vfiprintf_r+0x254>)
 8007696:	bb1b      	cbnz	r3, 80076e0 <_vfiprintf_r+0x1f8>
 8007698:	9b03      	ldr	r3, [sp, #12]
 800769a:	3307      	adds	r3, #7
 800769c:	f023 0307 	bic.w	r3, r3, #7
 80076a0:	3308      	adds	r3, #8
 80076a2:	9303      	str	r3, [sp, #12]
 80076a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80076a6:	443b      	add	r3, r7
 80076a8:	9309      	str	r3, [sp, #36]	; 0x24
 80076aa:	e767      	b.n	800757c <_vfiprintf_r+0x94>
 80076ac:	fb0c 3202 	mla	r2, ip, r2, r3
 80076b0:	460c      	mov	r4, r1
 80076b2:	2001      	movs	r0, #1
 80076b4:	e7a5      	b.n	8007602 <_vfiprintf_r+0x11a>
 80076b6:	2300      	movs	r3, #0
 80076b8:	3401      	adds	r4, #1
 80076ba:	9305      	str	r3, [sp, #20]
 80076bc:	4619      	mov	r1, r3
 80076be:	f04f 0c0a 	mov.w	ip, #10
 80076c2:	4620      	mov	r0, r4
 80076c4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80076c8:	3a30      	subs	r2, #48	; 0x30
 80076ca:	2a09      	cmp	r2, #9
 80076cc:	d903      	bls.n	80076d6 <_vfiprintf_r+0x1ee>
 80076ce:	2b00      	cmp	r3, #0
 80076d0:	d0c5      	beq.n	800765e <_vfiprintf_r+0x176>
 80076d2:	9105      	str	r1, [sp, #20]
 80076d4:	e7c3      	b.n	800765e <_vfiprintf_r+0x176>
 80076d6:	fb0c 2101 	mla	r1, ip, r1, r2
 80076da:	4604      	mov	r4, r0
 80076dc:	2301      	movs	r3, #1
 80076de:	e7f0      	b.n	80076c2 <_vfiprintf_r+0x1da>
 80076e0:	ab03      	add	r3, sp, #12
 80076e2:	9300      	str	r3, [sp, #0]
 80076e4:	462a      	mov	r2, r5
 80076e6:	4b16      	ldr	r3, [pc, #88]	; (8007740 <_vfiprintf_r+0x258>)
 80076e8:	a904      	add	r1, sp, #16
 80076ea:	4630      	mov	r0, r6
 80076ec:	f7fc f83c 	bl	8003768 <_printf_float>
 80076f0:	4607      	mov	r7, r0
 80076f2:	1c78      	adds	r0, r7, #1
 80076f4:	d1d6      	bne.n	80076a4 <_vfiprintf_r+0x1bc>
 80076f6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80076f8:	07d9      	lsls	r1, r3, #31
 80076fa:	d405      	bmi.n	8007708 <_vfiprintf_r+0x220>
 80076fc:	89ab      	ldrh	r3, [r5, #12]
 80076fe:	059a      	lsls	r2, r3, #22
 8007700:	d402      	bmi.n	8007708 <_vfiprintf_r+0x220>
 8007702:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007704:	f000 faa1 	bl	8007c4a <__retarget_lock_release_recursive>
 8007708:	89ab      	ldrh	r3, [r5, #12]
 800770a:	065b      	lsls	r3, r3, #25
 800770c:	f53f af12 	bmi.w	8007534 <_vfiprintf_r+0x4c>
 8007710:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007712:	e711      	b.n	8007538 <_vfiprintf_r+0x50>
 8007714:	ab03      	add	r3, sp, #12
 8007716:	9300      	str	r3, [sp, #0]
 8007718:	462a      	mov	r2, r5
 800771a:	4b09      	ldr	r3, [pc, #36]	; (8007740 <_vfiprintf_r+0x258>)
 800771c:	a904      	add	r1, sp, #16
 800771e:	4630      	mov	r0, r6
 8007720:	f7fc fac6 	bl	8003cb0 <_printf_i>
 8007724:	e7e4      	b.n	80076f0 <_vfiprintf_r+0x208>
 8007726:	bf00      	nop
 8007728:	0800889c 	.word	0x0800889c
 800772c:	080088bc 	.word	0x080088bc
 8007730:	0800887c 	.word	0x0800887c
 8007734:	0800882c 	.word	0x0800882c
 8007738:	08008836 	.word	0x08008836
 800773c:	08003769 	.word	0x08003769
 8007740:	080074c5 	.word	0x080074c5
 8007744:	08008832 	.word	0x08008832

08007748 <__swbuf_r>:
 8007748:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800774a:	460e      	mov	r6, r1
 800774c:	4614      	mov	r4, r2
 800774e:	4605      	mov	r5, r0
 8007750:	b118      	cbz	r0, 800775a <__swbuf_r+0x12>
 8007752:	6983      	ldr	r3, [r0, #24]
 8007754:	b90b      	cbnz	r3, 800775a <__swbuf_r+0x12>
 8007756:	f000 f9d9 	bl	8007b0c <__sinit>
 800775a:	4b21      	ldr	r3, [pc, #132]	; (80077e0 <__swbuf_r+0x98>)
 800775c:	429c      	cmp	r4, r3
 800775e:	d12b      	bne.n	80077b8 <__swbuf_r+0x70>
 8007760:	686c      	ldr	r4, [r5, #4]
 8007762:	69a3      	ldr	r3, [r4, #24]
 8007764:	60a3      	str	r3, [r4, #8]
 8007766:	89a3      	ldrh	r3, [r4, #12]
 8007768:	071a      	lsls	r2, r3, #28
 800776a:	d52f      	bpl.n	80077cc <__swbuf_r+0x84>
 800776c:	6923      	ldr	r3, [r4, #16]
 800776e:	b36b      	cbz	r3, 80077cc <__swbuf_r+0x84>
 8007770:	6923      	ldr	r3, [r4, #16]
 8007772:	6820      	ldr	r0, [r4, #0]
 8007774:	1ac0      	subs	r0, r0, r3
 8007776:	6963      	ldr	r3, [r4, #20]
 8007778:	b2f6      	uxtb	r6, r6
 800777a:	4283      	cmp	r3, r0
 800777c:	4637      	mov	r7, r6
 800777e:	dc04      	bgt.n	800778a <__swbuf_r+0x42>
 8007780:	4621      	mov	r1, r4
 8007782:	4628      	mov	r0, r5
 8007784:	f000 f92e 	bl	80079e4 <_fflush_r>
 8007788:	bb30      	cbnz	r0, 80077d8 <__swbuf_r+0x90>
 800778a:	68a3      	ldr	r3, [r4, #8]
 800778c:	3b01      	subs	r3, #1
 800778e:	60a3      	str	r3, [r4, #8]
 8007790:	6823      	ldr	r3, [r4, #0]
 8007792:	1c5a      	adds	r2, r3, #1
 8007794:	6022      	str	r2, [r4, #0]
 8007796:	701e      	strb	r6, [r3, #0]
 8007798:	6963      	ldr	r3, [r4, #20]
 800779a:	3001      	adds	r0, #1
 800779c:	4283      	cmp	r3, r0
 800779e:	d004      	beq.n	80077aa <__swbuf_r+0x62>
 80077a0:	89a3      	ldrh	r3, [r4, #12]
 80077a2:	07db      	lsls	r3, r3, #31
 80077a4:	d506      	bpl.n	80077b4 <__swbuf_r+0x6c>
 80077a6:	2e0a      	cmp	r6, #10
 80077a8:	d104      	bne.n	80077b4 <__swbuf_r+0x6c>
 80077aa:	4621      	mov	r1, r4
 80077ac:	4628      	mov	r0, r5
 80077ae:	f000 f919 	bl	80079e4 <_fflush_r>
 80077b2:	b988      	cbnz	r0, 80077d8 <__swbuf_r+0x90>
 80077b4:	4638      	mov	r0, r7
 80077b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80077b8:	4b0a      	ldr	r3, [pc, #40]	; (80077e4 <__swbuf_r+0x9c>)
 80077ba:	429c      	cmp	r4, r3
 80077bc:	d101      	bne.n	80077c2 <__swbuf_r+0x7a>
 80077be:	68ac      	ldr	r4, [r5, #8]
 80077c0:	e7cf      	b.n	8007762 <__swbuf_r+0x1a>
 80077c2:	4b09      	ldr	r3, [pc, #36]	; (80077e8 <__swbuf_r+0xa0>)
 80077c4:	429c      	cmp	r4, r3
 80077c6:	bf08      	it	eq
 80077c8:	68ec      	ldreq	r4, [r5, #12]
 80077ca:	e7ca      	b.n	8007762 <__swbuf_r+0x1a>
 80077cc:	4621      	mov	r1, r4
 80077ce:	4628      	mov	r0, r5
 80077d0:	f000 f80c 	bl	80077ec <__swsetup_r>
 80077d4:	2800      	cmp	r0, #0
 80077d6:	d0cb      	beq.n	8007770 <__swbuf_r+0x28>
 80077d8:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 80077dc:	e7ea      	b.n	80077b4 <__swbuf_r+0x6c>
 80077de:	bf00      	nop
 80077e0:	0800889c 	.word	0x0800889c
 80077e4:	080088bc 	.word	0x080088bc
 80077e8:	0800887c 	.word	0x0800887c

080077ec <__swsetup_r>:
 80077ec:	4b32      	ldr	r3, [pc, #200]	; (80078b8 <__swsetup_r+0xcc>)
 80077ee:	b570      	push	{r4, r5, r6, lr}
 80077f0:	681d      	ldr	r5, [r3, #0]
 80077f2:	4606      	mov	r6, r0
 80077f4:	460c      	mov	r4, r1
 80077f6:	b125      	cbz	r5, 8007802 <__swsetup_r+0x16>
 80077f8:	69ab      	ldr	r3, [r5, #24]
 80077fa:	b913      	cbnz	r3, 8007802 <__swsetup_r+0x16>
 80077fc:	4628      	mov	r0, r5
 80077fe:	f000 f985 	bl	8007b0c <__sinit>
 8007802:	4b2e      	ldr	r3, [pc, #184]	; (80078bc <__swsetup_r+0xd0>)
 8007804:	429c      	cmp	r4, r3
 8007806:	d10f      	bne.n	8007828 <__swsetup_r+0x3c>
 8007808:	686c      	ldr	r4, [r5, #4]
 800780a:	89a3      	ldrh	r3, [r4, #12]
 800780c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8007810:	0719      	lsls	r1, r3, #28
 8007812:	d42c      	bmi.n	800786e <__swsetup_r+0x82>
 8007814:	06dd      	lsls	r5, r3, #27
 8007816:	d411      	bmi.n	800783c <__swsetup_r+0x50>
 8007818:	2309      	movs	r3, #9
 800781a:	6033      	str	r3, [r6, #0]
 800781c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8007820:	81a3      	strh	r3, [r4, #12]
 8007822:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8007826:	e03e      	b.n	80078a6 <__swsetup_r+0xba>
 8007828:	4b25      	ldr	r3, [pc, #148]	; (80078c0 <__swsetup_r+0xd4>)
 800782a:	429c      	cmp	r4, r3
 800782c:	d101      	bne.n	8007832 <__swsetup_r+0x46>
 800782e:	68ac      	ldr	r4, [r5, #8]
 8007830:	e7eb      	b.n	800780a <__swsetup_r+0x1e>
 8007832:	4b24      	ldr	r3, [pc, #144]	; (80078c4 <__swsetup_r+0xd8>)
 8007834:	429c      	cmp	r4, r3
 8007836:	bf08      	it	eq
 8007838:	68ec      	ldreq	r4, [r5, #12]
 800783a:	e7e6      	b.n	800780a <__swsetup_r+0x1e>
 800783c:	0758      	lsls	r0, r3, #29
 800783e:	d512      	bpl.n	8007866 <__swsetup_r+0x7a>
 8007840:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8007842:	b141      	cbz	r1, 8007856 <__swsetup_r+0x6a>
 8007844:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8007848:	4299      	cmp	r1, r3
 800784a:	d002      	beq.n	8007852 <__swsetup_r+0x66>
 800784c:	4630      	mov	r0, r6
 800784e:	f7ff fb25 	bl	8006e9c <_free_r>
 8007852:	2300      	movs	r3, #0
 8007854:	6363      	str	r3, [r4, #52]	; 0x34
 8007856:	89a3      	ldrh	r3, [r4, #12]
 8007858:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800785c:	81a3      	strh	r3, [r4, #12]
 800785e:	2300      	movs	r3, #0
 8007860:	6063      	str	r3, [r4, #4]
 8007862:	6923      	ldr	r3, [r4, #16]
 8007864:	6023      	str	r3, [r4, #0]
 8007866:	89a3      	ldrh	r3, [r4, #12]
 8007868:	f043 0308 	orr.w	r3, r3, #8
 800786c:	81a3      	strh	r3, [r4, #12]
 800786e:	6923      	ldr	r3, [r4, #16]
 8007870:	b94b      	cbnz	r3, 8007886 <__swsetup_r+0x9a>
 8007872:	89a3      	ldrh	r3, [r4, #12]
 8007874:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8007878:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800787c:	d003      	beq.n	8007886 <__swsetup_r+0x9a>
 800787e:	4621      	mov	r1, r4
 8007880:	4630      	mov	r0, r6
 8007882:	f000 fa09 	bl	8007c98 <__smakebuf_r>
 8007886:	89a0      	ldrh	r0, [r4, #12]
 8007888:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800788c:	f010 0301 	ands.w	r3, r0, #1
 8007890:	d00a      	beq.n	80078a8 <__swsetup_r+0xbc>
 8007892:	2300      	movs	r3, #0
 8007894:	60a3      	str	r3, [r4, #8]
 8007896:	6963      	ldr	r3, [r4, #20]
 8007898:	425b      	negs	r3, r3
 800789a:	61a3      	str	r3, [r4, #24]
 800789c:	6923      	ldr	r3, [r4, #16]
 800789e:	b943      	cbnz	r3, 80078b2 <__swsetup_r+0xc6>
 80078a0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80078a4:	d1ba      	bne.n	800781c <__swsetup_r+0x30>
 80078a6:	bd70      	pop	{r4, r5, r6, pc}
 80078a8:	0781      	lsls	r1, r0, #30
 80078aa:	bf58      	it	pl
 80078ac:	6963      	ldrpl	r3, [r4, #20]
 80078ae:	60a3      	str	r3, [r4, #8]
 80078b0:	e7f4      	b.n	800789c <__swsetup_r+0xb0>
 80078b2:	2000      	movs	r0, #0
 80078b4:	e7f7      	b.n	80078a6 <__swsetup_r+0xba>
 80078b6:	bf00      	nop
 80078b8:	20000000 	.word	0x20000000
 80078bc:	0800889c 	.word	0x0800889c
 80078c0:	080088bc 	.word	0x080088bc
 80078c4:	0800887c 	.word	0x0800887c

080078c8 <abort>:
 80078c8:	b508      	push	{r3, lr}
 80078ca:	2006      	movs	r0, #6
 80078cc:	f000 fa54 	bl	8007d78 <raise>
 80078d0:	2001      	movs	r0, #1
 80078d2:	f7fa fd63 	bl	800239c <_exit>
	...

080078d8 <__sflush_r>:
 80078d8:	898a      	ldrh	r2, [r1, #12]
 80078da:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80078de:	4605      	mov	r5, r0
 80078e0:	0710      	lsls	r0, r2, #28
 80078e2:	460c      	mov	r4, r1
 80078e4:	d458      	bmi.n	8007998 <__sflush_r+0xc0>
 80078e6:	684b      	ldr	r3, [r1, #4]
 80078e8:	2b00      	cmp	r3, #0
 80078ea:	dc05      	bgt.n	80078f8 <__sflush_r+0x20>
 80078ec:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80078ee:	2b00      	cmp	r3, #0
 80078f0:	dc02      	bgt.n	80078f8 <__sflush_r+0x20>
 80078f2:	2000      	movs	r0, #0
 80078f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80078f8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80078fa:	2e00      	cmp	r6, #0
 80078fc:	d0f9      	beq.n	80078f2 <__sflush_r+0x1a>
 80078fe:	2300      	movs	r3, #0
 8007900:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8007904:	682f      	ldr	r7, [r5, #0]
 8007906:	602b      	str	r3, [r5, #0]
 8007908:	d032      	beq.n	8007970 <__sflush_r+0x98>
 800790a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800790c:	89a3      	ldrh	r3, [r4, #12]
 800790e:	075a      	lsls	r2, r3, #29
 8007910:	d505      	bpl.n	800791e <__sflush_r+0x46>
 8007912:	6863      	ldr	r3, [r4, #4]
 8007914:	1ac0      	subs	r0, r0, r3
 8007916:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007918:	b10b      	cbz	r3, 800791e <__sflush_r+0x46>
 800791a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800791c:	1ac0      	subs	r0, r0, r3
 800791e:	2300      	movs	r3, #0
 8007920:	4602      	mov	r2, r0
 8007922:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8007924:	6a21      	ldr	r1, [r4, #32]
 8007926:	4628      	mov	r0, r5
 8007928:	47b0      	blx	r6
 800792a:	1c43      	adds	r3, r0, #1
 800792c:	89a3      	ldrh	r3, [r4, #12]
 800792e:	d106      	bne.n	800793e <__sflush_r+0x66>
 8007930:	6829      	ldr	r1, [r5, #0]
 8007932:	291d      	cmp	r1, #29
 8007934:	d82c      	bhi.n	8007990 <__sflush_r+0xb8>
 8007936:	4a2a      	ldr	r2, [pc, #168]	; (80079e0 <__sflush_r+0x108>)
 8007938:	40ca      	lsrs	r2, r1
 800793a:	07d6      	lsls	r6, r2, #31
 800793c:	d528      	bpl.n	8007990 <__sflush_r+0xb8>
 800793e:	2200      	movs	r2, #0
 8007940:	6062      	str	r2, [r4, #4]
 8007942:	04d9      	lsls	r1, r3, #19
 8007944:	6922      	ldr	r2, [r4, #16]
 8007946:	6022      	str	r2, [r4, #0]
 8007948:	d504      	bpl.n	8007954 <__sflush_r+0x7c>
 800794a:	1c42      	adds	r2, r0, #1
 800794c:	d101      	bne.n	8007952 <__sflush_r+0x7a>
 800794e:	682b      	ldr	r3, [r5, #0]
 8007950:	b903      	cbnz	r3, 8007954 <__sflush_r+0x7c>
 8007952:	6560      	str	r0, [r4, #84]	; 0x54
 8007954:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8007956:	602f      	str	r7, [r5, #0]
 8007958:	2900      	cmp	r1, #0
 800795a:	d0ca      	beq.n	80078f2 <__sflush_r+0x1a>
 800795c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8007960:	4299      	cmp	r1, r3
 8007962:	d002      	beq.n	800796a <__sflush_r+0x92>
 8007964:	4628      	mov	r0, r5
 8007966:	f7ff fa99 	bl	8006e9c <_free_r>
 800796a:	2000      	movs	r0, #0
 800796c:	6360      	str	r0, [r4, #52]	; 0x34
 800796e:	e7c1      	b.n	80078f4 <__sflush_r+0x1c>
 8007970:	6a21      	ldr	r1, [r4, #32]
 8007972:	2301      	movs	r3, #1
 8007974:	4628      	mov	r0, r5
 8007976:	47b0      	blx	r6
 8007978:	1c41      	adds	r1, r0, #1
 800797a:	d1c7      	bne.n	800790c <__sflush_r+0x34>
 800797c:	682b      	ldr	r3, [r5, #0]
 800797e:	2b00      	cmp	r3, #0
 8007980:	d0c4      	beq.n	800790c <__sflush_r+0x34>
 8007982:	2b1d      	cmp	r3, #29
 8007984:	d001      	beq.n	800798a <__sflush_r+0xb2>
 8007986:	2b16      	cmp	r3, #22
 8007988:	d101      	bne.n	800798e <__sflush_r+0xb6>
 800798a:	602f      	str	r7, [r5, #0]
 800798c:	e7b1      	b.n	80078f2 <__sflush_r+0x1a>
 800798e:	89a3      	ldrh	r3, [r4, #12]
 8007990:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007994:	81a3      	strh	r3, [r4, #12]
 8007996:	e7ad      	b.n	80078f4 <__sflush_r+0x1c>
 8007998:	690f      	ldr	r7, [r1, #16]
 800799a:	2f00      	cmp	r7, #0
 800799c:	d0a9      	beq.n	80078f2 <__sflush_r+0x1a>
 800799e:	0793      	lsls	r3, r2, #30
 80079a0:	680e      	ldr	r6, [r1, #0]
 80079a2:	bf08      	it	eq
 80079a4:	694b      	ldreq	r3, [r1, #20]
 80079a6:	600f      	str	r7, [r1, #0]
 80079a8:	bf18      	it	ne
 80079aa:	2300      	movne	r3, #0
 80079ac:	eba6 0807 	sub.w	r8, r6, r7
 80079b0:	608b      	str	r3, [r1, #8]
 80079b2:	f1b8 0f00 	cmp.w	r8, #0
 80079b6:	dd9c      	ble.n	80078f2 <__sflush_r+0x1a>
 80079b8:	6a21      	ldr	r1, [r4, #32]
 80079ba:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80079bc:	4643      	mov	r3, r8
 80079be:	463a      	mov	r2, r7
 80079c0:	4628      	mov	r0, r5
 80079c2:	47b0      	blx	r6
 80079c4:	2800      	cmp	r0, #0
 80079c6:	dc06      	bgt.n	80079d6 <__sflush_r+0xfe>
 80079c8:	89a3      	ldrh	r3, [r4, #12]
 80079ca:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80079ce:	81a3      	strh	r3, [r4, #12]
 80079d0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80079d4:	e78e      	b.n	80078f4 <__sflush_r+0x1c>
 80079d6:	4407      	add	r7, r0
 80079d8:	eba8 0800 	sub.w	r8, r8, r0
 80079dc:	e7e9      	b.n	80079b2 <__sflush_r+0xda>
 80079de:	bf00      	nop
 80079e0:	20400001 	.word	0x20400001

080079e4 <_fflush_r>:
 80079e4:	b538      	push	{r3, r4, r5, lr}
 80079e6:	690b      	ldr	r3, [r1, #16]
 80079e8:	4605      	mov	r5, r0
 80079ea:	460c      	mov	r4, r1
 80079ec:	b913      	cbnz	r3, 80079f4 <_fflush_r+0x10>
 80079ee:	2500      	movs	r5, #0
 80079f0:	4628      	mov	r0, r5
 80079f2:	bd38      	pop	{r3, r4, r5, pc}
 80079f4:	b118      	cbz	r0, 80079fe <_fflush_r+0x1a>
 80079f6:	6983      	ldr	r3, [r0, #24]
 80079f8:	b90b      	cbnz	r3, 80079fe <_fflush_r+0x1a>
 80079fa:	f000 f887 	bl	8007b0c <__sinit>
 80079fe:	4b14      	ldr	r3, [pc, #80]	; (8007a50 <_fflush_r+0x6c>)
 8007a00:	429c      	cmp	r4, r3
 8007a02:	d11b      	bne.n	8007a3c <_fflush_r+0x58>
 8007a04:	686c      	ldr	r4, [r5, #4]
 8007a06:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007a0a:	2b00      	cmp	r3, #0
 8007a0c:	d0ef      	beq.n	80079ee <_fflush_r+0xa>
 8007a0e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8007a10:	07d0      	lsls	r0, r2, #31
 8007a12:	d404      	bmi.n	8007a1e <_fflush_r+0x3a>
 8007a14:	0599      	lsls	r1, r3, #22
 8007a16:	d402      	bmi.n	8007a1e <_fflush_r+0x3a>
 8007a18:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8007a1a:	f000 f915 	bl	8007c48 <__retarget_lock_acquire_recursive>
 8007a1e:	4628      	mov	r0, r5
 8007a20:	4621      	mov	r1, r4
 8007a22:	f7ff ff59 	bl	80078d8 <__sflush_r>
 8007a26:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8007a28:	07da      	lsls	r2, r3, #31
 8007a2a:	4605      	mov	r5, r0
 8007a2c:	d4e0      	bmi.n	80079f0 <_fflush_r+0xc>
 8007a2e:	89a3      	ldrh	r3, [r4, #12]
 8007a30:	059b      	lsls	r3, r3, #22
 8007a32:	d4dd      	bmi.n	80079f0 <_fflush_r+0xc>
 8007a34:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8007a36:	f000 f908 	bl	8007c4a <__retarget_lock_release_recursive>
 8007a3a:	e7d9      	b.n	80079f0 <_fflush_r+0xc>
 8007a3c:	4b05      	ldr	r3, [pc, #20]	; (8007a54 <_fflush_r+0x70>)
 8007a3e:	429c      	cmp	r4, r3
 8007a40:	d101      	bne.n	8007a46 <_fflush_r+0x62>
 8007a42:	68ac      	ldr	r4, [r5, #8]
 8007a44:	e7df      	b.n	8007a06 <_fflush_r+0x22>
 8007a46:	4b04      	ldr	r3, [pc, #16]	; (8007a58 <_fflush_r+0x74>)
 8007a48:	429c      	cmp	r4, r3
 8007a4a:	bf08      	it	eq
 8007a4c:	68ec      	ldreq	r4, [r5, #12]
 8007a4e:	e7da      	b.n	8007a06 <_fflush_r+0x22>
 8007a50:	0800889c 	.word	0x0800889c
 8007a54:	080088bc 	.word	0x080088bc
 8007a58:	0800887c 	.word	0x0800887c

08007a5c <std>:
 8007a5c:	2300      	movs	r3, #0
 8007a5e:	b510      	push	{r4, lr}
 8007a60:	4604      	mov	r4, r0
 8007a62:	e9c0 3300 	strd	r3, r3, [r0]
 8007a66:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8007a6a:	6083      	str	r3, [r0, #8]
 8007a6c:	8181      	strh	r1, [r0, #12]
 8007a6e:	6643      	str	r3, [r0, #100]	; 0x64
 8007a70:	81c2      	strh	r2, [r0, #14]
 8007a72:	6183      	str	r3, [r0, #24]
 8007a74:	4619      	mov	r1, r3
 8007a76:	2208      	movs	r2, #8
 8007a78:	305c      	adds	r0, #92	; 0x5c
 8007a7a:	f7fb fdcd 	bl	8003618 <memset>
 8007a7e:	4b05      	ldr	r3, [pc, #20]	; (8007a94 <std+0x38>)
 8007a80:	6263      	str	r3, [r4, #36]	; 0x24
 8007a82:	4b05      	ldr	r3, [pc, #20]	; (8007a98 <std+0x3c>)
 8007a84:	62a3      	str	r3, [r4, #40]	; 0x28
 8007a86:	4b05      	ldr	r3, [pc, #20]	; (8007a9c <std+0x40>)
 8007a88:	62e3      	str	r3, [r4, #44]	; 0x2c
 8007a8a:	4b05      	ldr	r3, [pc, #20]	; (8007aa0 <std+0x44>)
 8007a8c:	6224      	str	r4, [r4, #32]
 8007a8e:	6323      	str	r3, [r4, #48]	; 0x30
 8007a90:	bd10      	pop	{r4, pc}
 8007a92:	bf00      	nop
 8007a94:	08007db1 	.word	0x08007db1
 8007a98:	08007dd3 	.word	0x08007dd3
 8007a9c:	08007e0b 	.word	0x08007e0b
 8007aa0:	08007e2f 	.word	0x08007e2f

08007aa4 <_cleanup_r>:
 8007aa4:	4901      	ldr	r1, [pc, #4]	; (8007aac <_cleanup_r+0x8>)
 8007aa6:	f000 b8af 	b.w	8007c08 <_fwalk_reent>
 8007aaa:	bf00      	nop
 8007aac:	080079e5 	.word	0x080079e5

08007ab0 <__sfmoreglue>:
 8007ab0:	b570      	push	{r4, r5, r6, lr}
 8007ab2:	2268      	movs	r2, #104	; 0x68
 8007ab4:	1e4d      	subs	r5, r1, #1
 8007ab6:	4355      	muls	r5, r2
 8007ab8:	460e      	mov	r6, r1
 8007aba:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8007abe:	f7ff fa59 	bl	8006f74 <_malloc_r>
 8007ac2:	4604      	mov	r4, r0
 8007ac4:	b140      	cbz	r0, 8007ad8 <__sfmoreglue+0x28>
 8007ac6:	2100      	movs	r1, #0
 8007ac8:	e9c0 1600 	strd	r1, r6, [r0]
 8007acc:	300c      	adds	r0, #12
 8007ace:	60a0      	str	r0, [r4, #8]
 8007ad0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8007ad4:	f7fb fda0 	bl	8003618 <memset>
 8007ad8:	4620      	mov	r0, r4
 8007ada:	bd70      	pop	{r4, r5, r6, pc}

08007adc <__sfp_lock_acquire>:
 8007adc:	4801      	ldr	r0, [pc, #4]	; (8007ae4 <__sfp_lock_acquire+0x8>)
 8007ade:	f000 b8b3 	b.w	8007c48 <__retarget_lock_acquire_recursive>
 8007ae2:	bf00      	nop
 8007ae4:	200002a5 	.word	0x200002a5

08007ae8 <__sfp_lock_release>:
 8007ae8:	4801      	ldr	r0, [pc, #4]	; (8007af0 <__sfp_lock_release+0x8>)
 8007aea:	f000 b8ae 	b.w	8007c4a <__retarget_lock_release_recursive>
 8007aee:	bf00      	nop
 8007af0:	200002a5 	.word	0x200002a5

08007af4 <__sinit_lock_acquire>:
 8007af4:	4801      	ldr	r0, [pc, #4]	; (8007afc <__sinit_lock_acquire+0x8>)
 8007af6:	f000 b8a7 	b.w	8007c48 <__retarget_lock_acquire_recursive>
 8007afa:	bf00      	nop
 8007afc:	200002a6 	.word	0x200002a6

08007b00 <__sinit_lock_release>:
 8007b00:	4801      	ldr	r0, [pc, #4]	; (8007b08 <__sinit_lock_release+0x8>)
 8007b02:	f000 b8a2 	b.w	8007c4a <__retarget_lock_release_recursive>
 8007b06:	bf00      	nop
 8007b08:	200002a6 	.word	0x200002a6

08007b0c <__sinit>:
 8007b0c:	b510      	push	{r4, lr}
 8007b0e:	4604      	mov	r4, r0
 8007b10:	f7ff fff0 	bl	8007af4 <__sinit_lock_acquire>
 8007b14:	69a3      	ldr	r3, [r4, #24]
 8007b16:	b11b      	cbz	r3, 8007b20 <__sinit+0x14>
 8007b18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007b1c:	f7ff bff0 	b.w	8007b00 <__sinit_lock_release>
 8007b20:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8007b24:	6523      	str	r3, [r4, #80]	; 0x50
 8007b26:	4b13      	ldr	r3, [pc, #76]	; (8007b74 <__sinit+0x68>)
 8007b28:	4a13      	ldr	r2, [pc, #76]	; (8007b78 <__sinit+0x6c>)
 8007b2a:	681b      	ldr	r3, [r3, #0]
 8007b2c:	62a2      	str	r2, [r4, #40]	; 0x28
 8007b2e:	42a3      	cmp	r3, r4
 8007b30:	bf04      	itt	eq
 8007b32:	2301      	moveq	r3, #1
 8007b34:	61a3      	streq	r3, [r4, #24]
 8007b36:	4620      	mov	r0, r4
 8007b38:	f000 f820 	bl	8007b7c <__sfp>
 8007b3c:	6060      	str	r0, [r4, #4]
 8007b3e:	4620      	mov	r0, r4
 8007b40:	f000 f81c 	bl	8007b7c <__sfp>
 8007b44:	60a0      	str	r0, [r4, #8]
 8007b46:	4620      	mov	r0, r4
 8007b48:	f000 f818 	bl	8007b7c <__sfp>
 8007b4c:	2200      	movs	r2, #0
 8007b4e:	60e0      	str	r0, [r4, #12]
 8007b50:	2104      	movs	r1, #4
 8007b52:	6860      	ldr	r0, [r4, #4]
 8007b54:	f7ff ff82 	bl	8007a5c <std>
 8007b58:	68a0      	ldr	r0, [r4, #8]
 8007b5a:	2201      	movs	r2, #1
 8007b5c:	2109      	movs	r1, #9
 8007b5e:	f7ff ff7d 	bl	8007a5c <std>
 8007b62:	68e0      	ldr	r0, [r4, #12]
 8007b64:	2202      	movs	r2, #2
 8007b66:	2112      	movs	r1, #18
 8007b68:	f7ff ff78 	bl	8007a5c <std>
 8007b6c:	2301      	movs	r3, #1
 8007b6e:	61a3      	str	r3, [r4, #24]
 8007b70:	e7d2      	b.n	8007b18 <__sinit+0xc>
 8007b72:	bf00      	nop
 8007b74:	08008438 	.word	0x08008438
 8007b78:	08007aa5 	.word	0x08007aa5

08007b7c <__sfp>:
 8007b7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007b7e:	4607      	mov	r7, r0
 8007b80:	f7ff ffac 	bl	8007adc <__sfp_lock_acquire>
 8007b84:	4b1e      	ldr	r3, [pc, #120]	; (8007c00 <__sfp+0x84>)
 8007b86:	681e      	ldr	r6, [r3, #0]
 8007b88:	69b3      	ldr	r3, [r6, #24]
 8007b8a:	b913      	cbnz	r3, 8007b92 <__sfp+0x16>
 8007b8c:	4630      	mov	r0, r6
 8007b8e:	f7ff ffbd 	bl	8007b0c <__sinit>
 8007b92:	3648      	adds	r6, #72	; 0x48
 8007b94:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8007b98:	3b01      	subs	r3, #1
 8007b9a:	d503      	bpl.n	8007ba4 <__sfp+0x28>
 8007b9c:	6833      	ldr	r3, [r6, #0]
 8007b9e:	b30b      	cbz	r3, 8007be4 <__sfp+0x68>
 8007ba0:	6836      	ldr	r6, [r6, #0]
 8007ba2:	e7f7      	b.n	8007b94 <__sfp+0x18>
 8007ba4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8007ba8:	b9d5      	cbnz	r5, 8007be0 <__sfp+0x64>
 8007baa:	4b16      	ldr	r3, [pc, #88]	; (8007c04 <__sfp+0x88>)
 8007bac:	60e3      	str	r3, [r4, #12]
 8007bae:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8007bb2:	6665      	str	r5, [r4, #100]	; 0x64
 8007bb4:	f000 f847 	bl	8007c46 <__retarget_lock_init_recursive>
 8007bb8:	f7ff ff96 	bl	8007ae8 <__sfp_lock_release>
 8007bbc:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8007bc0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8007bc4:	6025      	str	r5, [r4, #0]
 8007bc6:	61a5      	str	r5, [r4, #24]
 8007bc8:	2208      	movs	r2, #8
 8007bca:	4629      	mov	r1, r5
 8007bcc:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8007bd0:	f7fb fd22 	bl	8003618 <memset>
 8007bd4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8007bd8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8007bdc:	4620      	mov	r0, r4
 8007bde:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007be0:	3468      	adds	r4, #104	; 0x68
 8007be2:	e7d9      	b.n	8007b98 <__sfp+0x1c>
 8007be4:	2104      	movs	r1, #4
 8007be6:	4638      	mov	r0, r7
 8007be8:	f7ff ff62 	bl	8007ab0 <__sfmoreglue>
 8007bec:	4604      	mov	r4, r0
 8007bee:	6030      	str	r0, [r6, #0]
 8007bf0:	2800      	cmp	r0, #0
 8007bf2:	d1d5      	bne.n	8007ba0 <__sfp+0x24>
 8007bf4:	f7ff ff78 	bl	8007ae8 <__sfp_lock_release>
 8007bf8:	230c      	movs	r3, #12
 8007bfa:	603b      	str	r3, [r7, #0]
 8007bfc:	e7ee      	b.n	8007bdc <__sfp+0x60>
 8007bfe:	bf00      	nop
 8007c00:	08008438 	.word	0x08008438
 8007c04:	ffff0001 	.word	0xffff0001

08007c08 <_fwalk_reent>:
 8007c08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007c0c:	4606      	mov	r6, r0
 8007c0e:	4688      	mov	r8, r1
 8007c10:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8007c14:	2700      	movs	r7, #0
 8007c16:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8007c1a:	f1b9 0901 	subs.w	r9, r9, #1
 8007c1e:	d505      	bpl.n	8007c2c <_fwalk_reent+0x24>
 8007c20:	6824      	ldr	r4, [r4, #0]
 8007c22:	2c00      	cmp	r4, #0
 8007c24:	d1f7      	bne.n	8007c16 <_fwalk_reent+0xe>
 8007c26:	4638      	mov	r0, r7
 8007c28:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007c2c:	89ab      	ldrh	r3, [r5, #12]
 8007c2e:	2b01      	cmp	r3, #1
 8007c30:	d907      	bls.n	8007c42 <_fwalk_reent+0x3a>
 8007c32:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8007c36:	3301      	adds	r3, #1
 8007c38:	d003      	beq.n	8007c42 <_fwalk_reent+0x3a>
 8007c3a:	4629      	mov	r1, r5
 8007c3c:	4630      	mov	r0, r6
 8007c3e:	47c0      	blx	r8
 8007c40:	4307      	orrs	r7, r0
 8007c42:	3568      	adds	r5, #104	; 0x68
 8007c44:	e7e9      	b.n	8007c1a <_fwalk_reent+0x12>

08007c46 <__retarget_lock_init_recursive>:
 8007c46:	4770      	bx	lr

08007c48 <__retarget_lock_acquire_recursive>:
 8007c48:	4770      	bx	lr

08007c4a <__retarget_lock_release_recursive>:
 8007c4a:	4770      	bx	lr

08007c4c <__swhatbuf_r>:
 8007c4c:	b570      	push	{r4, r5, r6, lr}
 8007c4e:	460e      	mov	r6, r1
 8007c50:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007c54:	2900      	cmp	r1, #0
 8007c56:	b096      	sub	sp, #88	; 0x58
 8007c58:	4614      	mov	r4, r2
 8007c5a:	461d      	mov	r5, r3
 8007c5c:	da08      	bge.n	8007c70 <__swhatbuf_r+0x24>
 8007c5e:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8007c62:	2200      	movs	r2, #0
 8007c64:	602a      	str	r2, [r5, #0]
 8007c66:	061a      	lsls	r2, r3, #24
 8007c68:	d410      	bmi.n	8007c8c <__swhatbuf_r+0x40>
 8007c6a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8007c6e:	e00e      	b.n	8007c8e <__swhatbuf_r+0x42>
 8007c70:	466a      	mov	r2, sp
 8007c72:	f000 f903 	bl	8007e7c <_fstat_r>
 8007c76:	2800      	cmp	r0, #0
 8007c78:	dbf1      	blt.n	8007c5e <__swhatbuf_r+0x12>
 8007c7a:	9a01      	ldr	r2, [sp, #4]
 8007c7c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8007c80:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8007c84:	425a      	negs	r2, r3
 8007c86:	415a      	adcs	r2, r3
 8007c88:	602a      	str	r2, [r5, #0]
 8007c8a:	e7ee      	b.n	8007c6a <__swhatbuf_r+0x1e>
 8007c8c:	2340      	movs	r3, #64	; 0x40
 8007c8e:	2000      	movs	r0, #0
 8007c90:	6023      	str	r3, [r4, #0]
 8007c92:	b016      	add	sp, #88	; 0x58
 8007c94:	bd70      	pop	{r4, r5, r6, pc}
	...

08007c98 <__smakebuf_r>:
 8007c98:	898b      	ldrh	r3, [r1, #12]
 8007c9a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007c9c:	079d      	lsls	r5, r3, #30
 8007c9e:	4606      	mov	r6, r0
 8007ca0:	460c      	mov	r4, r1
 8007ca2:	d507      	bpl.n	8007cb4 <__smakebuf_r+0x1c>
 8007ca4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8007ca8:	6023      	str	r3, [r4, #0]
 8007caa:	6123      	str	r3, [r4, #16]
 8007cac:	2301      	movs	r3, #1
 8007cae:	6163      	str	r3, [r4, #20]
 8007cb0:	b002      	add	sp, #8
 8007cb2:	bd70      	pop	{r4, r5, r6, pc}
 8007cb4:	ab01      	add	r3, sp, #4
 8007cb6:	466a      	mov	r2, sp
 8007cb8:	f7ff ffc8 	bl	8007c4c <__swhatbuf_r>
 8007cbc:	9900      	ldr	r1, [sp, #0]
 8007cbe:	4605      	mov	r5, r0
 8007cc0:	4630      	mov	r0, r6
 8007cc2:	f7ff f957 	bl	8006f74 <_malloc_r>
 8007cc6:	b948      	cbnz	r0, 8007cdc <__smakebuf_r+0x44>
 8007cc8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007ccc:	059a      	lsls	r2, r3, #22
 8007cce:	d4ef      	bmi.n	8007cb0 <__smakebuf_r+0x18>
 8007cd0:	f023 0303 	bic.w	r3, r3, #3
 8007cd4:	f043 0302 	orr.w	r3, r3, #2
 8007cd8:	81a3      	strh	r3, [r4, #12]
 8007cda:	e7e3      	b.n	8007ca4 <__smakebuf_r+0xc>
 8007cdc:	4b0d      	ldr	r3, [pc, #52]	; (8007d14 <__smakebuf_r+0x7c>)
 8007cde:	62b3      	str	r3, [r6, #40]	; 0x28
 8007ce0:	89a3      	ldrh	r3, [r4, #12]
 8007ce2:	6020      	str	r0, [r4, #0]
 8007ce4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007ce8:	81a3      	strh	r3, [r4, #12]
 8007cea:	9b00      	ldr	r3, [sp, #0]
 8007cec:	6163      	str	r3, [r4, #20]
 8007cee:	9b01      	ldr	r3, [sp, #4]
 8007cf0:	6120      	str	r0, [r4, #16]
 8007cf2:	b15b      	cbz	r3, 8007d0c <__smakebuf_r+0x74>
 8007cf4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8007cf8:	4630      	mov	r0, r6
 8007cfa:	f000 f8d1 	bl	8007ea0 <_isatty_r>
 8007cfe:	b128      	cbz	r0, 8007d0c <__smakebuf_r+0x74>
 8007d00:	89a3      	ldrh	r3, [r4, #12]
 8007d02:	f023 0303 	bic.w	r3, r3, #3
 8007d06:	f043 0301 	orr.w	r3, r3, #1
 8007d0a:	81a3      	strh	r3, [r4, #12]
 8007d0c:	89a0      	ldrh	r0, [r4, #12]
 8007d0e:	4305      	orrs	r5, r0
 8007d10:	81a5      	strh	r5, [r4, #12]
 8007d12:	e7cd      	b.n	8007cb0 <__smakebuf_r+0x18>
 8007d14:	08007aa5 	.word	0x08007aa5

08007d18 <_malloc_usable_size_r>:
 8007d18:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007d1c:	1f18      	subs	r0, r3, #4
 8007d1e:	2b00      	cmp	r3, #0
 8007d20:	bfbc      	itt	lt
 8007d22:	580b      	ldrlt	r3, [r1, r0]
 8007d24:	18c0      	addlt	r0, r0, r3
 8007d26:	4770      	bx	lr

08007d28 <_raise_r>:
 8007d28:	291f      	cmp	r1, #31
 8007d2a:	b538      	push	{r3, r4, r5, lr}
 8007d2c:	4604      	mov	r4, r0
 8007d2e:	460d      	mov	r5, r1
 8007d30:	d904      	bls.n	8007d3c <_raise_r+0x14>
 8007d32:	2316      	movs	r3, #22
 8007d34:	6003      	str	r3, [r0, #0]
 8007d36:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8007d3a:	bd38      	pop	{r3, r4, r5, pc}
 8007d3c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8007d3e:	b112      	cbz	r2, 8007d46 <_raise_r+0x1e>
 8007d40:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8007d44:	b94b      	cbnz	r3, 8007d5a <_raise_r+0x32>
 8007d46:	4620      	mov	r0, r4
 8007d48:	f000 f830 	bl	8007dac <_getpid_r>
 8007d4c:	462a      	mov	r2, r5
 8007d4e:	4601      	mov	r1, r0
 8007d50:	4620      	mov	r0, r4
 8007d52:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007d56:	f000 b817 	b.w	8007d88 <_kill_r>
 8007d5a:	2b01      	cmp	r3, #1
 8007d5c:	d00a      	beq.n	8007d74 <_raise_r+0x4c>
 8007d5e:	1c59      	adds	r1, r3, #1
 8007d60:	d103      	bne.n	8007d6a <_raise_r+0x42>
 8007d62:	2316      	movs	r3, #22
 8007d64:	6003      	str	r3, [r0, #0]
 8007d66:	2001      	movs	r0, #1
 8007d68:	e7e7      	b.n	8007d3a <_raise_r+0x12>
 8007d6a:	2400      	movs	r4, #0
 8007d6c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8007d70:	4628      	mov	r0, r5
 8007d72:	4798      	blx	r3
 8007d74:	2000      	movs	r0, #0
 8007d76:	e7e0      	b.n	8007d3a <_raise_r+0x12>

08007d78 <raise>:
 8007d78:	4b02      	ldr	r3, [pc, #8]	; (8007d84 <raise+0xc>)
 8007d7a:	4601      	mov	r1, r0
 8007d7c:	6818      	ldr	r0, [r3, #0]
 8007d7e:	f7ff bfd3 	b.w	8007d28 <_raise_r>
 8007d82:	bf00      	nop
 8007d84:	20000000 	.word	0x20000000

08007d88 <_kill_r>:
 8007d88:	b538      	push	{r3, r4, r5, lr}
 8007d8a:	4d07      	ldr	r5, [pc, #28]	; (8007da8 <_kill_r+0x20>)
 8007d8c:	2300      	movs	r3, #0
 8007d8e:	4604      	mov	r4, r0
 8007d90:	4608      	mov	r0, r1
 8007d92:	4611      	mov	r1, r2
 8007d94:	602b      	str	r3, [r5, #0]
 8007d96:	f7fa faf1 	bl	800237c <_kill>
 8007d9a:	1c43      	adds	r3, r0, #1
 8007d9c:	d102      	bne.n	8007da4 <_kill_r+0x1c>
 8007d9e:	682b      	ldr	r3, [r5, #0]
 8007da0:	b103      	cbz	r3, 8007da4 <_kill_r+0x1c>
 8007da2:	6023      	str	r3, [r4, #0]
 8007da4:	bd38      	pop	{r3, r4, r5, pc}
 8007da6:	bf00      	nop
 8007da8:	200002a0 	.word	0x200002a0

08007dac <_getpid_r>:
 8007dac:	f7fa bade 	b.w	800236c <_getpid>

08007db0 <__sread>:
 8007db0:	b510      	push	{r4, lr}
 8007db2:	460c      	mov	r4, r1
 8007db4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007db8:	f000 f894 	bl	8007ee4 <_read_r>
 8007dbc:	2800      	cmp	r0, #0
 8007dbe:	bfab      	itete	ge
 8007dc0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8007dc2:	89a3      	ldrhlt	r3, [r4, #12]
 8007dc4:	181b      	addge	r3, r3, r0
 8007dc6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8007dca:	bfac      	ite	ge
 8007dcc:	6563      	strge	r3, [r4, #84]	; 0x54
 8007dce:	81a3      	strhlt	r3, [r4, #12]
 8007dd0:	bd10      	pop	{r4, pc}

08007dd2 <__swrite>:
 8007dd2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007dd6:	461f      	mov	r7, r3
 8007dd8:	898b      	ldrh	r3, [r1, #12]
 8007dda:	05db      	lsls	r3, r3, #23
 8007ddc:	4605      	mov	r5, r0
 8007dde:	460c      	mov	r4, r1
 8007de0:	4616      	mov	r6, r2
 8007de2:	d505      	bpl.n	8007df0 <__swrite+0x1e>
 8007de4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007de8:	2302      	movs	r3, #2
 8007dea:	2200      	movs	r2, #0
 8007dec:	f000 f868 	bl	8007ec0 <_lseek_r>
 8007df0:	89a3      	ldrh	r3, [r4, #12]
 8007df2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8007df6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8007dfa:	81a3      	strh	r3, [r4, #12]
 8007dfc:	4632      	mov	r2, r6
 8007dfe:	463b      	mov	r3, r7
 8007e00:	4628      	mov	r0, r5
 8007e02:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007e06:	f000 b817 	b.w	8007e38 <_write_r>

08007e0a <__sseek>:
 8007e0a:	b510      	push	{r4, lr}
 8007e0c:	460c      	mov	r4, r1
 8007e0e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007e12:	f000 f855 	bl	8007ec0 <_lseek_r>
 8007e16:	1c43      	adds	r3, r0, #1
 8007e18:	89a3      	ldrh	r3, [r4, #12]
 8007e1a:	bf15      	itete	ne
 8007e1c:	6560      	strne	r0, [r4, #84]	; 0x54
 8007e1e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8007e22:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8007e26:	81a3      	strheq	r3, [r4, #12]
 8007e28:	bf18      	it	ne
 8007e2a:	81a3      	strhne	r3, [r4, #12]
 8007e2c:	bd10      	pop	{r4, pc}

08007e2e <__sclose>:
 8007e2e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007e32:	f000 b813 	b.w	8007e5c <_close_r>
	...

08007e38 <_write_r>:
 8007e38:	b538      	push	{r3, r4, r5, lr}
 8007e3a:	4d07      	ldr	r5, [pc, #28]	; (8007e58 <_write_r+0x20>)
 8007e3c:	4604      	mov	r4, r0
 8007e3e:	4608      	mov	r0, r1
 8007e40:	4611      	mov	r1, r2
 8007e42:	2200      	movs	r2, #0
 8007e44:	602a      	str	r2, [r5, #0]
 8007e46:	461a      	mov	r2, r3
 8007e48:	f7fa facf 	bl	80023ea <_write>
 8007e4c:	1c43      	adds	r3, r0, #1
 8007e4e:	d102      	bne.n	8007e56 <_write_r+0x1e>
 8007e50:	682b      	ldr	r3, [r5, #0]
 8007e52:	b103      	cbz	r3, 8007e56 <_write_r+0x1e>
 8007e54:	6023      	str	r3, [r4, #0]
 8007e56:	bd38      	pop	{r3, r4, r5, pc}
 8007e58:	200002a0 	.word	0x200002a0

08007e5c <_close_r>:
 8007e5c:	b538      	push	{r3, r4, r5, lr}
 8007e5e:	4d06      	ldr	r5, [pc, #24]	; (8007e78 <_close_r+0x1c>)
 8007e60:	2300      	movs	r3, #0
 8007e62:	4604      	mov	r4, r0
 8007e64:	4608      	mov	r0, r1
 8007e66:	602b      	str	r3, [r5, #0]
 8007e68:	f7fa fadb 	bl	8002422 <_close>
 8007e6c:	1c43      	adds	r3, r0, #1
 8007e6e:	d102      	bne.n	8007e76 <_close_r+0x1a>
 8007e70:	682b      	ldr	r3, [r5, #0]
 8007e72:	b103      	cbz	r3, 8007e76 <_close_r+0x1a>
 8007e74:	6023      	str	r3, [r4, #0]
 8007e76:	bd38      	pop	{r3, r4, r5, pc}
 8007e78:	200002a0 	.word	0x200002a0

08007e7c <_fstat_r>:
 8007e7c:	b538      	push	{r3, r4, r5, lr}
 8007e7e:	4d07      	ldr	r5, [pc, #28]	; (8007e9c <_fstat_r+0x20>)
 8007e80:	2300      	movs	r3, #0
 8007e82:	4604      	mov	r4, r0
 8007e84:	4608      	mov	r0, r1
 8007e86:	4611      	mov	r1, r2
 8007e88:	602b      	str	r3, [r5, #0]
 8007e8a:	f7fa fad6 	bl	800243a <_fstat>
 8007e8e:	1c43      	adds	r3, r0, #1
 8007e90:	d102      	bne.n	8007e98 <_fstat_r+0x1c>
 8007e92:	682b      	ldr	r3, [r5, #0]
 8007e94:	b103      	cbz	r3, 8007e98 <_fstat_r+0x1c>
 8007e96:	6023      	str	r3, [r4, #0]
 8007e98:	bd38      	pop	{r3, r4, r5, pc}
 8007e9a:	bf00      	nop
 8007e9c:	200002a0 	.word	0x200002a0

08007ea0 <_isatty_r>:
 8007ea0:	b538      	push	{r3, r4, r5, lr}
 8007ea2:	4d06      	ldr	r5, [pc, #24]	; (8007ebc <_isatty_r+0x1c>)
 8007ea4:	2300      	movs	r3, #0
 8007ea6:	4604      	mov	r4, r0
 8007ea8:	4608      	mov	r0, r1
 8007eaa:	602b      	str	r3, [r5, #0]
 8007eac:	f7fa fad5 	bl	800245a <_isatty>
 8007eb0:	1c43      	adds	r3, r0, #1
 8007eb2:	d102      	bne.n	8007eba <_isatty_r+0x1a>
 8007eb4:	682b      	ldr	r3, [r5, #0]
 8007eb6:	b103      	cbz	r3, 8007eba <_isatty_r+0x1a>
 8007eb8:	6023      	str	r3, [r4, #0]
 8007eba:	bd38      	pop	{r3, r4, r5, pc}
 8007ebc:	200002a0 	.word	0x200002a0

08007ec0 <_lseek_r>:
 8007ec0:	b538      	push	{r3, r4, r5, lr}
 8007ec2:	4d07      	ldr	r5, [pc, #28]	; (8007ee0 <_lseek_r+0x20>)
 8007ec4:	4604      	mov	r4, r0
 8007ec6:	4608      	mov	r0, r1
 8007ec8:	4611      	mov	r1, r2
 8007eca:	2200      	movs	r2, #0
 8007ecc:	602a      	str	r2, [r5, #0]
 8007ece:	461a      	mov	r2, r3
 8007ed0:	f7fa face 	bl	8002470 <_lseek>
 8007ed4:	1c43      	adds	r3, r0, #1
 8007ed6:	d102      	bne.n	8007ede <_lseek_r+0x1e>
 8007ed8:	682b      	ldr	r3, [r5, #0]
 8007eda:	b103      	cbz	r3, 8007ede <_lseek_r+0x1e>
 8007edc:	6023      	str	r3, [r4, #0]
 8007ede:	bd38      	pop	{r3, r4, r5, pc}
 8007ee0:	200002a0 	.word	0x200002a0

08007ee4 <_read_r>:
 8007ee4:	b538      	push	{r3, r4, r5, lr}
 8007ee6:	4d07      	ldr	r5, [pc, #28]	; (8007f04 <_read_r+0x20>)
 8007ee8:	4604      	mov	r4, r0
 8007eea:	4608      	mov	r0, r1
 8007eec:	4611      	mov	r1, r2
 8007eee:	2200      	movs	r2, #0
 8007ef0:	602a      	str	r2, [r5, #0]
 8007ef2:	461a      	mov	r2, r3
 8007ef4:	f7fa fa5c 	bl	80023b0 <_read>
 8007ef8:	1c43      	adds	r3, r0, #1
 8007efa:	d102      	bne.n	8007f02 <_read_r+0x1e>
 8007efc:	682b      	ldr	r3, [r5, #0]
 8007efe:	b103      	cbz	r3, 8007f02 <_read_r+0x1e>
 8007f00:	6023      	str	r3, [r4, #0]
 8007f02:	bd38      	pop	{r3, r4, r5, pc}
 8007f04:	200002a0 	.word	0x200002a0

08007f08 <atan2>:
 8007f08:	f000 b802 	b.w	8007f10 <__ieee754_atan2>
 8007f0c:	0000      	movs	r0, r0
	...

08007f10 <__ieee754_atan2>:
 8007f10:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007f14:	ec57 6b11 	vmov	r6, r7, d1
 8007f18:	4273      	negs	r3, r6
 8007f1a:	f8df e184 	ldr.w	lr, [pc, #388]	; 80080a0 <__ieee754_atan2+0x190>
 8007f1e:	f027 4200 	bic.w	r2, r7, #2147483648	; 0x80000000
 8007f22:	4333      	orrs	r3, r6
 8007f24:	ea42 73d3 	orr.w	r3, r2, r3, lsr #31
 8007f28:	4573      	cmp	r3, lr
 8007f2a:	ec51 0b10 	vmov	r0, r1, d0
 8007f2e:	ee11 8a10 	vmov	r8, s2
 8007f32:	d80a      	bhi.n	8007f4a <__ieee754_atan2+0x3a>
 8007f34:	4244      	negs	r4, r0
 8007f36:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8007f3a:	4304      	orrs	r4, r0
 8007f3c:	ea43 74d4 	orr.w	r4, r3, r4, lsr #31
 8007f40:	4574      	cmp	r4, lr
 8007f42:	ee10 9a10 	vmov	r9, s0
 8007f46:	468c      	mov	ip, r1
 8007f48:	d907      	bls.n	8007f5a <__ieee754_atan2+0x4a>
 8007f4a:	4632      	mov	r2, r6
 8007f4c:	463b      	mov	r3, r7
 8007f4e:	f7f8 f9bd 	bl	80002cc <__adddf3>
 8007f52:	ec41 0b10 	vmov	d0, r0, r1
 8007f56:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007f5a:	f107 4440 	add.w	r4, r7, #3221225472	; 0xc0000000
 8007f5e:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 8007f62:	4334      	orrs	r4, r6
 8007f64:	d103      	bne.n	8007f6e <__ieee754_atan2+0x5e>
 8007f66:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007f6a:	f000 b89d 	b.w	80080a8 <atan>
 8007f6e:	17bc      	asrs	r4, r7, #30
 8007f70:	f004 0402 	and.w	r4, r4, #2
 8007f74:	ea53 0909 	orrs.w	r9, r3, r9
 8007f78:	ea44 74d1 	orr.w	r4, r4, r1, lsr #31
 8007f7c:	d107      	bne.n	8007f8e <__ieee754_atan2+0x7e>
 8007f7e:	2c02      	cmp	r4, #2
 8007f80:	d060      	beq.n	8008044 <__ieee754_atan2+0x134>
 8007f82:	2c03      	cmp	r4, #3
 8007f84:	d1e5      	bne.n	8007f52 <__ieee754_atan2+0x42>
 8007f86:	a142      	add	r1, pc, #264	; (adr r1, 8008090 <__ieee754_atan2+0x180>)
 8007f88:	e9d1 0100 	ldrd	r0, r1, [r1]
 8007f8c:	e7e1      	b.n	8007f52 <__ieee754_atan2+0x42>
 8007f8e:	ea52 0808 	orrs.w	r8, r2, r8
 8007f92:	d106      	bne.n	8007fa2 <__ieee754_atan2+0x92>
 8007f94:	f1bc 0f00 	cmp.w	ip, #0
 8007f98:	da5f      	bge.n	800805a <__ieee754_atan2+0x14a>
 8007f9a:	a13f      	add	r1, pc, #252	; (adr r1, 8008098 <__ieee754_atan2+0x188>)
 8007f9c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8007fa0:	e7d7      	b.n	8007f52 <__ieee754_atan2+0x42>
 8007fa2:	4572      	cmp	r2, lr
 8007fa4:	d10f      	bne.n	8007fc6 <__ieee754_atan2+0xb6>
 8007fa6:	4293      	cmp	r3, r2
 8007fa8:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
 8007fac:	d107      	bne.n	8007fbe <__ieee754_atan2+0xae>
 8007fae:	2c02      	cmp	r4, #2
 8007fb0:	d84c      	bhi.n	800804c <__ieee754_atan2+0x13c>
 8007fb2:	4b35      	ldr	r3, [pc, #212]	; (8008088 <__ieee754_atan2+0x178>)
 8007fb4:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
 8007fb8:	e9d4 0100 	ldrd	r0, r1, [r4]
 8007fbc:	e7c9      	b.n	8007f52 <__ieee754_atan2+0x42>
 8007fbe:	2c02      	cmp	r4, #2
 8007fc0:	d848      	bhi.n	8008054 <__ieee754_atan2+0x144>
 8007fc2:	4b32      	ldr	r3, [pc, #200]	; (800808c <__ieee754_atan2+0x17c>)
 8007fc4:	e7f6      	b.n	8007fb4 <__ieee754_atan2+0xa4>
 8007fc6:	4573      	cmp	r3, lr
 8007fc8:	d0e4      	beq.n	8007f94 <__ieee754_atan2+0x84>
 8007fca:	1a9b      	subs	r3, r3, r2
 8007fcc:	f1b3 7f74 	cmp.w	r3, #63963136	; 0x3d00000
 8007fd0:	ea4f 5223 	mov.w	r2, r3, asr #20
 8007fd4:	da1e      	bge.n	8008014 <__ieee754_atan2+0x104>
 8007fd6:	2f00      	cmp	r7, #0
 8007fd8:	da01      	bge.n	8007fde <__ieee754_atan2+0xce>
 8007fda:	323c      	adds	r2, #60	; 0x3c
 8007fdc:	db1e      	blt.n	800801c <__ieee754_atan2+0x10c>
 8007fde:	4632      	mov	r2, r6
 8007fe0:	463b      	mov	r3, r7
 8007fe2:	f7f8 fc53 	bl	800088c <__aeabi_ddiv>
 8007fe6:	ec41 0b10 	vmov	d0, r0, r1
 8007fea:	f000 f9fd 	bl	80083e8 <fabs>
 8007fee:	f000 f85b 	bl	80080a8 <atan>
 8007ff2:	ec51 0b10 	vmov	r0, r1, d0
 8007ff6:	2c01      	cmp	r4, #1
 8007ff8:	d013      	beq.n	8008022 <__ieee754_atan2+0x112>
 8007ffa:	2c02      	cmp	r4, #2
 8007ffc:	d015      	beq.n	800802a <__ieee754_atan2+0x11a>
 8007ffe:	2c00      	cmp	r4, #0
 8008000:	d0a7      	beq.n	8007f52 <__ieee754_atan2+0x42>
 8008002:	a319      	add	r3, pc, #100	; (adr r3, 8008068 <__ieee754_atan2+0x158>)
 8008004:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008008:	f7f8 f95e 	bl	80002c8 <__aeabi_dsub>
 800800c:	a318      	add	r3, pc, #96	; (adr r3, 8008070 <__ieee754_atan2+0x160>)
 800800e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008012:	e014      	b.n	800803e <__ieee754_atan2+0x12e>
 8008014:	a118      	add	r1, pc, #96	; (adr r1, 8008078 <__ieee754_atan2+0x168>)
 8008016:	e9d1 0100 	ldrd	r0, r1, [r1]
 800801a:	e7ec      	b.n	8007ff6 <__ieee754_atan2+0xe6>
 800801c:	2000      	movs	r0, #0
 800801e:	2100      	movs	r1, #0
 8008020:	e7e9      	b.n	8007ff6 <__ieee754_atan2+0xe6>
 8008022:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8008026:	4619      	mov	r1, r3
 8008028:	e793      	b.n	8007f52 <__ieee754_atan2+0x42>
 800802a:	a30f      	add	r3, pc, #60	; (adr r3, 8008068 <__ieee754_atan2+0x158>)
 800802c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008030:	f7f8 f94a 	bl	80002c8 <__aeabi_dsub>
 8008034:	4602      	mov	r2, r0
 8008036:	460b      	mov	r3, r1
 8008038:	a10d      	add	r1, pc, #52	; (adr r1, 8008070 <__ieee754_atan2+0x160>)
 800803a:	e9d1 0100 	ldrd	r0, r1, [r1]
 800803e:	f7f8 f943 	bl	80002c8 <__aeabi_dsub>
 8008042:	e786      	b.n	8007f52 <__ieee754_atan2+0x42>
 8008044:	a10a      	add	r1, pc, #40	; (adr r1, 8008070 <__ieee754_atan2+0x160>)
 8008046:	e9d1 0100 	ldrd	r0, r1, [r1]
 800804a:	e782      	b.n	8007f52 <__ieee754_atan2+0x42>
 800804c:	a10c      	add	r1, pc, #48	; (adr r1, 8008080 <__ieee754_atan2+0x170>)
 800804e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8008052:	e77e      	b.n	8007f52 <__ieee754_atan2+0x42>
 8008054:	2000      	movs	r0, #0
 8008056:	2100      	movs	r1, #0
 8008058:	e77b      	b.n	8007f52 <__ieee754_atan2+0x42>
 800805a:	a107      	add	r1, pc, #28	; (adr r1, 8008078 <__ieee754_atan2+0x168>)
 800805c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8008060:	e777      	b.n	8007f52 <__ieee754_atan2+0x42>
 8008062:	bf00      	nop
 8008064:	f3af 8000 	nop.w
 8008068:	33145c07 	.word	0x33145c07
 800806c:	3ca1a626 	.word	0x3ca1a626
 8008070:	54442d18 	.word	0x54442d18
 8008074:	400921fb 	.word	0x400921fb
 8008078:	54442d18 	.word	0x54442d18
 800807c:	3ff921fb 	.word	0x3ff921fb
 8008080:	54442d18 	.word	0x54442d18
 8008084:	3fe921fb 	.word	0x3fe921fb
 8008088:	080088e0 	.word	0x080088e0
 800808c:	080088f8 	.word	0x080088f8
 8008090:	54442d18 	.word	0x54442d18
 8008094:	c00921fb 	.word	0xc00921fb
 8008098:	54442d18 	.word	0x54442d18
 800809c:	bff921fb 	.word	0xbff921fb
 80080a0:	7ff00000 	.word	0x7ff00000
 80080a4:	00000000 	.word	0x00000000

080080a8 <atan>:
 80080a8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80080ac:	ec55 4b10 	vmov	r4, r5, d0
 80080b0:	4bc3      	ldr	r3, [pc, #780]	; (80083c0 <atan+0x318>)
 80080b2:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 80080b6:	429e      	cmp	r6, r3
 80080b8:	46ab      	mov	fp, r5
 80080ba:	dd18      	ble.n	80080ee <atan+0x46>
 80080bc:	4bc1      	ldr	r3, [pc, #772]	; (80083c4 <atan+0x31c>)
 80080be:	429e      	cmp	r6, r3
 80080c0:	dc01      	bgt.n	80080c6 <atan+0x1e>
 80080c2:	d109      	bne.n	80080d8 <atan+0x30>
 80080c4:	b144      	cbz	r4, 80080d8 <atan+0x30>
 80080c6:	4622      	mov	r2, r4
 80080c8:	462b      	mov	r3, r5
 80080ca:	4620      	mov	r0, r4
 80080cc:	4629      	mov	r1, r5
 80080ce:	f7f8 f8fd 	bl	80002cc <__adddf3>
 80080d2:	4604      	mov	r4, r0
 80080d4:	460d      	mov	r5, r1
 80080d6:	e006      	b.n	80080e6 <atan+0x3e>
 80080d8:	f1bb 0f00 	cmp.w	fp, #0
 80080dc:	f300 8131 	bgt.w	8008342 <atan+0x29a>
 80080e0:	a59b      	add	r5, pc, #620	; (adr r5, 8008350 <atan+0x2a8>)
 80080e2:	e9d5 4500 	ldrd	r4, r5, [r5]
 80080e6:	ec45 4b10 	vmov	d0, r4, r5
 80080ea:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80080ee:	4bb6      	ldr	r3, [pc, #728]	; (80083c8 <atan+0x320>)
 80080f0:	429e      	cmp	r6, r3
 80080f2:	dc14      	bgt.n	800811e <atan+0x76>
 80080f4:	f1a3 73de 	sub.w	r3, r3, #29097984	; 0x1bc0000
 80080f8:	429e      	cmp	r6, r3
 80080fa:	dc0d      	bgt.n	8008118 <atan+0x70>
 80080fc:	a396      	add	r3, pc, #600	; (adr r3, 8008358 <atan+0x2b0>)
 80080fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008102:	ee10 0a10 	vmov	r0, s0
 8008106:	4629      	mov	r1, r5
 8008108:	f7f8 f8e0 	bl	80002cc <__adddf3>
 800810c:	4baf      	ldr	r3, [pc, #700]	; (80083cc <atan+0x324>)
 800810e:	2200      	movs	r2, #0
 8008110:	f7f8 fd22 	bl	8000b58 <__aeabi_dcmpgt>
 8008114:	2800      	cmp	r0, #0
 8008116:	d1e6      	bne.n	80080e6 <atan+0x3e>
 8008118:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
 800811c:	e02b      	b.n	8008176 <atan+0xce>
 800811e:	f000 f963 	bl	80083e8 <fabs>
 8008122:	4bab      	ldr	r3, [pc, #684]	; (80083d0 <atan+0x328>)
 8008124:	429e      	cmp	r6, r3
 8008126:	ec55 4b10 	vmov	r4, r5, d0
 800812a:	f300 80bf 	bgt.w	80082ac <atan+0x204>
 800812e:	f5a3 2350 	sub.w	r3, r3, #851968	; 0xd0000
 8008132:	429e      	cmp	r6, r3
 8008134:	f300 80a0 	bgt.w	8008278 <atan+0x1d0>
 8008138:	ee10 2a10 	vmov	r2, s0
 800813c:	ee10 0a10 	vmov	r0, s0
 8008140:	462b      	mov	r3, r5
 8008142:	4629      	mov	r1, r5
 8008144:	f7f8 f8c2 	bl	80002cc <__adddf3>
 8008148:	4ba0      	ldr	r3, [pc, #640]	; (80083cc <atan+0x324>)
 800814a:	2200      	movs	r2, #0
 800814c:	f7f8 f8bc 	bl	80002c8 <__aeabi_dsub>
 8008150:	2200      	movs	r2, #0
 8008152:	4606      	mov	r6, r0
 8008154:	460f      	mov	r7, r1
 8008156:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800815a:	4620      	mov	r0, r4
 800815c:	4629      	mov	r1, r5
 800815e:	f7f8 f8b5 	bl	80002cc <__adddf3>
 8008162:	4602      	mov	r2, r0
 8008164:	460b      	mov	r3, r1
 8008166:	4630      	mov	r0, r6
 8008168:	4639      	mov	r1, r7
 800816a:	f7f8 fb8f 	bl	800088c <__aeabi_ddiv>
 800816e:	f04f 0a00 	mov.w	sl, #0
 8008172:	4604      	mov	r4, r0
 8008174:	460d      	mov	r5, r1
 8008176:	4622      	mov	r2, r4
 8008178:	462b      	mov	r3, r5
 800817a:	4620      	mov	r0, r4
 800817c:	4629      	mov	r1, r5
 800817e:	f7f8 fa5b 	bl	8000638 <__aeabi_dmul>
 8008182:	4602      	mov	r2, r0
 8008184:	460b      	mov	r3, r1
 8008186:	4680      	mov	r8, r0
 8008188:	4689      	mov	r9, r1
 800818a:	f7f8 fa55 	bl	8000638 <__aeabi_dmul>
 800818e:	a374      	add	r3, pc, #464	; (adr r3, 8008360 <atan+0x2b8>)
 8008190:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008194:	4606      	mov	r6, r0
 8008196:	460f      	mov	r7, r1
 8008198:	f7f8 fa4e 	bl	8000638 <__aeabi_dmul>
 800819c:	a372      	add	r3, pc, #456	; (adr r3, 8008368 <atan+0x2c0>)
 800819e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80081a2:	f7f8 f893 	bl	80002cc <__adddf3>
 80081a6:	4632      	mov	r2, r6
 80081a8:	463b      	mov	r3, r7
 80081aa:	f7f8 fa45 	bl	8000638 <__aeabi_dmul>
 80081ae:	a370      	add	r3, pc, #448	; (adr r3, 8008370 <atan+0x2c8>)
 80081b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80081b4:	f7f8 f88a 	bl	80002cc <__adddf3>
 80081b8:	4632      	mov	r2, r6
 80081ba:	463b      	mov	r3, r7
 80081bc:	f7f8 fa3c 	bl	8000638 <__aeabi_dmul>
 80081c0:	a36d      	add	r3, pc, #436	; (adr r3, 8008378 <atan+0x2d0>)
 80081c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80081c6:	f7f8 f881 	bl	80002cc <__adddf3>
 80081ca:	4632      	mov	r2, r6
 80081cc:	463b      	mov	r3, r7
 80081ce:	f7f8 fa33 	bl	8000638 <__aeabi_dmul>
 80081d2:	a36b      	add	r3, pc, #428	; (adr r3, 8008380 <atan+0x2d8>)
 80081d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80081d8:	f7f8 f878 	bl	80002cc <__adddf3>
 80081dc:	4632      	mov	r2, r6
 80081de:	463b      	mov	r3, r7
 80081e0:	f7f8 fa2a 	bl	8000638 <__aeabi_dmul>
 80081e4:	a368      	add	r3, pc, #416	; (adr r3, 8008388 <atan+0x2e0>)
 80081e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80081ea:	f7f8 f86f 	bl	80002cc <__adddf3>
 80081ee:	4642      	mov	r2, r8
 80081f0:	464b      	mov	r3, r9
 80081f2:	f7f8 fa21 	bl	8000638 <__aeabi_dmul>
 80081f6:	a366      	add	r3, pc, #408	; (adr r3, 8008390 <atan+0x2e8>)
 80081f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80081fc:	4680      	mov	r8, r0
 80081fe:	4689      	mov	r9, r1
 8008200:	4630      	mov	r0, r6
 8008202:	4639      	mov	r1, r7
 8008204:	f7f8 fa18 	bl	8000638 <__aeabi_dmul>
 8008208:	a363      	add	r3, pc, #396	; (adr r3, 8008398 <atan+0x2f0>)
 800820a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800820e:	f7f8 f85b 	bl	80002c8 <__aeabi_dsub>
 8008212:	4632      	mov	r2, r6
 8008214:	463b      	mov	r3, r7
 8008216:	f7f8 fa0f 	bl	8000638 <__aeabi_dmul>
 800821a:	a361      	add	r3, pc, #388	; (adr r3, 80083a0 <atan+0x2f8>)
 800821c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008220:	f7f8 f852 	bl	80002c8 <__aeabi_dsub>
 8008224:	4632      	mov	r2, r6
 8008226:	463b      	mov	r3, r7
 8008228:	f7f8 fa06 	bl	8000638 <__aeabi_dmul>
 800822c:	a35e      	add	r3, pc, #376	; (adr r3, 80083a8 <atan+0x300>)
 800822e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008232:	f7f8 f849 	bl	80002c8 <__aeabi_dsub>
 8008236:	4632      	mov	r2, r6
 8008238:	463b      	mov	r3, r7
 800823a:	f7f8 f9fd 	bl	8000638 <__aeabi_dmul>
 800823e:	a35c      	add	r3, pc, #368	; (adr r3, 80083b0 <atan+0x308>)
 8008240:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008244:	f7f8 f840 	bl	80002c8 <__aeabi_dsub>
 8008248:	4632      	mov	r2, r6
 800824a:	463b      	mov	r3, r7
 800824c:	f7f8 f9f4 	bl	8000638 <__aeabi_dmul>
 8008250:	4602      	mov	r2, r0
 8008252:	460b      	mov	r3, r1
 8008254:	4640      	mov	r0, r8
 8008256:	4649      	mov	r1, r9
 8008258:	f7f8 f838 	bl	80002cc <__adddf3>
 800825c:	4622      	mov	r2, r4
 800825e:	462b      	mov	r3, r5
 8008260:	f7f8 f9ea 	bl	8000638 <__aeabi_dmul>
 8008264:	f1ba 3fff 	cmp.w	sl, #4294967295	; 0xffffffff
 8008268:	4602      	mov	r2, r0
 800826a:	460b      	mov	r3, r1
 800826c:	d14b      	bne.n	8008306 <atan+0x25e>
 800826e:	4620      	mov	r0, r4
 8008270:	4629      	mov	r1, r5
 8008272:	f7f8 f829 	bl	80002c8 <__aeabi_dsub>
 8008276:	e72c      	b.n	80080d2 <atan+0x2a>
 8008278:	ee10 0a10 	vmov	r0, s0
 800827c:	4b53      	ldr	r3, [pc, #332]	; (80083cc <atan+0x324>)
 800827e:	2200      	movs	r2, #0
 8008280:	4629      	mov	r1, r5
 8008282:	f7f8 f821 	bl	80002c8 <__aeabi_dsub>
 8008286:	4b51      	ldr	r3, [pc, #324]	; (80083cc <atan+0x324>)
 8008288:	4606      	mov	r6, r0
 800828a:	460f      	mov	r7, r1
 800828c:	2200      	movs	r2, #0
 800828e:	4620      	mov	r0, r4
 8008290:	4629      	mov	r1, r5
 8008292:	f7f8 f81b 	bl	80002cc <__adddf3>
 8008296:	4602      	mov	r2, r0
 8008298:	460b      	mov	r3, r1
 800829a:	4630      	mov	r0, r6
 800829c:	4639      	mov	r1, r7
 800829e:	f7f8 faf5 	bl	800088c <__aeabi_ddiv>
 80082a2:	f04f 0a01 	mov.w	sl, #1
 80082a6:	4604      	mov	r4, r0
 80082a8:	460d      	mov	r5, r1
 80082aa:	e764      	b.n	8008176 <atan+0xce>
 80082ac:	4b49      	ldr	r3, [pc, #292]	; (80083d4 <atan+0x32c>)
 80082ae:	429e      	cmp	r6, r3
 80082b0:	da1d      	bge.n	80082ee <atan+0x246>
 80082b2:	ee10 0a10 	vmov	r0, s0
 80082b6:	4b48      	ldr	r3, [pc, #288]	; (80083d8 <atan+0x330>)
 80082b8:	2200      	movs	r2, #0
 80082ba:	4629      	mov	r1, r5
 80082bc:	f7f8 f804 	bl	80002c8 <__aeabi_dsub>
 80082c0:	4b45      	ldr	r3, [pc, #276]	; (80083d8 <atan+0x330>)
 80082c2:	4606      	mov	r6, r0
 80082c4:	460f      	mov	r7, r1
 80082c6:	2200      	movs	r2, #0
 80082c8:	4620      	mov	r0, r4
 80082ca:	4629      	mov	r1, r5
 80082cc:	f7f8 f9b4 	bl	8000638 <__aeabi_dmul>
 80082d0:	4b3e      	ldr	r3, [pc, #248]	; (80083cc <atan+0x324>)
 80082d2:	2200      	movs	r2, #0
 80082d4:	f7f7 fffa 	bl	80002cc <__adddf3>
 80082d8:	4602      	mov	r2, r0
 80082da:	460b      	mov	r3, r1
 80082dc:	4630      	mov	r0, r6
 80082de:	4639      	mov	r1, r7
 80082e0:	f7f8 fad4 	bl	800088c <__aeabi_ddiv>
 80082e4:	f04f 0a02 	mov.w	sl, #2
 80082e8:	4604      	mov	r4, r0
 80082ea:	460d      	mov	r5, r1
 80082ec:	e743      	b.n	8008176 <atan+0xce>
 80082ee:	462b      	mov	r3, r5
 80082f0:	ee10 2a10 	vmov	r2, s0
 80082f4:	4939      	ldr	r1, [pc, #228]	; (80083dc <atan+0x334>)
 80082f6:	2000      	movs	r0, #0
 80082f8:	f7f8 fac8 	bl	800088c <__aeabi_ddiv>
 80082fc:	f04f 0a03 	mov.w	sl, #3
 8008300:	4604      	mov	r4, r0
 8008302:	460d      	mov	r5, r1
 8008304:	e737      	b.n	8008176 <atan+0xce>
 8008306:	4b36      	ldr	r3, [pc, #216]	; (80083e0 <atan+0x338>)
 8008308:	4e36      	ldr	r6, [pc, #216]	; (80083e4 <atan+0x33c>)
 800830a:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 800830e:	eb03 0aca 	add.w	sl, r3, sl, lsl #3
 8008312:	e9da 2300 	ldrd	r2, r3, [sl]
 8008316:	f7f7 ffd7 	bl	80002c8 <__aeabi_dsub>
 800831a:	4622      	mov	r2, r4
 800831c:	462b      	mov	r3, r5
 800831e:	f7f7 ffd3 	bl	80002c8 <__aeabi_dsub>
 8008322:	4602      	mov	r2, r0
 8008324:	460b      	mov	r3, r1
 8008326:	e9d6 0100 	ldrd	r0, r1, [r6]
 800832a:	f7f7 ffcd 	bl	80002c8 <__aeabi_dsub>
 800832e:	f1bb 0f00 	cmp.w	fp, #0
 8008332:	4604      	mov	r4, r0
 8008334:	460d      	mov	r5, r1
 8008336:	f6bf aed6 	bge.w	80080e6 <atan+0x3e>
 800833a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800833e:	461d      	mov	r5, r3
 8008340:	e6d1      	b.n	80080e6 <atan+0x3e>
 8008342:	a51d      	add	r5, pc, #116	; (adr r5, 80083b8 <atan+0x310>)
 8008344:	e9d5 4500 	ldrd	r4, r5, [r5]
 8008348:	e6cd      	b.n	80080e6 <atan+0x3e>
 800834a:	bf00      	nop
 800834c:	f3af 8000 	nop.w
 8008350:	54442d18 	.word	0x54442d18
 8008354:	bff921fb 	.word	0xbff921fb
 8008358:	8800759c 	.word	0x8800759c
 800835c:	7e37e43c 	.word	0x7e37e43c
 8008360:	e322da11 	.word	0xe322da11
 8008364:	3f90ad3a 	.word	0x3f90ad3a
 8008368:	24760deb 	.word	0x24760deb
 800836c:	3fa97b4b 	.word	0x3fa97b4b
 8008370:	a0d03d51 	.word	0xa0d03d51
 8008374:	3fb10d66 	.word	0x3fb10d66
 8008378:	c54c206e 	.word	0xc54c206e
 800837c:	3fb745cd 	.word	0x3fb745cd
 8008380:	920083ff 	.word	0x920083ff
 8008384:	3fc24924 	.word	0x3fc24924
 8008388:	5555550d 	.word	0x5555550d
 800838c:	3fd55555 	.word	0x3fd55555
 8008390:	2c6a6c2f 	.word	0x2c6a6c2f
 8008394:	bfa2b444 	.word	0xbfa2b444
 8008398:	52defd9a 	.word	0x52defd9a
 800839c:	3fadde2d 	.word	0x3fadde2d
 80083a0:	af749a6d 	.word	0xaf749a6d
 80083a4:	3fb3b0f2 	.word	0x3fb3b0f2
 80083a8:	fe231671 	.word	0xfe231671
 80083ac:	3fbc71c6 	.word	0x3fbc71c6
 80083b0:	9998ebc4 	.word	0x9998ebc4
 80083b4:	3fc99999 	.word	0x3fc99999
 80083b8:	54442d18 	.word	0x54442d18
 80083bc:	3ff921fb 	.word	0x3ff921fb
 80083c0:	440fffff 	.word	0x440fffff
 80083c4:	7ff00000 	.word	0x7ff00000
 80083c8:	3fdbffff 	.word	0x3fdbffff
 80083cc:	3ff00000 	.word	0x3ff00000
 80083d0:	3ff2ffff 	.word	0x3ff2ffff
 80083d4:	40038000 	.word	0x40038000
 80083d8:	3ff80000 	.word	0x3ff80000
 80083dc:	bff00000 	.word	0xbff00000
 80083e0:	08008930 	.word	0x08008930
 80083e4:	08008910 	.word	0x08008910

080083e8 <fabs>:
 80083e8:	ec51 0b10 	vmov	r0, r1, d0
 80083ec:	ee10 2a10 	vmov	r2, s0
 80083f0:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 80083f4:	ec43 2b10 	vmov	d0, r2, r3
 80083f8:	4770      	bx	lr
	...

080083fc <_init>:
 80083fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80083fe:	bf00      	nop
 8008400:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008402:	bc08      	pop	{r3}
 8008404:	469e      	mov	lr, r3
 8008406:	4770      	bx	lr

08008408 <_fini>:
 8008408:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800840a:	bf00      	nop
 800840c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800840e:	bc08      	pop	{r3}
 8008410:	469e      	mov	lr, r3
 8008412:	4770      	bx	lr
